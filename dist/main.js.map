{"mappings":";;;;;;;;;AIIO,MAAM;IACT;;;;;;;;;;;;;;;;;;;IAmBA,GAGA,YAAY,MAAM,CAAE;QAChB,IAAI,CAAC,OAAO,GAAG,CAAC;QAEhB,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,IAAI,EAAE,QAAQ,cACtB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI;IAGvC;IAEA,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,OAAO;IACvB;IAEA,cAAc,KAAK,EAAC;QAChB,OAAO,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,OAAO;IACjD;IAEA,cAAc,KAAK,EAAC;QAChB,IAAI,CAAC,OAAO,GAAG,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;IAC7C;IAEA,aAAa,KAAK,EAAC;QACf,OAAO,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,OAAO;IACjD;IAEA,gBAAgB,KAAK,EAAC;QAClB,OAAO,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,OAAO;IACjD;IAEA,gBAAgB,KAAK,EAAC;QAClB,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QAAU;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;IAC7C;IAEA,gBAAgB,cAAc,EAAC;QAG3B,IAAI,kBAAkB,IAAI,CAAC,QAAQ;QACnC,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,QAAQ,GAAG;IAGpB;IAEA,IAAI,OAAO,KAAK,EAAC;QACb,IAAG,CAAC,OAAO;QACX,IAAI,kBAAkB,IAAI,CAAC,WAAW;QACtC,IAAI,CAAC,OAAO,GAAG,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;QACzC,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,GACxB,IAAI,CAAC,WAAW,GAAG;IAE3B;IAEA,IAAI,cAAa;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW;IACnC;IAEA,IAAI,YAAY,KAAK,EAAC;QAClB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC/B;IACA,IAAI,IAAG;QACH,OAAO,IAAI,CAAC,WAAW;IAC3B;IAEA,IAAI,EAAE,KAAK,EAAC;QACR,IAAI,CAAC,WAAW,GAAG;IACvB;IAEA,IAAI,cAAa;QAEb,IAAI,cAAc,IAAI,CAAC,OAAO,EAAE;QAEhC,IAAG,uBAAuB,QACtB,cAAe,IAAI,KAAK;QAG5B,OAAO;IAEX;IAEA,IAAI,YAAY,KAAK,EAAC;QAGlB,IAAG,iBAAiB,MAChB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;aAE3B,IAAG;YACC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,KAAK;QACxC,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;QAChB;IAER;IAEA,IAAI,WAAU;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ;IAChC;IAEA,IAAI,SAAS,KAAK,EAAC;QACf,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG;IAC5B;IAEA,IAAI,kBAAiB;QACjB,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,GAAK,OAAO;QACpD,OAAO,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI;IAC/D;IAEA,IAAI,gBAAgB,KAAK,EAAC;QACtB,IAAG,SAAS,iBAAiB,MACzB,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,SAAS,CAAC;IAEtD;IACA,IAAI,IAAG;QACH,OAAO,IAAI,CAAC,eAAe;IAC/B;IAEA,IAAI,EAAE,KAAK,EAAC;QACR,IAAI,CAAC,eAAe,GAAG;IAC3B;IAEA,IAAI,YAAW;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS;IACjC;IACA,IAAI,UAAU,KAAK,EAAC;QAChB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;IAC7B;IAEA,IAAI,eAAc;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY;IACpC;IACA,IAAI,aAAa,KAAK,EAAC;QACnB,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG;IAChC;IAEA,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;IAC9B;IACA,IAAI,OAAO,KAAK,EAAC;QACb,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;IAC1B;IAEA,IAAI,aAAY;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU;IAClC;IACA,IAAI,WAAW,KAAK,EAAC;QACjB,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG;IAC9B;IAEA,IAAI,QAAO;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK;IAC7B;IACA,IAAI,MAAM,KAAK,EAAC;QACZ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG;IACzB;IAEA,GAAG,KAAK,EAAC;QACL,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB;IAEA,MAAM,KAAK,EAAC;QACR,8CAA8C;QAG9C,IAAI,KAAK,IAAI,CAAC,MAAM,IAAI,MAAM,MAAM;QACpC,IAAI,MAAM,IAAI,CAAC,UAAU,IAAI,MAAM,UAAU;QAC7C,IAAI,MAAM,IAAI,CAAC,KAAK,IAAI,MAAM,KAAK;QACnC,IAAI,MAAM,IAAI,CAAC,MAAM,IAAI,MAAM,MAAM;QACrC,IAAI,KAAK,IAAI,CAAC,WAAW,IAAI,MAAM,WAAW;QAC9C,IAAI,KAAK,IAAI,CAAC,eAAe,IAAI,MAAM,eAAe;QAEtD,IAAI,IAAI;YAAC;YAAI;YAAK;YAAK;YAAK;YAAI;SAAG;QACnC,IAAG,CAAE,EAAE,KAAK,CAAC,CAAA,IAAK,KAAK,OAAS,OAAO;QAEvC,OAAO;IAGX;IAGA,QAAQ,iBAAe,IAAI,EAAC;QACxB,6FAA6F;QAC7F,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,iBACR,iBAAiB,IAAI;QAGzB,IAAI,IAAI,CAAC,SAAS,IAAI,iBAAiB,IAAI,CAAC,SAAS,EAAK,OAAO;QACjE,IAAI,IAAI,CAAC,YAAY,IAAI,kBAAkB,IAAI,CAAC,YAAY,EAAK,OAAO;QACxE,OAAO;IACX;IAEA,GAAG,KAAK,EAAE,cAAc,EAAC;QAGrB,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,MAAM,WAAW,EAAI,OAAO;QACrD,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,WAAW,EAAI,OAAO;QAErD,IAAK,IAAI,CAAC,WAAW,GAAG,MAAM,WAAW,EAAG,OAAO;QACnD,IAAK,IAAI,CAAC,WAAW,GAAG,MAAM,WAAW,EAAG,OAAO;QAGnD,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,MAAM,eAAe,EAAI,OAAO;QAC7D,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,MAAM,eAAe,EAAI,OAAO;QAE7D,IAAK,IAAI,CAAC,eAAe,GAAG,MAAM,eAAe,EAAG,OAAO;QAC3D,IAAK,IAAI,CAAC,eAAe,GAAG,MAAM,eAAe,EAAG,OAAO;QAE3D,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,MAAM,WAAW,EAAI,OAAO;QACrD,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,WAAW,EAAI,OAAO;QAErD,IAAK,IAAI,CAAC,WAAW,GAAG,MAAM,WAAW,EAAG,OAAO;QACnD,IAAK,IAAI,CAAC,WAAW,GAAG,MAAM,WAAW,EAAG,OAAO;QAEnD,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,MAAM,QAAQ,EAAI,OAAO;QAC/C,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,QAAQ,EAAI,OAAO;QAE/C,IAAK,IAAI,CAAC,QAAQ,GAAG,MAAM,QAAQ,EAAG,OAAO;QAC7C,IAAK,IAAI,CAAC,QAAQ,GAAG,MAAM,QAAQ,EAAG,OAAO;QAE7C,OAAO;IACX;IAEA,GAAG,KAAK,EAAC;QAEL,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,MAAM,WAAW,EAAI,OAAO;QACrD,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,WAAW,EAAI,OAAO;QAErD,IAAK,IAAI,CAAC,WAAW,GAAG,MAAM,WAAW,EAAG,OAAO;QACnD,IAAK,IAAI,CAAC,WAAW,GAAG,MAAM,WAAW,EAAG,OAAO;QAGnD,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,MAAM,eAAe,EAAI,OAAO;QAC7D,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,MAAM,eAAe,EAAI,OAAO;QAE7D,IAAK,IAAI,CAAC,eAAe,GAAG,MAAM,eAAe,EAAG,OAAO;QAC3D,IAAK,IAAI,CAAC,eAAe,GAAG,MAAM,eAAe,EAAG,OAAO;QAG3D,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,MAAM,WAAW,EAAI,OAAO;QACrD,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,WAAW,EAAI,OAAO;QAErD,IAAK,IAAI,CAAC,WAAW,GAAG,MAAM,WAAW,EAAG,OAAO;QACnD,IAAK,IAAI,CAAC,WAAW,GAAG,MAAM,WAAW,EAAG,OAAO;QAEnD,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,MAAM,QAAQ,EAAI,OAAO;QAC/C,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,QAAQ,EAAI,OAAO;QAE/C,IAAK,IAAI,CAAC,QAAQ,GAAG,MAAM,QAAQ,EAAG,OAAO;QAC7C,IAAK,IAAI,CAAC,QAAQ,GAAG,MAAM,QAAQ,EAAG,OAAO;QAE7C,OAAO;IACX;AAGJ;;;;ADnRO,MAAM;IACT;;;;;;;;IAQA,GACA,YAAY,UAAU,EAAE,KAAK,EAAE,aAAW,eAAe,EAAE,aAAa,CAAE;QAItE,IAAI,CAAC,OAAO,GAAG;YACX,SAAS;YACT,OAAO,OAAO,CAAA,GAAA,SAAK;YACnB,UAAU;gBACN,SAAS;gBACT,YAAY;gBACZ,OAAO;YACX;YACA,cAAc;YACd,UAAU;YACV,UAAU;YACV,OAAO;QACX;QAEA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,yCAAS;QAE7B,IAAI,CAAC,MAAM,GAAG;IAEd;IAIJ,WAAU;QACN,IAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EACrB,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;aAE1D,OAAO,OAAO,IAAI,CAAC,KAAK;IAEhC;IAEA,SAAQ;QAEJ,OAAO,IAAI,CAAC,KAAK;IACrB;IAIA,uDAAuD;IACvD,sBAAsB;IACtB,uDAAuD;IAEvD,IAAI,cAAa;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ;IAChC;IACA,IAAI,YAAY,KAAK,EAAC;QAClB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG;IAC5B;IACA,IAAI,YAAW;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;IAC9B;IACA,IAAI,UAAU,KAAK,EAAC;QAChB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;IAC1B;IACA,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;IAC9B;IACA,IAAI,OAAO,KAAK,EAAC;QACb,IAAI,CAAC,OAAO,CAAC,MAAM,GAAE;IACzB;IACA,IAAI,WAAU;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ;IAChC;IACA,IAAI,SAAS,KAAK,EAAC;QACf,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,qCAAe;QAC3C,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,qCAAe;IACvC;IAEJ,IAAI,QAAO;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK;IAC7B;IAEA,IAAI,MAAM,KAAK,EAAC;QACZ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG;IACrB;IAGJ,IAAI,SAAQ;QAER,IAAI,SAAS,IAAI,CAAC,OAAO;QACzB,OAAO;IAEX;IAEA,IAAI,OAAM;QACN,OAAO,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM;IAC7C;IAGA,uDAAuD;IACvD,sBAAsB;IACtB,uDAAuD;IAEvD,IAAI,aAAY;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU;IACzC;IACA,IAAI,WAAW,KAAK,EAAC;QACjB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,GAAG;IAC5C;IAGA,uDAAuD;IACvD,wBAAwB;IACxB,uDAAuD;IAEvD,IAAI,IAAG;QACH,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;IACzB;IACA,IAAI,EAAE,KAAK,EAAC;QACP,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG;IACtB;IACA,IAAI,QAAO;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK;IACpC;IACA,IAAI,MAAM,KAAK,EAAC;QAEZ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,qCAAe;QAC3C,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,qCAAe;IAE3C;IACA,IAAI,QAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK;IAC9B;IACA,IAAI,MAAM,KAAK,EAAC;QACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG;IAC1B;IACA,IAAI,aAAY;QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU;IACnC;IACA,IAAI,WAAW,KAAK,EAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG;IAC/B;IACA,IAAI,cAAa;QACb,IAAI,CAAC,QAAQ,CAAC,WAAW;IAC7B;IACA,IAAI,YAAY,KAAK,EAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG;IAChC;IACA,IAAI,kBAAiB;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe;IACxC;IACA,IAAI,gBAAgB,KAAK,EAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG;IACpC;IACA,IAAI,IAAG;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW;IACpC;IACA,IAAI,EAAE,KAAK,EAAC;QACR,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG;IAChC;IACA,IAAI,IAAG;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe;IACxC;IACA,IAAI,EAAE,KAAK,EAAC;QACR,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG;IACpC;IAEA,IAAI,oBAAmB;QACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW;IACpC;IAEA,uDAAuD;IACvD,WAAW;IACX,uDAAuD;IAEvD,cAAc,QAAQ,EAAE,YAAY,EAAC;QAEjC,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE,aAAa;YAEvC,IAAG;gBAAC;gBAAgB;aAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GACpD,OAAO,IAAI,EAAE,OAAO;iBAEpB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU;QAErD;QACA,OAAO,IAAI,CAAC,KAAK;IACrB;IAEA,aAAa,QAAQ,EAAE,YAAY,EAAC;QAEhC,IAAI,SAAS,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,OAAO;QACnD,OAAO,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU;QAEvD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EACpC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;QAEpC,OAAO;IACX;IAEA,cAAc,QAAQ,EAAE,YAAY,EAAC;QAEjC,IAAI,QAAQ,IAAI,CAAC,KAAK;QACtB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EACpC,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU;QAEhD,OAAO;IACX;IAGA,gBAAgB,QAAQ,EAAE,YAAY,EAAC;QACnC,IAAI,SAAS,CAAC;QACd,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW;QAClC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS;QAC9B,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;QAClD,MAAM,CAAC,SAAS,GAAG,CAAC;QACpB,OAAO,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ;QACrD,OAAO,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa;QAC/D,OAAO,MAAM,CAAC,QAAQ,GAAI;QAE1B,OAAO,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe;QAG/C,IAAG;YAAC;YAAgB;SAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GACpD,OAAO,IAAI,EAAE,OAAO,OAAO;QAI/B,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EACpC,OAAO,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU;aAE9D,OAAO,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK;QAEvC,OAAO;IACX;IAGA,uDAAuD;IACvD,eAAe;IACf,uDAAuD;IAEvD,gBAAgB,QAAQ,EAAE,YAAY,EAAC;QAEnC,IAAI,SAAS,CAAC;QACd,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW;QAClC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS;QAC9B,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,EAAE;QACvC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE;QAChC,MAAM,CAAC,SAAS,GAAG,CAAC;QACpB,OAAO,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,QAAQ;QACxD,OAAO,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,aAAa;QAClE,OAAO,MAAM,CAAC,QAAQ,GAAI;QAE1B,OAAO,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,UAAU;QAE1D,IAAG;YAAC;YAAgB;SAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GACpD,OAAO,MAAM,CAAC,QAAQ,GAAG,IAAI,EAAE,OAAO;aACnC,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,IAAI,EAAE,OAAO,cAChC,OAAO,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU;aAE/D,OAAO,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK;QAEvC,OAAO;IACX;IAEA,gBAAgB,KAAK,EAAC;QAElB,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QAAS;QAErB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO;QACrC,OAAO,MAAM,QAAQ;QACrB,IAAI,CAAC,OAAO,GAAG,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG;IACnB;IAGA,uDAAuD;IACvD,WAAW;IACX,uDAAuD;IAEvD,SAAS,KAAK,EAAE,cAAc,EAAC;QAC3B,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;IAClC;IAEA,MAAM,KAAK,EAAC;QACR,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB;IAEA,GAAG,KAAK,EAAC;QACL,wBAAwB;QAExB,IAAG,IAAI,CAAC,SAAS,IAAI,MAAM,SAAS,EAAG,OAAO;QAC9C,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,KAAK,EAAG,OAAO;QACvC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,QAAQ,KAAK,OAAS,OAAO;QAExD,OAAO;IAEX;IAEA,GAAG,KAAK,EAAC;QAEL,IAAG,IAAI,CAAC,KAAK,EAAE,eAAe,YAAW;YAErC,IAAI,eAAe,IAAI,CAAC,KAAK,EAAE,GAAG,YAAY;YAC9C,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,eAAgB,eAAe;YAE3C,IAAI,gBAAgB,MAAM,KAAK,EAAE,GAAG,YAAY;YAChD,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,gBAAiB,eAAe;YAG5C,IAAG,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,iBAAiB,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,gBACrC,OAAO;YAGX,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,iBAAiB,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,gBACrC,OAAO;YAKX,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,iBAAiB,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,gBAE1C,IAAG;gBACE,IAAG,eAAe,eACd,OAAO;qBACJ,IAAI,eAAe,eACtB,OAAO;YAEf,EAAE,OAAM,CAAC;QAEjB;QACA,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,QAAQ;IAC1C;IAEA,GAAG,KAAK,EAAC;QAEL,IAAG,IAAI,CAAC,KAAK,EAAE,eAAe,YAAW;YAGrC,IAAI,eAAe,IAAI,CAAC,KAAK,EAAE,GAAG,YAAY;YAC9C,gDAAgD;YAEhD,IAAI,gBAAgB,MAAM,KAAK,EAAE,GAAG,YAAY;YAChD,iDAAiD;YAEjD,IAAG,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,iBAAiB,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,gBACrC,OAAO;YAGX,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,iBAAiB,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,gBACrC,OAAO;YAGX,IAAI;gBACA,IAAG,eAAe,eACd,OAAO;qBACJ,IAAI,eAAe,eACtB,OAAO;YAEhB,EAAE,OAAO,OAAO,CAEhB;QAEH;QACA,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,QAAQ;IAC1C;IAEA,YAAY,SAAS,EAAE,EAAC;QAEpB,IAAI,IAAI,IAAI,CAAC,KAAK;QAClB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EACpC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS;QAE3D,IAAI,WAAW,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,IAAI,MAAM,CAAC;QAC7D,IAAI,WAAW,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrD,IAAI,WAAW,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC;QACvD,IAAI,WAAW,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,kBAAkB,IAAI,QAAQ,CAAC;QAG/E,QAAQ,GAAG,CAAC,QAAQ,OAAO,UAAU,UAAU,UAAU,UAAU;IAEvE;IAGA,wDAAwD;IACxD,gBAAgB;IAChB,wDAAwD;IAGxD,IAAI,YAAW;QAEP,IAAI,CAAC,KAAK,CAAC,WAAW;IAK9B;AAGJ;AAIA,SAAS,qCAAe,KAAK;IAEzB,IAAG,MAAM,OAAO,CAAC,QAAO;QACpB,IAAG,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,QACX,OAAO,KAAK,CAAC,EAAE;QAEnB,OAAO;IACX,OACI,OAAO;AAEf;AAEA,SAAS,kCAAY,KAAK;IACtB,IAAI,MAAM,OAAO,CAAC,QACd,OAAO;SAEP,OAAO;QAAC;KAAM;AAEtB;;;;;ADzaO,MAAM;IACT;;;;;;;;;;;;;;;;;;IAkBA,GAEA,YAAY,aAAa,IAAI,CAAE;QAC3B,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,eAAe,GAAG,EAAE;QACzB,IAAI,CAAC,uBAAuB,GAAG;QAC/B,IAAI,CAAC,0BAA0B,GAAG;QAClC,IAAI,CAAC,oBAAoB,GAAG;QAC5B,IAAI,CAAC,uBAAuB,GAAG;QAE/B,IAAI,CAAC,MAAM,GAAG;QAEd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,yCAAS;IACjC;IAEA,WAAW;QACP,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1C;IAEA,SAAS;QACL,IAAI,SAAS,CAAC;QACd,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,MAAM;QAClE,OAAO;IACX;IAEA,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,MAAM;IACtB;IAEA,IAAI,OAAM;QACN,OAAO,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM;IAC7C;IAEA,OAAO;IACP,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,WAAW;IAC3B;IACA,IAAI,WAAW,MAAM,EAAE;QACnB,IAAI,CAAC,WAAW,GAAG,qCAAe;IACtC;IAEA,GAAG,KAAK,EAAE;QACN,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,UAAU,EACnC,OAAO;QAEX,IAAI,IAAI,CAAC,UAAU,IAAI,SACnB,OAAO;QAEX,IAAI,MAAM,UAAU,IAAI,SACpB,OAAO;QAEX,IAAI,IAAI,CAAC,UAAU,IAAI,OACnB,OAAO;QAEX,IAAI,MAAM,UAAU,IAAI,OACpB,OAAO;QAGX,IAAI,IAAI,CAAC,UAAU,GAAG,MAAM,UAAU,EAClC,OAAO;QAEX,OAAO;IACX;IACA,GAAG,KAAK,EAAE;QACN,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,UAAU,EACnC,OAAO;QAEX,IAAI,IAAI,CAAC,UAAU,IAAI,SACnB,OAAO;QAEX,IAAI,MAAM,UAAU,IAAI,SACpB,OAAO;QAEX,IAAI,IAAI,CAAC,UAAU,IAAI,OACnB,OAAO;QAEX,IAAI,MAAM,UAAU,IAAI,OACpB,OAAO;QAGX,IAAI,IAAI,CAAC,UAAU,GAAG,MAAM,UAAU,EAClC,OAAO;QAEX,OAAO;IACX;IAEA,GAAG,KAAK,EAAE;QACN,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU,IAAI,MAAM,UAAU,EACnE,OAAO;QAEX,OAAO;IACX;IAEA,qBAAqB,eAAe,EAAE;QAClC,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,kBACT;QAGJ,KAAK,IAAI,MAAM,IAAI,CAAC,eAAe,CAAE;YACjC,IAAI,GAAG,SAAS,IAAI,iBAChB,OAAO;QAEf;QACA,OAAO;IACX;IAEA,SAAS,KAAK,EAAE;QACZ,qDAAqD;QAErD,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QACT;QAGJ,KAAK,IAAI,MAAM,IAAI,CAAC,eAAe,CAAE;YACjC,IAAI,GAAG,EAAE,CAAC,QACN,OAAO;QAEf;QACA,OAAO;IACX;IAEA,MAAM,KAAK,EAAE;QACT,0CAA0C;QAE1C,IAAI,kBAAkB;QAEtB,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QACT;QAGJ,KAAK,IAAI,MAAM,MAAM,eAAe,CAChC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,OAAO;YAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YAC1B,kBAAkB;QACtB;QAGJ,IAAI,mBAAmB,MACnB,IAAI,CAAC,qBAAqB,CAAC;IAEnC;IAEA,EAAE;IACF,uDAAuD;IACvD,UAAU;IACV,uDAAuD;IAEvD,cAAc,QAAQ,EAAE,YAAY,EAAE;QAClC,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAC/B,EAAE,aAAa,CAAC,UAAU;IAElC;IAEA,aAAa,QAAQ,EAAE,YAAY,EAAE;QACjC,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAC/B,EAAE,YAAY,CAAC,UAAU;IAEjC;IAEA,cAAc,QAAQ,EAAE,YAAY,EAAE;QAClC,IAAI,IAAI,IAAI,CAAC,aAAa;QAC1B,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,IACZ,OAAO;YAAC,EAAE,aAAa,CAAC,UAAU;SAAc;QAEpD,OAAO,EAAE;IACb;IAEA,gBAAgB,QAAQ,EAAE,YAAY,EAAE;QACpC,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAC/B,EAAE,eAAe,CAAC,UAAU;IAEpC;IAEA,uDAAuD;IACvD,UAAU;IACV,uDAAuD;IAEvD,gBAAgB,QAAQ,EAAE,YAAY,EAAE;QACpC,IAAI,UAAU,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,IACpC,EAAE,eAAe,CAAC,UAAU;QAEhC,OAAO;IACX;IAEA,gBAAgB,MAAK,EAAE,aAAW,IAAI,EAAE;QAEpC,IAAG,cAAc,MACb,IAAI,CAAC,eAAe,GAAG,EAAE;QAG7B,IAAI,SAAS,kCAAY;QACzB,KAAK,IAAI,UAAS,OAAQ;YAEtB,IAAI,gBAAgB,IAAI,CAAA,GAAA,yCAAc;YACtC,cAAc,eAAe,CAAC;YAE9B,IAAI,CAAC,gBAAgB,CAAC;QAE1B;IACJ;IAEA,wDAAwD;IACxD,qBAAqB;IACrB,wDAAwD;IAExD,IAAI,oBAAoB;QACpB,IAAI,aAAa;QACjB,KAAK,IAAI,MAAM,IAAI,CAAC,eAAe,CAAE;YACjC,IAAI,WAAW,GAAG,iBAAiB;YACnC,IAAI,YAAa,CAAA,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,eAAe,WAAW,UAAS,GACzD,aAAa;QAErB;QACA,OAAO;IACX;IAEA,IAAI,oBAAoB;QACpB,IAAI,aAAa;QACjB,KAAK,IAAI,MAAM,IAAI,CAAC,eAAe,CAAE;YACjC,IAAI,WAAW,GAAG,iBAAiB;YACnC,IAAI,YAAa,CAAA,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,eAAe,WAAW,UAAS,GACzD,aAAa;QAErB;QACA,OAAO;IACX;IAEA,uDAAuD;IACvD,iBAAiB;IACjB,uDAAuD;IAEvD,qBAAqB,IAAI,EAAE;QACvB,oCAAoC;QACpC,KAAI,IAAI,MAAM,IAAI,CAAC,eAAe,CAAC;YAC/B,IAAG,GAAG,WAAW,IAAI,MACjB,OAAO;QAEf;QACA,OAAO;IACX;IAGA,IAAI,gBAAgB;QAChB,oCAAoC;QACpC,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,GACpD,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE;QAEjC,OAAO;IACX;IAEA,IAAI,iBAAiB;QACjB,2CAA2C;QAE3C,mBAAmB;QACnB,IAAI,QAAQ,IAAI,CAAC,oBAAoB;QACrC,IAAI,WAAW,IAAI,CAAC,uBAAuB;QAC3C,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,UAAU,MAAM,MAAM,GAAG,GAAG;YACxC,IAAI,SAAS,UACT,OAAO;QAEf;QAEA,IAAI,UAAU,EAAE;QAChB,IAAI,MAAM,IAAI,CAAC,iBAAiB;QAChC,MAAM,SAAS;eAAI,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,IAAM,EAAE,KAAK;SAAG;QACpD,OAAO,OAAO,CAAC,CAAC;YACZ,MAAM,aAAa,IAAI,MAAM,CAAC,CAAC,OAAS,KAAK,KAAK,IAAI;YACtD,IAAI,QAAQ,WAAW,MAAM,CAAC,CAAC,SAAS,OACpC,QAAQ,EAAE,CAAC,QAAQ,UAAU;YAEjC,QAAQ,IAAI,CAAC;QACjB;QAEA,SAAS,QAAQ,CAAC,EAAE,CAAC;YACjB,IAAI,EAAE,EAAE,CAAC,IACL,OAAO;YAEX,IAAI,EAAE,EAAE,CAAC,IACL,OAAO;YAEX,OAAO;QACX;QAEA,QAAQ,IAAI,CAAC;QAEb,gBAAgB;QAChB,IAAI,CAAC,oBAAoB,GAAG;QAC5B,IAAI,CAAC,uBAAuB,GAAG;QAE/B,OAAO;IACX;IAEA,IAAI,oBAAoB;QACpB,IAAI,CAAC,qBAAqB;QAE1B,OAAO,IAAI,CAAC,uBAAuB;IACvC;IAEA,sBAAsB,QAAQ,KAAK,EAAE;QACjC,IAAI,KAAK,IAAI,CAAC,eAAe;QAE7B,IAAI,QAAQ,IAAI,CAAC,uBAAuB;QACxC,IAAI,WAAW,IAAI,CAAC,0BAA0B;QAE9C,IAAI,SAAS,OACT;YAAA,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,UAAU,MAAM,MAAM,GAAG,GAAG;gBACxC,KAAK;gBACL,IAAI,SAAS,UACT,OAAO;YAEf;QAAA;QAGJ,IAAI,UAAU,EAAE;QAEhB,oBAAoB;QACpB,UAAU,QAAQ,MAAM,CACpB,GAAG,MAAM,CAAC,CAAC,OAAS,KAAK,WAAW,IAAI;QAE5C,UAAU,QAAQ,MAAM,CACpB,GAAG,MAAM,CAAC,CAAC,OAAS,KAAK,WAAW,IAAI;QAG5C,qCAAqC;QACrC,GAAG,MAAM,CAAC,CAAC,OAAS,KAAK,WAAW,IAAI,iBAAiB,OAAO,CAC5D,CAAC;YACG,UAAU,QAAQ,MAAM,CACpB,CAAC,SACG,CACI,CAAA,OAAO,QAAQ,CAAC,EAAE,CAAC,iBACd,CAAA,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,aAAa,QAAQ,KAC3B,aAAa,QAAQ,IAAI,OAAO,KAAK,AAAD,CAAC;QAG7D;QAGJ,GAAG,MAAM,CAAC,CAAC,OAAS,KAAK,WAAW,IAAI,gBAAgB,OAAO,CAC3D,CAAC;YACG,UAAU,QAAQ,MAAM,CACpB,CAAC,SACG,CACI,CAAA,OAAO,QAAQ,CAAC,EAAE,CAAC,iBACnB,OAAO,KAAK,IAAI,aAAa,KAAK,AAAD;QAGjD;QAGJ,SAAS,QAAQ,CAAC,EAAE,CAAC;YAEjB,IAAI,EAAE,EAAE,CAAC,IACL,OAAO;YAEX,IAAI,EAAE,EAAE,CAAC,IACL,OAAO;YAEX,OAAO;QACX;QAEA,QAAQ,IAAI,CAAC;QACb,IAAI,CAAC,uBAAuB,GAAG,EAAE;QACjC,IAAI,CAAC,uBAAuB,GACxB,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC;QACxC,IAAI,CAAC,0BAA0B,GAAG,EAAE;QACpC,IAAI,CAAC,0BAA0B,GAC3B,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC;QAC3C,IAAI,CAAC,oBAAoB,GAAG;QAE5B,mBAAmB;QACnB,KAAK,IAAI,MAAM,IAAI,CAAC,eAAe,CAC/B,GAAG,KAAK,GAAG;QAGf,oBAAoB;QACpB,KAAK,IAAI,MAAM,IAAI,CAAC,uBAAuB,CACvC,GAAG,KAAK,GAAG;IAEnB;IAEA,IAAI,oBAAoB;QACpB,0BAA0B;QAE1B,OAAO,IAAI,CAAC,iBAAiB;IACjC;IAGA,IAAI,cAAc,MAAK,EAAC;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IACjC;IAEA,IAAI,eAAe,MAAK,EAAC;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IACjC;IAGA,uDAAuD;IACvD,SAAS;IACT,uDAAuD;IAEvD,IAAI,QAAQ;QACR,oDAAoD;QACpD,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,IAAI,EAAE,gBAClB,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK;QAEnC,OAAO;IACX;IAEA,IAAI,MAAM,MAAK,EAAE;QACb,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B;IAEA,IAAI,SAAS;QACT,6DAA6D;QAC7D,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,KAAK;IACjD;IAEA,UAAU,MAAK,EAAE,cAAc,EAAE,UAAU,EAAE;QAEzC,IAAI,UAAU,EAAE;QAChB,IAAI,SAAS,kCAAY;QAEzB,cAAc;QACd,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,gBAAgB;QAEtD,qBAAqB;QACrB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAC/B,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,gBAAgB;QAE1D,OAAO;IACX;IAEA,SAAS,MAAK,EAAE,cAAc,EAAE,UAAU,EAAE;QAExC,IAAI,iBAAiB;QAErB,gBAAgB;QAChB,IAAG,0BAA0B,QAAO;YAChC,IAAI,IAAI,oCAAc;YACtB,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,IACZ,iBAAiB;QAEzB;QAEA,IAAI,CAAE,CAAA,0BAA0B,CAAA,GAAA,yCAAc,CAAA,GAC1C,iBAAiB,IAAI,CAAA,GAAA,yCAAc,EAC/B,IAAI,CAAC,UAAU,EACf,QACA;QAIR,eAAe,QAAQ,CAAC,eAAe,CAAC;QAExC,oCAAoC;QACpC,IAAI,IAAI,CAAC,aAAa,CAAC,mBAAmB,MACtC,OAAO,IAAI,CAAC,QAAQ,CAAC;QAGzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;QAC1B,eAAe,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM;QAG9D,eAAe;QACf,IAAK,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,IAAI,CAAC,uBAAuB,GACzC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC;QAGtC,cAAc;QACd,IAAI,CAAC,oBAAoB,GAAG;QAC5B,IAAI,CAAC,uBAAuB,GAAG;QAE/B,OAAO;IACX;IAEA,YAAY,SAAS,EAAE,EAAE;QACrB,IAAI,IAAI,IAAI,CAAC,KAAK;QAClB,IAAI,UAAU,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,EAC/C,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS;QAG3D,QAAQ,GAAG,CAAC,QAAQ,OAAO,IAAI,CAAC,UAAU,EAAE,MAAM;QAElD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACxB,cAAc,WAAW,CAAC,SAAS;QACvC;IACJ;IACA,eAAe,SAAS,EAAE,EAAE;QACxB,IAAI,IAAI,IAAI,CAAC,KAAK;QAClB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EACpC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS;QAG3D,QAAQ,GAAG,CAAC,QAAQ,OAAO,IAAI,CAAC,UAAU,EAAE,MAAM;QAElD,QAAQ,GAAG,CAAC,QAAQ;QACpB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACxB,cAAc,WAAW,CAAC,SAAS;QACvC;QACA,QAAQ,GAAG,CAAC,QAAQ;QACpB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACxB,cAAc,WAAW,CAAC,SAAS;QACvC;IACJ;IAIA,wDAAwD;IACxD,YAAY;IACZ,wDAAwD;IAGxD,iBAAiB,aAAa,EAAC;QAE3B,EAAE;QACF,IAAG,AAAC,yBAAyB,CAAA,GAAA,yCAAc,KAAM,OAAM;YACnD,IAAI,OAAO,IAAI,CAAA,GAAA,yCAAc;YAC7B,KAAK,eAAe,CAAC;YACrB,gBAAgB;QACpB;QAEA,GAAG;QACH,KAAI,IAAI,MAAM,IAAI,CAAC,eAAe,CAAC;YAC/B,IAAK,cAAc,EAAE,CAAC,OAAO,MACzB,uBAAuB;YACvB,OAAO;QAEf;QACA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;QAC1B,OAAO;IACX;IAEA,SAAQ;QAEJ,wBAAwB;QACxB,IAAI,iBAAiB,IAAI,CAAC,eAAe;QAEzC,KAAI,IAAI,MAAM,eAEV,IAAI,CAAC,gBAAgB,CAAC;QAG1B;IAGJ;IAGA,wDAAwD;IACxD,SAAS;IACT,wDAAwD;IAExD,SAAS,MAAK,EAAE;QACZ,4CAA4C;QAG5C,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,SAAS,OAAO;QAE5B,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,QAAO,cACnB,SAAQ,OAAM,GAAG;QAGrB,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,QAAO,CAAC,QAAQ,GAC5B,SAAQ;YAAE,SAAS,QAAO,CAAC,QAAQ;YAAE,OAAO,QAAO,CAAC,MAAM;QAAC;QAG/D,KAAK,IAAI,MAAM,IAAI,CAAC,cAAc,CAAE;YAChC,IAAI,SAAS,GAAG,KAAK;YACrB,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,QAAQ,cACpB,SAAS,OAAO,GAAG;YAGvB,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,QAAQ,CAAC,QAAQ,GAC7B,SAAS;gBAAE,SAAS,QAAQ,CAAC,QAAQ;gBAAE,OAAO,QAAQ,CAAC,MAAM;YAAC;YAGlE,KAAK;YAEL,IAAI,KAAK,SAAS,CAAC,WAAU,KAAK,SAAS,CAAC,SACxC,OAAO;QAEf;QACA,OAAO;IACX;IAEA,cAAc,MAAK,EAAE;QACjB,yCAAyC;QAEzC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC;QACtB,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,IACZ,OAAO;QAEX,OAAO;IACX;AACJ;AAEA,SAAS,qCAAe,MAAK;IACzB,IAAI,YAAY,kCAAY;IAC5B,IAAI,UAAU,MAAM,GAAG,GACnB,OAAO,SAAS,CAAC,EAAE;SAEnB,OAAO;AAEf;AAEA,SAAS,kCAAY,MAAK;IACtB,IAAI,MAAM,OAAO,CAAC,SACd,OAAO;SAEP,OAAO;QAAC;KAAM;AAEtB;AAEA,SAAS,oCAAc,MAAK;IACxB,IAAI,kBAAiB,QAAQ,CAAC,MAAM,SAChC,OAAO;IAGX,MAAM,OAAO,IAAI,KAAK;IACtB,IAAI,CAAC,MAAM,KAAK,OAAO,KACnB,OAAO;IAGX,OAAO;AACX;;;;;AGroBO,MAAM,4CAAkB;IAE3B,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;AAEX;AAGA,SAAS,yBAAG,SAAS,EAAE,UAAU;IAC7B,IAAI,UAAU,WAAW,GAAG,WAAW,WAAW,EAC9C,OAAO;IAEX,IAAI,UAAU,WAAW,GAAG,WAAW,WAAW,EAC9C,OAAO;IAGX,IAAI,UAAU,SAAS,GAAG,WAAW,SAAS,EAC1C,OAAO;IAEX,IAAI,UAAU,SAAS,GAAG,WAAW,SAAS,EAC1C,OAAO;IAGX,OAAO;AACX;AAEA,SAAS,yBAAG,SAAS,EAAE,UAAU;IAC7B,IAAI,UAAU,WAAW,GAAG,WAAW,WAAW,EAC9C,OAAO;IAEX,IAAI,UAAU,WAAW,GAAG,WAAW,WAAW,EAC9C,OAAO;IAGX,IAAI,UAAU,SAAS,GAAG,WAAW,SAAS,EAC1C,OAAO;IAEX,IAAI,UAAU,SAAS,GAAG,WAAW,SAAS,EAC1C,OAAO;IAEX,OAAO;AACX;AAEA,SAAS,yBAAG,SAAS,EAAE,UAAU;IAC7B,IAAI,UAAU,WAAW,IAAI,WAAW,WAAW,EAC/C,OAAO;IAEX,IAAI,UAAU,SAAS,IAAI,WAAW,SAAS,EAC3C,OAAO;IAGX,OAAO;AACX;AAGA,SAAS,4BAAM,SAAS,EAAE,UAAU;IAChC,wCAAwC;IAExC,IAAG,UAAU,EAAE,CAAC,eAAe,OAAQ;IAGvC,IAAG,UAAU,EAAE,IAAI,WAAW,EAAE,EAC5B;IAIJ,sBAAsB;IACtB,IAAG,CAAC,UAAU,aAAa,IAAI,UAAU,aAAa,IAAI,MACtD,UAAU,aAAa,GAAG,WAAW,aAAa;IAEtD,IAAG,CAAC,UAAU,KAAK,IAAI,UAAU,KAAK,IAAI,MACtC,UAAU,KAAK,GAAG,WAAW,KAAK;IAEtC,IAAG,CAAC,UAAU,SAAS,IAAI,UAAU,SAAS,IAAI,MAC9C,UAAU,SAAS,GAAG,WAAW,SAAS;IAI9C,mBAAmB;IACnB,KAAI,IAAI,eAAe,WAAW,WAAW,CAAC;QAC1C,IAAI,aAAa,UAAU,WAAW,CAAC,YAAY,UAAU;QAC7D,WAAW,KAAK,CAAC;IACrB;IAEA,kCAAkC;IAClC,IAAI,IAAI,KAAK,WAAW,UAAU,CAC9B,KAAI,IAAI,KAAK,WAAW,UAAU,CAAC,EAAE,CACjC,UAAU,gBAAgB,CAAC,GAAG;IAItC,WAAW,UAAU,GAAG,CAAC;IAEzB;AAEJ;;;;AChGO,MAAM,4CAAgB;IACzB,gBAAe;IACf,aAAa;IACb,UAAU;AACd;AAEA,SAAS,qCAAe,KAAK;IACzB,IAAI,YAAY,kCAAY;IAC5B,IAAI,UAAU,MAAM,GAAG,GACnB,OAAO,SAAS,CAAC,EAAE;SAEnB,OAAO;AAEf;AAEA,SAAS,kCAAY,KAAK;IACtB,IAAI,MAAM,OAAO,CAAC,QACd,OAAO;SAEP,OAAO;QAAC;KAAM;AAEtB;AAEA,SAAS,+BAAS,IAAI;IAClB,qBAAqB;IACrB,aAAa;IAEb,IAAI,MAAM,OAAO,CAAC,OAAO;QACrB,4DAA4D;QAE5D,IAAG,KAAK,MAAM,IAAI,GACd,OAAO;aACJ,IAAI,KAAK,MAAM,KAAK,GAAG;YAC1B,IAAG,QAAQ;gBAAC,CAAC;aAAE,EACX,OAAO;iBAEP,OAAO,+BAAS,IAAI,CAAC,EAAE;QAE/B,OAAO;YACH,+CAA+C;YAC/C,IAAI,UAAU,EAAE;YAChB,KAAI,IAAI,KAAK,KAAK;gBACd,IAAI,QAAQ,+BAAS;gBACrB,IAAG,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,IACX,QAAQ,IAAI,CAAC;YAErB;YACA,OAAO;QACX;IACJ,OAAO,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,SAAS,OAAO,SAAS,UAAU;QACtD,6CAA6C;QAC7C,MAAM,UAAU,CAAC;QACjB,IAAK,MAAM,OAAO,KACd,IAAI,KAAK,cAAc,CAAC,MAAM;YAC1B,IAAI,QAAQ,+BAAS,IAAI,CAAC,IAAI;YAC9B,IAAG,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,QACX,OAAO,CAAC,IAAI,GAAG,+BAAS,IAAI,CAAC,IAAI;QAEzC;QAEJ,OAAO;IACX,OACI,iEAAiE;IACjE,OAAO;AAEf;;;;ACjEO,MAAM,4CAAiB;IAE1B,OAAM;IACN,aAAa;IACb,gBAAgB;AACpB;AAIA,SAAS;IACL,OAAO,IAAI,CAAC,WAAW;AAC3B;AAEA,SAAS;IACL,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM;IAClC,QAAQ,GAAG,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS;IACtD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACjB,SAAS,WAAW,CAAC;IACzB;AACJ;AAEA,SAAS;IACL,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM;IAClC,QAAQ,GAAG,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS;IACtD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACjB,SAAS,cAAc,CAAC;IAC5B;AACJ;;;;;AE7BO,MAAM;IACT;;KAEC,GAGD,YAAY,UAAQ,IAAI,CAAE;QAEtB,IAAI,CAAC,GAAG,GAAG,CAAC;QACZ,IAAI,CAAC,QAAQ,GAAG;IACpB;IAEA,IAAI,WAAW,EAAE,SAAS,EAAC;QAEvB,IAAG,CAAC,eAAe,eAAe,MAAQ,OAAO;QACjD,IAAG,CAAC,aAAa,aAAa,MAAQ,OAAO;QAE7C,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC,OAAO,IAAI;IAE7D;IAEA,IAAI,KAAK,EAAC;QACN,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB;IAEA,KAAK,KAAK,EAAC;QACP,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB;IAGA,IAAI,KAAK,EAAC;QAEN,IAAG,MAAM,OAAO,CAAC,QACb,MAAM,GAAG,CAAC,CAAA,IAAK,IAAI;QAIvB,IAAI,cAAc,MAAM,WAAW;QACnC,IAAI,YAAY,MAAM,SAAS;QAE/B,IAAG,CAAC,eAAe,eAAe,MAAQ,OAAO;QACjD,IAAG,CAAC,aAAa,aAAa,MAAQ,OAAO;QAE7C,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,IAAI,CAAC;QAClD,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,IAAI,CAAC;QAExE,oCAAoC;QACpC,IAAI,iBAAiB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,EAAE;QACvD,IAAG,kBAAkB,eAAe,WAAW,EAC3C,eAAe,KAAK,CAAC;aAErB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,GAAG;QAE5C,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,GAAG;QAExC,OAAO,IAAI,CAAC,GAAG,CAAC,aAAa;IAEjC;IAGA,KAAK,KAAK,EAAC;QACP,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB;IAEA,IAAI,SAAQ;QAER,IAAI,SAAS,EAAE;QACf,KAAI,IAAI,eAAe,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAEvC,KAAI,IAAI,aAAa,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;YAEpD,IAAG,eAAe,eAAe,MAC7B;gBAAA,IAAG,aAAa,aAAa,MAAK;oBAC9B,IAAI,QAAQ,IAAI,CAAC,GAAG,CAAC,aAAa;oBAClC,OAAO,IAAI,CAAC;gBAChB;YAAA;QAGR;QAEJ,OAAO;IACX;AAEJ;;;ADjFA,IAAI,iCAAW;AAER,MAAM,4CAAoB;IAE7B,WAAW;IACX,gBAAgB;IAChB,sBAAsB;IACtB,sBAAqB;AACzB;AAIA,SAAS,qCAAe,SAAS;IAC7B,kDAAkD;IAElD,IAAI,SAAQ,EAAE;IACd,KAAK,IAAI,KAAK,UAAU,WAAW,CAAE;QACjC,KAAK,IAAI,KAAK,EAAE,MAAM,CAClB,IAAI,GAAG,aACH,OAAO,IAAI,CAAC;IAGxB;IAEA,IAAI,UAAU;IAEd,OAAO;AACX;AAEA,SAAS,gCAAU,SAAS,EAAE,KAAK,EAAE,WAAS,8BAAQ,EAAE,eAAa,CAAC;IAClE,kDAAkD;IAElD,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QAAO;QACf,QAAQ,IAAI,CAAA,GAAA,yCAAe;QAC3B,MAAM,GAAG,CAAC;IACd;IAEA,KAAK,IAAI,KAAK,UAAU,WAAW,CAAE;QACjC,KAAK,IAAI,KAAK,EAAE,MAAM,CAClB,IAAI,GAAG,aAAa;YAChB,MAAM,IAAI,CAAC;YAEX,IAAG,eAAe,UACd,gCAAU,GAAG,OAAO,UAAU,eAAe;QAGrD;IAER;IAEA,IAAI,UAAU,MAAM,MAAM;IAE1B,OAAO;AACX;AAIA,SAAU,2CAAqB,SAAS;IACpC,IAAI,aAAa;IACjB,KAAK,IAAI,MAAM,UAAU,UAAU,CAAE;QACjC,IAAI,WAAW,GAAG,iBAAiB;QACnC,IAAI,YAAa,CAAA,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,eAAe,WAAW,UAAS,GACzD,aAAa;IAErB;IACA,OAAO;AACX;AAEA,SAAS,2CAAqB,SAAS;IACnC,IAAI,aAAa;IACjB,KAAK,IAAI,MAAM,UAAU,UAAU,CAAE;QACjC,IAAI,WAAW,GAAG,iBAAiB;QACnC,IAAI,YAAa,CAAA,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,eAAe,WAAW,UAAS,GACzD,aAAa;IAErB;IACA,OAAO;AACX;;;;;AE7EO,MAAM;IACT,YAAY,KAAK,CAAE;QACf,IAAI,CAAC,KAAK,GAAG;IACjB;IAEA,wDAAwD;IACxD,WAAW;IACX,wDAAwD;IAExD,IAAI,UAAU,EAAE;QACZ,OAAO,kCAAY,IAAI,CAAC,KAAK,EAAE;IACnC;IAEA,OAAO,UAAU,EAAE;QACf,OAAO,oCAAc,IAAI,CAAC,KAAK;IACnC;IAEA,IAAI,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE;QACjD,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QACT;QAGJ,QAAQ,kCAAY;QACpB,IAAI,MAAM,MAAM,IAAI,GAChB;QAGJ,kCACI,IAAI,CAAC,KAAK,EACV,YACA,KAAK,CAAC,EAAE,EACR,aACA,iBACA,iBACA;QAGJ,IAAI,MAAM,MAAM,IAAI,GAChB;QAEJ,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACnC,IAAI,IAAI,KAAK,CAAC,EAAE;YAChB,kCACI,IAAI,CAAC,KAAK,EACV,YACA,OACA,aACA,iBACA,aACA;QAER;IACJ;IAEA,IAAI,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE;QACjD,OAAO,kCACH,IAAI,CAAC,KAAK,EACV,YACA,OACA,aACA,iBACA,aACA;IAER;IAEA,KAAK,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE;QAClD,OAAO,IAAI,CAAC,GAAG,CAAC,YAAY,OAAO,aAAa;IACpD;IAEA,QAAQ,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,eAAe,EAAE;QAClE,OAAO,kCACH,IAAI,CAAC,KAAK,EACV,YACA,UACA,aACA,iBACA,iBACA;IAER;IAEA,OAAO,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE;QACpD,OAAO,kCACH,IAAI,CAAC,KAAK,EACV,YACA,OACA,aACA,iBACA,gBACA;IAER;IAEA,wDAAwD;IACxD,cAAc;IACd,wDAAwD;IAExD,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB;IACnD;IACA,IAAI,aAAa,KAAK,EAAE;QACpB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,gBAAgB,UAAU;IAChE;IAEA,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY;IAC9C;IACA,IAAI,QAAQ,KAAK,EAAE;QACf,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,WAAW,UAAU;IAC3D;IAEA,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU;IAC5C;IACA,IAAI,MAAM,KAAK,EAAE;QACb,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU;QAChD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,UAAU;IACzD;IAEA,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe;IACjD;IACA,IAAI,WAAW,KAAK,EAAE;QAClB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe;QACrD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,cAAc,UAAU;IAC9D;IAEA,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc;IAChD;IACA,IAAI,UAAU,KAAK,EAAE;QACjB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc;QACpD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,aAAa,UAAU;IAC7D;IAEA,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS;IAC3C;IACA,IAAI,KAAK,KAAK,EAAE;QACZ,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS;QAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,QAAQ,UAAU;IACxD;IAEA,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc;IAChD;IACA,IAAI,UAAU,KAAK,EAAE;QACjB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc;QACpD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,aAAa,UAAU;IAC7D;IAEA,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa;IAC/C;IACA,IAAI,SAAS,KAAK,EAAE;QAChB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa;QACnD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,YAAY,UAAU;IAC5D;IAEA,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ;IAC1C;IACA,IAAI,IAAI,KAAK,EAAE;QACX,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ;QAC9C,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,UAAU;IACvD;IAEA,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe;IACjD;IACA,IAAI,WAAW,KAAK,EAAE;QAClB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe;QACrD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,cAAc,UAAU;IAC9D;IAEA,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU;IAC5C;IACA,IAAI,MAAM,KAAK,EAAE;QACb,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU;QAChD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,UAAU;IACzD;IAEA,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe;IACjD;IACA,IAAI,WAAW,KAAK,EAAE;QAClB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe;QACrD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,cAAc,UAAU;IAC9D;IAEA,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW;IAC7C;IACA,IAAI,OAAO,KAAK,EAAE;QACd,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW;QACjD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,UAAU;IAC1D;IAEA,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW;IAC7C;IACA,IAAI,OAAO,KAAK,EAAE;QACd,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW;QACjD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,UAAU;IAC1D;IAEA,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc;IAChD;IACA,IAAI,UAAU,KAAK,EAAE;QACjB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc;QACpD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,aAAa,UAAU;IAC7D;IAEA,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY;IAC9C;IACA,IAAI,QAAQ,KAAK,EAAE;QACf,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,WAAW,UAAU;IAC3D;IAEA,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB;IACnD;IACA,IAAI,aAAa,KAAK,EAAE;QACpB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,gBAAgB,UAAU;IAChE;IAEA,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe;IACjD;IACA,IAAI,WAAW,KAAK,EAAE;QAClB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe;QACrD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,cAAc,UAAU;IAC9D;IAEA,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU;IAC5C;IACA,IAAI,MAAM,KAAK,EAAE;QACb,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU;QAChD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,UAAU;IACzD;IAEA,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS;IAC3C;IACA,IAAI,KAAK,KAAK,EAAE;QACZ,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS;QAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,QAAQ,UAAU;IACxD;IAEA,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB;IACnD;IACA,IAAI,aAAa,KAAK,EAAE;QACpB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,gBAAgB,UAAU;IAChE;IAEA,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa;IAC/C;IACA,IAAI,SAAS,KAAK,EAAE;QAChB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa;QACnD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,YAAY,UAAU;IAC5D;IAEA,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa;IAC/C;IACA,IAAI,SAAS,KAAK,EAAE;QAChB,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa;QACnD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,YAAY,UAAU;IAC5D;AACJ;AAGA,SAAS,kCAAY,SAAS,EAAE,UAAU;IACtC;;KAEC,GAED,IAAI,CAAC,cAAc,cAAc,MAC7B,OAAO;IAGX,IAAI,eAAe,WAAW,KAAK,CAAC;IACpC,IAAI,MAAM,WAAW,KAAK,CAAC,IAAI,CAAC,EAAE;IAClC,IAAI,WAAW,WAAW,KAAK,CAAC,KAAK,KAAK,CAAC;IAE3C,uBAAuB;IACvB,IAAI;IACJ,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,WAAW,CAAC,MAAM,EAAE,IAC9C,IAAI,UAAU,WAAW,CAAC,EAAE,CAAC,UAAU,IAAI,KACvC,WAAW,UAAU,WAAW,CAAC,EAAE;IAI3C,oCAAoC;IACpC,IAAI,CAAC,YAAY,YAAY,MAAM;QAC/B,WAAW,IAAI,CAAA,GAAA,yCAAS,EAAE;QAC1B,UAAU,WAAW,CAAC,IAAI,CAAC;IAC/B;IAEA,4BAA4B;IAC5B,IAAI,SAAS,MAAM,GAAG,GAAG;QACrB,IAAI,CAAC,SAAS,KAAK,EAAE,aACjB,OAAO;aAEP,OAAO,SAAS,KAAK,CAAC,WAAW,CAAC,SAAS,IAAI,CAAC;IAExD,OACI,OAAO;AAEf;AAEA,SAAS,oCAAc,SAAS;IAC5B;;KAEC,GAED,IAAI,aAAa,kCAAY,UAAU,WAAW;IAClD,aAAa,WAAW,MAAM,CAAC,CAAC,IAAM,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC;IAElD,aAAa,WAAW,QAAQ,CAAC,CAAC,GAAG;QACjC,OAAO,EAAE,EAAE,CAAC;IAChB;IAEA,aAAa,kCAAY;IACzB,OAAO;AACX;AAEA,SAAS,kCACL,SAAS,EACT,UAAU,EACV,KAAK,EACL,WAAW,EACX,eAAe,EACf,UAAU,EACV,aAAa;IAEb,sBAAsB;IACtB,IAAI,WAAW,QAAQ,CAAC,MAAM;QAC1B,IAAI,MAAM,WAAW,KAAK,CAAC,IAAI,CAAC,EAAE;QAClC,IAAI,WAAW,WAAW,KAAK,CAAC,KAAK,KAAK,CAAC;QAE3C,IAAI,IAAI,UAAU,WAAW,CAAC;QAE9B,mCAAmC;QACnC,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,EAAE,KAAK,EAAE,cAClB,EAAE,SAAS,CACP,UAAU,GAAG,CAAC,UACd,gBACA,YACA;QAIR,YAAY;QACZ,EAAE,KAAK,CAAC,WAAW,CAAC,SAAS,IAAI,CAAC,MAAM;QACxC,OAAO;IACX;IAEA,gBAAgB;IAChB,IAAI,WAAW,UAAU,WAAW,CAAC,aAAa;IAElD,gCAAgC;IAChC,IAAI,WAAW,UAAU,WAAW,CAAC;IACrC,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,WAAW;QACpB,WAAW,IAAI,CAAA,GAAA,yCAAS,EAAE;QAC1B,UAAU,WAAW,CAAC,IAAI,CAAC;IAC/B;IAEA,4DAA4D;IAC5D,IAAI,SAAS,kCAAY;IACzB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAC/B,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,QAAQ,GAClC,MAAM,CAAC,EAAE,GAAG,UAAU,GAAG,CAAC,MAAM,CAAC,EAAE;IAI3C,eAAe;IACf,IAAI,iBAAiB,UAAU,QAAQ,CAAC,MAAM;IAC9C,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,cACZ,eAAe,WAAW,GAAG;IAEjC,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,kBACZ,eAAe,eAAe,GAAG;IAGrC,qBAAqB;IACrB,IAAI,YAAY,SAAS,SAAS,CAC9B,QACA,gBACA,YACA;IAGJ,iBAAiB;IACjB,IAAI,WAAW,UAAU,WAAW,CAAC,aAAa;IAElD,IAAI,YAAY,UAAU;QACtB,IAAI,OAAO;YACP,YAAY;YACZ,UAAU;YACV,UAAU;QACd;QACA,UAAU,aAAa,CAAC,YAAY;IACxC;IAEA,OAAO;AACX;AAEA,SAAS,kCAAY,KAAK;IACtB,IAAI,MAAM,OAAO,CAAC,QACd,OAAO;SAEP,OAAO;QAAC;KAAM;AAEtB;;;;;;;ACnaA,IAAI,kCAAY;AAET,MAAM;IACT,YAAY,KAAK,CAAE;QACf,IAAI,CAAC,KAAK,GAAG;IACjB;IAEA,IAAI,SAAS;QACT,OAAO,oCAAc,IAAI,CAAC,KAAK;IACnC;IAEA,UAAU,QAAQ,EAAE,YAAY,EAAE;QAC9B,OAAO,oCAAc,IAAI,CAAC,KAAK,EAAE,UAAU;IAC/C;IAEA,IAAI,OAAO,KAAK,EAAE;QACd,OAAO,oCAAc,IAAI,CAAC,KAAK,EAAE;IACrC;IAEA,UAAU,KAAK,EAAE;QACb,OAAO,oCAAc,IAAI,CAAC,KAAK,EAAE;IACrC;IAEA,IAAI,OAAO;QACP,OAAO,oCAAc,IAAI,CAAC,KAAK;IACnC;IAEA,QAAQ,QAAQ,EAAE,YAAY,EAAE;QAC5B,OAAO,oCAAc,UAAU;IACnC;IAEA,IAAI,SAAS;QACT,OAAO,sCAAgB,IAAI,CAAC,KAAK;IACrC;IAEA,IAAI,aAAa;QACb,OAAO,0CAAoB,IAAI,CAAC,KAAK;IACzC;IAEA,UAAU,QAAQ,EAAE,YAAY,EAAE;QAC9B,OAAO,sCAAgB,IAAI,CAAC,KAAK,EAAE,UAAU;IACjD;IAEA,IAAI,OAAO,KAAK,EAAE;QACd,OAAO,sCAAgB,IAAI,CAAC,KAAK,EAAE;IACvC;AACJ;AAEA,wDAAwD;AACxD,eAAe;AACf,wDAAwD;AAExD,SAAS,oCAAc,SAAS,EAAE,WAAW,+BAAS,EAAE,eAAe,CAAC;IACpE,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,WACT,WAAW;IAGf,IAAI,gBAAgB,UAAU;QAC1B,IAAI,IAAI,CAAC,WAAW,IAAI;aAGpB,OAAO,UAAU,GAAG;IAE5B;IAEA,IAAI,SAAS,CAAC;IACd,IAAI,aAAa,kCAAY,UAAU,UAAU;IACjD,aAAa,WAAW,MAAM,CAAC,CAAA,IAAK,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC;IAC9C,KAAK,IAAI,KAAK,WACV,MAAM,CAAC,EAAE,UAAU,CAAC,GAAG,EAAE,aAAa,CAAC,UAAU,eAAe;IAEpE,MAAM,CAAC,QAAQ,GAAG,UAAU,WAAW;IACvC,MAAM,CAAC,MAAM,GAAG,UAAU,SAAS;IAEnC,SAAS,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;IACnC,SAAS,CAAA,GAAA,yCAAY,EAAE,QAAQ,CAAC;IAChC,OAAO;AACX;AAEA,wDAAwD;AACxD,eAAe;AACf,wDAAwD;AAExD,SAAS,oCAAc,SAAS,EAAE,WAAW,+BAAS,EAAE,eAAe,CAAC;IACpE,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,WACT,WAAW;IAGf,IAAI,gBAAgB,UAAU;QAC1B,IAAI,UAAU,WAAW,IAAI;aAGzB,OAAO,UAAU,GAAG;IAE5B;IAEA,IAAI,SAAS,CAAC;IACd,IAAI,aAAa,UAAU,UAAU;IACrC,KAAK,IAAI,KAAK,WAAY;QACtB,IAAI,QAAQ,EAAE,aAAa,CAAC,UAAU,eAAe;QACrD,IAAI,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QACV,MAAM,CAAC,EAAE,UAAU,CAAC,GAAG;IAE/B;IACA,MAAM,CAAC,QAAQ,GAAG,UAAU,WAAW;IACvC,MAAM,CAAC,MAAM,GAAG,UAAU,SAAS;IAEnC,SAAS,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;IACnC,SAAS,CAAA,GAAA,yCAAY,EAAE,QAAQ,CAAC;IAChC,OAAO;AACX;AAEA,SAAS,oCAAc,SAAS,EAAE,KAAK;IACnC,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QACT;IAGJ,UAAU,WAAW,GAAG,EAAE;IAC1B,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,CAAC;QACxB,UAAU,CAAC,CAAC,OAAO,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI;IAC7C;AACJ;AAEA,wDAAwD;AACxD,iBAAiB;AACjB,wDAAwD;AAExD,SAAS,0CAAoB,KAAK;IAC9B,IAAI,UAAU,EAAE;IAEhB,KAAK,IAAI,KAAK,MAAM,MAAM,CACtB,QAAQ,IAAI,CAAC,sCAAgB,GAAG,GAAG;IAEvC,OAAO;AACX;AAEA,SAAS,sCAAgB,KAAK,EAAE,QAAQ,EAAE,YAAY;IAClD,IAAI,AAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,aAAc,YAAY,GACpC,WAAW;IAGf,IAAI,AAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,iBAAkB,gBAAgB,GAC5C,eAAe;IAGnB,IAAI,gBAAgB,UAChB,OAAO,MAAM,GAAG;IAGpB,cAAc;IACd,IAAI,SAAS,CAAC;IACd,MAAM,CAAC,WAAW,GAAG;IACrB,MAAM,CAAC,gBAAgB,GAAG,MAAM,aAAa;IAC7C,MAAM,CAAC,QAAQ,GAAG,MAAM,KAAK;IAC7B,MAAM,CAAC,eAAe,GAAG,MAAM,WAAW;IAC1C,MAAM,CAAC,aAAa,GAAG,MAAM,SAAS;IACtC,MAAM,CAAC,YAAY,GAAG,MAAM,QAAQ,CAAC,QAAQ;IAC7C,MAAM,CAAC,YAAY,GAAG,MAAM,QAAQ,CAAC,QAAQ;IAC7C,MAAM,CAAC,QAAQ,GAAG,EAAE;IACpB,MAAM,CAAC,kBAAkB,GAAG,EAAE;IAC9B,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW;IACnC,MAAM,CAAC,MAAM,GAAG,MAAM,SAAS;IAE/B,WAAW;IAEX,IAAI,cAAc,MAAM,cAAc;IACtC,KAAK,IAAI,MAAM,YACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,GAAG,GAChC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG;IAInC,sBAAsB;IACtB,IAAI,MAAM,EAAE;IACZ,KAAK,IAAI,KAAK,MAAM,UAAU,CAC1B,MAAM,IAAI,MAAM,CAAC,EAAE,eAAe,CAAC,UAAU,eAAe;IAEhE,MAAM,IAAI,MAAM,CAAC,CAAC,IAAM,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC;IAClC,MAAM,CAAC,kBAAkB,GAAG;IAE5B,aAAa;IACb,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW;IACnC,MAAM,CAAC,MAAM,GAAG,MAAM,SAAS;IAC/B,IAAI,aAAa,oCAAc,OAAO,UAAU;IAChD,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,YACtB,MAAM,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE;IAG7B,OAAO;AACX;AAEA,SAAS,sCAAgB,KAAK,EAAE,KAAK,EAAE,KAAK;IACxC,IAAI,UAAU,OAAO,CAAC,WAAW;IACjC,IAAI,CAAC,WAAW,WAAW,QAAQ,WAAW,OAC1C,OAAO,0CAAoB,OAAO,OAAO;IAG7C,IAAI,WAAW,OACX,OAAO,0CAAoB,OAAO,OAAO;IAE7C;AACJ;AAEA,SAAS,0CAAoB,KAAK,EAAE,KAAK,EAAE,aAAa,IAAI;IACxD,wBAAwB;IAExB,6BAA6B;IAC7B,IAAI,OAAO,UAAU,YAAY,iBAAiB,QAC9C,IAAI;QACA,QAAQ,KAAK,KAAK,CAAC;IACvB,EAAE,OAAM;QACJ;IACJ;IAGJ,wBAAwB;IACxB,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,UAAU,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,OAAO,kBACnC;IAGJ,2BAA2B;IAC3B,IAAI,cAAc,MACd,MAAM,WAAW,GAAG,EAAE;IAG1B,mBAAmB;IACnB,MAAM,aAAa,GAAG,OAAO,CAAC,gBAAgB;IAC9C,MAAM,KAAK,GAAG,OAAO,CAAC,QAAQ;IAC9B,MAAM,SAAS,GAAG;IAElB,EAAE;IACF,IAAI,YAAY,kCAAY,MAAM,eAAe;IACjD,YAAY,UAAU,MAAM,CAAC,CAAC,IAAM,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC;IAC9C,IAAI,UAAU,MAAM,IAAI,GACpB;IAGJ,gCAAgC;IAChC,IAAI,cAAc;WAAI,IAAI,IAAI,UAAU,GAAG,CAAC,CAAC,IAAM,EAAE,MAAM,CAAC,UAAU;KAAG;IACzE,cAAc,YAAY,MAAM,CAAC,CAAC,IAAM,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC;IAElD,KAAK,IAAI,cAAc,YAAa;QAChC,IAAI,oBAAoB,UAAU,MAAM,CACpC,CAAC,OAAS,KAAK,MAAM,CAAC,UAAU,IAAI;QAExC,IAAI,WAAW,MAAM,WAAW,CAAC;QAEjC,KAAK,IAAI,MAAM,kBAAmB;YAC9B,KAAK,gCAAU,OAAO;YACtB,SAAS,eAAe,CAAC,IAAI;QACjC;IACJ;AACJ;AAEA,SAAS,gCAAU,KAAK,EAAE,QAAQ;IAC9B,wDAAwD;IAExD,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,WACT,OAAO;IAGX,IAAI,QAAQ,UAAU,QAAQ;IAE9B,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QACT,OAAO;IAGX,IAAK,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG;QAE9B,iBAAiB;QACjB,IAAI,IAAI,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM;QAE1D,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,IAAI;YACb,IAAI,MAAM,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM;YAC9C,EAAE,OAAO,GAAG,MAAM,OAAO;YACzB,MAAM,OAAO,CAAC,GAAG,CAAC;YAClB,IAAI,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM;QAC1D;QAEA,0CAAoB,GAAG,OAAO;QAE9B,wDAAwD;QACxD,SAAS,MAAM,CAAC,KAAK,GAAG;IAC5B;IAEA,OAAO;AACX;AAEA,SAAS,0CAAoB,KAAK,EAAE,KAAK,EAAE,KAAK;IAC5C,wBAAwB;IAExB,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QACT,QAAQ,IAAI,CAAA,GAAA,yCAAe;IAG/B,6BAA6B;IAC7B,IAAI,OAAO,UAAU,YAAY,iBAAiB,QAC9C,IAAI;QACA,QAAQ,KAAK,KAAK,CAAC;IACvB,EAAE,OAAM;QACJ;IACJ;IAGJ,wBAAwB;IACxB,IAAI,CAAC,SAAS,CAAC,MAAM,cAAc,EAC/B;IAGJ,2BAA2B;IAC3B,MAAM,WAAW,GAAG,EAAE;IAEtB,gBAAgB;IAChB,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,MAAM,cAAc,GAC7B;IAGJ,IAAI,YAAY,kCAAY,MAAM,cAAc;IAChD,YAAY,UAAU,MAAM,CAAC,CAAC,IAAM,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC;IAKlC;QACR,IAAI,eAAe,EAAE;QACrB,KAAK,IAAI,KAAK,UAAW;YACrB,IAAI,MAAM,OAAO,CAAC,MAAM,EAAE,MAAM,IAAI,GAAG;gBACnC,IAAI,CAAC,CAAC,EAAE;gBACR,aAAa,IAAI,CAAC;YACtB,OAAO,IAAI,MAAM,OAAO,CAAC,MAAM,EAAE,MAAM,IAAI;iBAEvC,aAAa,IAAI,CAAC;QAE1B;QACA,YAAY;IAChB;IACA,EAAE;IAEF,IAAI,UAAU,MAAM,IAAI,GACpB;IAGJ,gCAAgC;IAChC,IAAI,UAAU;IACd,KAAK,IAAI,YAAY,UAAW;QAC5B,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,WACT;QAGJ,IAAI,QAAQ,UAAU,QAAQ;QAE9B,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,QACT;QAGJ,IAAI,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG;YAC7B,IAAI,IAAI,MAAM,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM;YAClD,sCAAgB,GAAG,OAAO;YAE1B,wDAAwD;YACxD,MAAM,GAAG,CAAC;YACV,IAAI,MAAM,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM;YAE9C,SAAS,MAAM,CAAC,KAAK,GAAG;YACxB,WAAW;QACf;IACJ;IAEA,gCAAgC;IAChC,IAAI,cAAc;WAAI,IAAI,IAAI,UAAU,GAAG,CAAC,CAAC,IAAM,EAAE,MAAM,CAAC,UAAU;KAAG;IAEzE,KAAK,IAAI,cAAc,YACnB,IAAI,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,aAAc;QACxB,IAAI,oBAAoB,UAAU,MAAM,CACpC,CAAC,OAAS,KAAK,MAAM,CAAC,UAAU,IAAI;QAExC,IAAI,WAAW,IAAI,CAAA,GAAA,yCAAS,EAAE;QAC9B,SAAS,eAAe,CAAC;QACzB,MAAM,WAAW,CAAC,IAAI,CAAC;IAC3B;AAER;AAEA,SAAS,kCAAY,KAAK;IACtB,IAAI,MAAM,OAAO,CAAC,QACd,OAAO;SAEP,OAAO;QAAC;KAAM;AAEtB;;;;AC3YO,MAAM;IAET,YAAY,KAAK,CAAC;QACd,IAAI,CAAC,KAAK,GAAG;IAEjB;IAIA,MAAK;QACD,IAAI,cAAc,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QACjC,OAAO;IACX;IAEA,eAAc;QACV,OAAO,mCAAa,IAAI,CAAC,KAAK;IAClC;IACA,IAAI,YAAW;QACX,OAAO,mCAAa,IAAI,CAAC,KAAK;IAClC;IACA,IAAI,QAAO;QACP,OAAO,mCAAa,IAAI,CAAC,KAAK;IAClC;IAEA,cAAa;QACT,OAAO,kCAAY,IAAI,CAAC,KAAK;IACjC;IACA,IAAI,WAAU;QACV,OAAO,kCAAY,IAAI,CAAC,KAAK;IACjC;IACA,IAAI,OAAM;QACN,OAAO,kCAAY,IAAI,CAAC,KAAK;IACjC;IAIA,QAAQ;IACR,IAAI,QAAO;QACP,OAAO,+BAAS,IAAI,CAAC,KAAK;IAC9B;IAEA,QAAQ;IACR,WAAU;QACN,OAAO,+BAAS,IAAI,CAAC,KAAK;IAC9B;IAEA,YAAY;IAEZ,IAAI,YAAW;QACX,OAAO,mCAAa,IAAI,CAAC,KAAK;IAClC;IACA,IAAI,MAAM,KAAK,EAAC;QACZ,OAAO,+BAAS,IAAI,CAAC,KAAK,EAAE;IAChC;IAEA,eAAc;QACV,OAAO,mCAAa,IAAI,CAAC,KAAK;IAClC;IAEA,SAAS,KAAK,EAAC;QACX,OAAO,+BAAS,IAAI,CAAC,KAAK,EAAE;IAChC;IACA,SAAS,KAAK,EAAC;QACX,OAAO,+BAAS,IAAI,CAAC,KAAK,EAAE;IAChC;IAEA,KAAK,KAAK,EAAC;QACP,OAAO,+BAAS,IAAI,CAAC,KAAK,EAAE;IAChC;IACA,IAAI,KAAK,EAAC;QACN,OAAO,+BAAS,IAAI,CAAC,KAAK,EAAE;IAChC;IAEA,QAAQ,GAAG,EAAC;QACR,OAAO,8BAAQ,IAAI,CAAC,KAAK;IAC7B;IACA,SAAS,KAAK,EAAC;QACX,OAAO,+BAAS,IAAI,CAAC,KAAK,EAAE;IAChC;IAIA,WAAW;IAGX,IAAI,OAAM;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;IAC5B;IAEA,IAAI,KAAK,KAAK,EAAC;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG;IAC/B;IAGA,QAAQ,KAAK,EAAC;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG;IAC/B;IAGA,wDAAwD;IACxD,YAAY;IACZ,wDAAwD;IAGxD,sBAAqB;QACjB,OAAO,oBAAoB,IAAI,CAAC,KAAK;IACzC;IAEA,OAAO,KAAK,EAAC;QACT,OAAO,6BAAO,IAAI,CAAC,KAAK,EAAE;IAC9B;IAEA,aAAa,OAAO,EAAE,YAAY,EAAC;QAC/B,OAAO,mCAAa,IAAI,CAAC,KAAK,EAAE,SAAS;IAC7C;IAEA,YAAY,OAAO,EAAE,YAAY,EAAC;QAC9B,OAAO,kCAAY,IAAI,CAAC,KAAK,EAAE,SAAS;IAC5C;IAEA,QAAQ,GAAG,EAAC;QACR,OAAO,8BAAQ,IAAI,CAAC,KAAK,EAAE;IAC/B;IAGA,cAAc,QAAQ,EAAC;QACnB,OAAO,cAAc,IAAI,CAAC,KAAK,EAAE;IACrC;IAEA,UAAU,IAAI,EAAC;QACX,OAAO,UAAU,IAAI,CAAC,KAAK,EAAE;IACjC;IAGA,IAAI,SAAQ;QACR,OAAO,mCAAa,IAAI,CAAC,KAAK,EAAE,MAAM;IAC1C;IAIA,wDAAwD;IACxD,YAAY;IACZ,wDAAwD;IAGxD,OAAO,UAAU,EAAE,KAAK,EAAC;QACrB,qCAAqC;QACrC,OAAO,6BAAO,IAAI,CAAC,KAAK,EAAE,YAAY;IAC1C;AAKJ;AAGA,SAAS,kCAAY,SAAS,EAAE,WAAW,EAAE,SAAS;IAClD,oFAAoF;IAEpF,YAAY,aAAa,aAAa,aAAa,aAAa,CAAC,MAAM;IACvE,cAAc,aAAa,eAAe,aAAa,CAAC,QAAQ,IAAI;IAEpE,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,cAAe,OAAO;IAElC,KAAI,IAAI,KAAK,UAAU,CAAC,CAAC,GAAG,CAAC,oBAAoB,UAAU,EAAE,CAAC;QAC1D,IAAG,GAAG,eAAe,eAAe,GAAG,aAAa,WAChD,OAAO;QAEX,IAAI,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,SAAU,SAAS;QACtC,IAAG,MAAM,eAAe,eAAe,MAAM,aAAa,WACtD,OAAO;IAEf;IACA,OAAO;AACX;AAEA,SAAS,mCAAa,SAAS;IAE3B,IAAI,YAAY,UAAU,CAAC,CAAC,GAAG,CAAC,mBAAmB,MAAM;IAEzD,SAAS,cAAc,KAAK,EAAE,KAAK;QAE/B,IAAI,gBAAgB,MAAM,CAAC,CAAC,QAAQ,IAAI;QACxC,IAAI,gBAAgB,MAAM,CAAC,CAAC,QAAQ,IAAI;QAExC,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,kBAAkB,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,gBACnC,OAAO;QAGX,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,kBAAkB,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,gBACtC,OAAO;QAGX,IAAG,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,kBAAkB,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,gBACtC,OAAO;QAGX,IAAG,MAAM,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,QAAQ,EAClC,OAAO;QAEX,IAAG,MAAM,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,QAAQ,EAClC,OAAO;QAEX,OAAO;IACX;IAEA,mBAAmB;IACnB,8BAA8B;IAE9B,OAAO;AACX;AAGA,SAAS,mCAAa,SAAS;IAE3B,IAAI,YAAY,mCAAa;IAE7B,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,YAAa,OAAO;IAEhC,0BAA0B;IAC1B,KAAI,IAAI,KAAK,UAAU;QACnB,IAAG,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,QAAQ,KAAK,GAC7C,OAAO;IAEf;IAED,uCAAuC;IACtC,IAAI,gBAAgB,UAAU,MAAM,CAAC,CAAA,IAAK,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,GAAG,GAAG;IACzD,IAAG,cAAc,MAAM,IAAI,GACvB,OAAO,aAAa,CAAC,EAAE;IAG3B,QAAQ;IACR,IAAI,YAAY,SAAS,CAAC,EAAE;IAC5B,OAAO;AAEX;AAEA,SAAS,kCAAY,SAAS;IAC1B,IAAI,YAAY,mCAAa;IAE7B,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,YAAa,OAAO;IAEhC,IAAG,UAAU,MAAM,IAAI,GAAI,OAAO,SAAS,CAAC,EAAE;IAE9C,IAAI,gBAAgB,UAAU,MAAM,CAAC,CAAA,IAAK,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,GAAG,GAAG;IAC5D,IAAG,cAAc,MAAM,IAAI,GACvB,OAAO,aAAa,CAAC,EAAE;SAEvB,OAAO,aAAa,CAAC,cAAc,MAAM,GAAG,EAAE;IAGlD,QAAQ;IACR,IAAI,WAAW,SAAS,CAAC,UAAU,MAAM,GAAE,EAAE;IAE7C,OAAO;AACX;AAGA,SAAS,+BAAS,KAAK;IAEnB,IAAI,YAAY,mCAAa;IAC7B,YAAY,kCAAY;IACxB,IAAI,QAAQ,UAAU,GAAG,CAAC,CAAA,IAAK,GAAG,EAAE,IAAI,QAAQ;IAChD,QAAQ,MAAM,MAAM,CAAE,CAAA,IAAK,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC;IACrC,QAAQ,kCAAY;IACpB,OAAO;AACX;AAGA,SAAS,+BAAS,SAAS,EAAE,SAAS;IAElC,YAAY,kCAAY;IAExB,oBAAoB;IACpB,IAAI,eAAe,EAAE;IACrB,IAAI,WAAW,kCAAY;IAE3B,KAAK,IAAI,YAAY,UAAW;QAE5B,WAAW,qCAAe,WAAW;QACrC,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,WAAU;YAElB,SAAS,CAAC,CAAC,QAAQ,GAAG;YACtB,UAAU,CAAC,CAAC,GAAG,CAAC,mBAAmB;QAEvC,OAAO;YAEH,SAAS,CAAC,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,QAAQ,GAAG;YAC5C,kCAAY,WAAW,UAAU;QAErC;QACA,WAAW;IACf;IAEA,0CAAoB;IAEpB;AACJ;AAEA,SAAS,0CAAoB,SAAS;IAGlC,IAAI,WAAW;IACf,IAAI,OAAO,mCAAa;IAExB,MAAO,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,MAAM;QAErB,IAAG,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,SAAS,UAChC,KAAK,CAAC,CAAC,GAAG,CAAC,YAAY;QAE3B,IAAI,WAAW,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa;QACvC,OAAO,kCAAY,WAAW;QAE9B,YAAY;IAEhB;IAEA;AAEJ;AAGA,wDAAwD;AACxD,kBAAkB;AAClB,wDAAwD;AAExD,SAAS,6BAAO,SAAS,EAAE,OAAO;IAC9B,IAAI,OAAO,kCAAY,WAAW;IAClC,IAAI,CAAC,MACD,OAAO;IAGX,IAAI,IAAI,KAAK,CAAC,CAAC,YAAY;IAC3B,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ;IAEvB,gDAAgD;IAChD,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,IACZ,EAAE,CAAC,CAAC,QAAQ,GAAG;IAEnB,IAAI,CAAA,GAAA,oBAAA,EAAE,SAAS,CAAC,IACZ,EAAE,CAAC,CAAC,YAAY,GAAG;IAGvB,mBAAmB;IACnB,UAAU,CAAC,CAAC,MAAM,CAAC,mBAAmB;IAGtC,gBAAgB;IAChB,0CAAoB;IAEpB,eAAe;IACf,KAAK,CAAC,CAAC,YAAY,GAAG;IACtB,KAAK,CAAC,CAAC,QAAQ,GAAG;IAElB;AACJ;AAGA,SAAS,qCAAe,SAAS,EAAE,QAAQ;IACvC,6DAA6D;IAE7D,mBAAmB;IACnB,IAAG,CAAC,UAAU,aACV,WAAW,UAAU,GAAG,CAAC;IAG7B,0BAA0B;IAC1B,IAAG,SAAS,WAAW,IAAI,YAAW;QAClC,IAAI,cAAc,UAAU,GAAG;QAC/B,YAAY,WAAW,GAAG;QAC1B,YAAY,CAAC,CAAC,GAAG,CAAC,QAAQ;QAC1B,WAAW;IACf;IAEA,OAAO;AAEX;AAKA,SAAS,mCAAa,SAAS,EAAE,aAAa,EAAE,YAAY;IAGxD,mDAAmD;IACnD,IAAI,OAAO,kCAAY,WAAW;IAClC,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,OACR,OAAO,qCAAe,WAAW;IAGrC,oBAAoB;IACpB,IAAI,IAAI,kCAAY,WAAW;IAE/B,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,IAAK,MAAM;IAEvB,kCAAkC;IAClC,IAAI,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,iBAAiB,SAAS;IAC1C,IAAI,kCAAY,WAAW;IAE3B,cAAc;IACd,UAAU,WAAW;IACrB,IAAI,MACA,KAAK,WAAW;IAEpB,IAAI,GACA,EAAE,WAAW;IAEjB,IAAI,GACA,EAAE,WAAW;IAGjB,iCAAiC;IACjC,6BAAO,WAAW;IAGlB,oBAAoB;IACpB,KAAK,CAAC,CAAC,GAAG,CAAC,gBAAgB;IAC3B,KAAK,CAAC,CAAC,GAAG,CAAC,YAAY;IAEvB,IAAI,GACA,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY;IAExB,IAAI,GACA,EAAE,CAAC,CAAC,GAAG,CAAC,gBAAgB;IAI5B,eAAe;IACf,UAAU,WAAW;IACrB,IAAI,MACA,KAAK,WAAW;IAEpB,IAAI,GACA,EAAE,WAAW;IAEjB,IAAI,GACA,EAAE,WAAW;IAoBjB,WAAW;IACX,UAAU,CAAC,CAAC,GAAG,CAAC,mBAAmB;IAEnC,0CAAoB;IAGpB,OAAO;AACX;AAEA,SAAS,kCAAY,SAAS,EAAE,aAAa,EAAE,YAAY;IACvD;;KAEC,GAED,mDAAmD;IACnD,IAAI,OAAO,kCAAY,WAAW;IAClC,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,OACR,OAAO,qCAAe,WAAW;IAGrC,oBAAoB;IACpB,IAAI,IAAI,kCAAY,WAAW;IAE/B,IAAG,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,IAAK,MAAM;IAEvB,kCAAkC;IAClC,IAAI,IAAI,EAAE,CAAC,CAAC,QAAQ,IAAI;IACxB,IAAI,kCAAY,WAAW;IAE3B,cAAc;IACd,UAAU,WAAW;IACrB,IAAI,MACA,KAAK,WAAW;IAEpB,IAAI,GACA,EAAE,WAAW;IAEjB,IAAI,GACA,EAAE,WAAW;IAGjB,iCAAiC;IACjC,6BAAO,WAAW;IAElB,oBAAoB;IACpB,KAAK,CAAC,CAAC,YAAY,GAAG;IACtB,KAAK,CAAC,CAAC,QAAQ,GAAG;IAElB,IAAI,GACA,EAAE,CAAC,CAAC,QAAQ,GAAC;IAEjB,IAAI,GACA,EAAE,CAAC,CAAC,YAAY,GAAC;IAKrB,eAAe;IACf,UAAU,WAAW;IACrB,IAAI,MACA,KAAK,WAAW;IAEpB,IAAI,GACA,EAAE,WAAW;IAEjB,IAAI,GACA,EAAE,WAAW;IAoBjB,WAAW;IACX,UAAU,CAAC,CAAC,GAAG,CAAC,mBAAmB;IAEnC,0CAAoB;IACpB,OAAO;AACX;AAEA,SAAS,8BAAQ,SAAS,EAAE,GAAG;IAG3B,OAAO,kCAAY,WAAW;AAkBlC;AAEA,SAAS,uCAAiB,SAAS,EAAE,GAAG;IACpC,IAAI,QAAQ,UAAU,CAAC,CAAC,GAAG,CAAC,mBAAmB,MAAM;IAErD,KAAK,IAAI,QAAQ,MAAO;QACpB,IAAI,KAAK,WAAW,IAAI,GAAG,CAAC,QAAQ,IAAI,KAAK,SAAS,IAAI,GAAG,CAAC,MAAM,EAChE,OAAO;IAEf;IACA,OAAO;AACX;AAEA,SAAS,mCAAa,SAAS,EAAE,GAAG;IAChC,IAAI,QAAQ,UAAU,CAAC,CAAC,GAAG,CAAC,mBAAmB,MAAM;IACrD,KAAK,IAAI,QAAQ,MAAO;QACpB,IACI,KAAK,IAAI,CAAC,WAAW,IAAI,GAAG,CAAC,QAAQ,IACrC,KAAK,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,MAAM,EAEjC,OAAO;IAEf;IACA,OAAO;AACX;AAEA,wDAAwD;AACxD,oBAAoB;AACpB,wDAAwD;AAExD,SAAS,gCAAU,SAAS;IACxB,IAAI,SAAS,CAAC;IACd,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,UAAU,OAAO,GAC1B,OAAO,CAAC;SAER,SAAS,UAAU,OAAO;IAG9B,IAAI,OAAO;QAAC;QAAS;QAAU;QAAW;KAAiB;IAC3D,KAAK,IAAI,KAAK,KAAM;QAChB,IAAI,IAAI,IAAI,CAAC,EAAE;QACf,IAAI,CAAC,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,IACV,MAAM,CAAC,EAAE,GAAG;IAEpB;IACA,OAAO;AACX;AAEA,SAAS,gCAAU,SAAS,EAAE,KAAK;IAC/B,UAAU,OAAO,GAAG;AACxB;AAEA,wDAAwD;AACxD,WAAW;AACX,wDAAwD;AAOxD,SAAS,6BAAO,KAAK,EAAE,UAAU,EAAE,KAAK;IACpC,EAAE;IAEF,0BAA0B;IAC1B,IAAG,KAAK,CAAC,QAAQ,EACb,QAAQ,MAAM,GAAG,CAAC;IAGtB,gBAAgB;IAChB,IAAI,UAAU,MAAM,IAAI,CAAC,GAAG;IAE5B,yBAAyB;IACzB,KAAI,IAAI,QAAQ,MAAM,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAI,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa;QACrC,KAAI,IAAI,KAAK,OAAO;YAChB,IAAG,EAAE,WAAW,EACZ;gBAAA,IAAG,EAAE,EAAE,CAAC,QAAO;oBACX,QAAQ,IAAI,CAAC,GAAG,CAAC;oBACjB;gBACJ;YAAA,OAEA,IAAG,KAAK,OAAM;gBACV,QAAQ,IAAI,CAAC,GAAG,CAAC;gBACjB;YACJ;QAER;IACJ;IACA,OAAO;AAEX;AAEA,SAAS,qCAAe,SAAS,EAAE,2BAA2B;IAC1D;;KAEC,GAED,IAAI,YAAY,IAAI;IAEpB,KAAK,IAAI,QAAQ,+BAAS,WAAY;QAClC,IAAI,SAAS,4BAA4B,GAAG,CAAC,CAAC,MAC1C,IAAI,IAAI,CAAC,KAAK,IAAI;QAGtB,IAAI,OAAO,KAAK,CAAC,YAAY,MACzB,UAAU,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI;IAEpC;IAEA,OAAO;AACX;AAEA,SAAS,kCAAY,KAAK;IACtB,IAAI,MAAM,OAAO,CAAC,QACd,OAAO;SAEP,OAAO;QAAC;KAAM;AAEtB;;;;ACprBA,IAAI,oCAAc,EAAE;AAEb,MAAM;IAET,YAAY,KAAK,CAAE;QACf,IAAI,CAAC,KAAK,GAAG;IACjB;IAGA,wDAAwD;IACxD,SAAS;IACT,wDAAwD;IAGxD,IAAI,OAAM;QACN,OAAO,IAAI,CAAC,OAAO;IACvB;IAEA,QAAQ,UAAU,EAAE,KAAK,EAAC;QACtB,oCAAoC;QACpC,IAAI,kBAAkB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG;QACzC,gBAAgB,IAAI,CAAC,GAAG,CAAC;QAEzB,IAAG,cAAc,cAAc,MAC3B,kBAAkB,gBAAgB,IAAI,CAAC,MAAM,CAAC,YAAY;QAG9D,OAAO;IACX;IAGA,wDAAwD;IACxD,YAAY;IACZ,wDAAwD;IAIxD,MAAK;QACD,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC5B,OAAO,CAAC,CAAC,UAAU;QACnB,kCAAY,IAAI,CAAC;QACjB,OAAO;IACX;IAEA,IAAI,OAAM;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,KAAK;IACzC;IAEA,IAAI,KAAK,KAAK,EAAC;QACX,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ;IAC7B;IAGA,IAAI,SAAQ;QACR,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK;QAC7C,IAAG,CAAC,QACA,IAAI,CAAC,WAAW,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAE9C,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK;IAC3C;IAEA,IAAI,OAAO,KAAK,EAAC;QACb,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU;IAC/B;IAEA,IAAI,aAAY;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,KAAK;IAC/C;IAEA,IAAI,WAAW,KAAK,EAAC;QACb,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc;IACvC;IAEA,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK;IAC3C;IAEA,IAAI,OAAO,KAAK,EAAC;QACb,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU;QAC3B,IAAI,CAAC,YAAY;IACrB;IAEA,IAAI,UAAS;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,MAAM;IAC5C;IAEA,IAAI,QAAQ,KAAK,EAAC;QACV,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU;QAC/B,IAAI,CAAC,YAAY;IACrB;IAEA,IAAI,YAAW;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,KAAK;IAC9C;IAEA,IAAI,UAAU,KAAK,EAAC;QAChB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,MAAM;IAC5C;IAEA,IAAI,UAAS;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK;IAC5C;IAEA,IAAI,QAAQ,KAAK,EAAC;QACV,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW;IACpC;IAEA,IAAI,eAAc;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,gBAAgB,KAAK;IACjD;IAEA,IAAI,aAAa,KAAK,EAAC;QACnB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,MAAM;IAC/C;IAEA,IAAI,QAAO;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,KAAK;IAC1C;IAEA,IAAI,MAAM,KAAK,EAAC;QACR,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS;IAClC;IAGA,iBAAiB;IAEjB,QAAO;QACH,IAAI,CAAC,UAAU;IACnB;IACA,aAAY;QAER,IAAI,OAAO,IAAI;QACf,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,YAAY,GAAG;IACxB;IAEA,OAAM;QACF,IAAI,CAAC,SAAS;IAClB;IACA,YAAW;QACP,IAAI,CAAC,OAAO,GAAG,IAAI;IACvB;IAEA,WAAU;QACN,IAAI,YAAY,IAAI,CAAC,SAAS;QAC9B,IAAI,UAAU,IAAI,CAAC,OAAO,IAAI,IAAI;QAElC,IAAG,WACC,OAAO,UAAU;QAErB,OAAO;IACX;IAGA,0BAA0B;IAE1B,YAAW;QACP,OAAO,IAAI,CAAC,YAAY,IAAI;IAChC;IAEA,eAAc;QACV,IAAI,CAAC,YAAY,GAAG;QACpB,IAAG,CAAC,IAAI,CAAC,SAAS,EAAG,IAAI,CAAC,UAAU;QACpC,IAAG,CAAC,IAAI,CAAC,OAAO,EAAG,IAAI,CAAC,SAAS;QACjC,IAAI,CAAC,KAAK,GAAG;IACjB;IAEA,UAAU,YAAY,EAAC;QACnB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,KAAK,GAAG;IACjB;IAEA,iBAAiB;IAEjB,IAAI,aAAY;QACZ,IAAG,IAAI,CAAC,SAAS,IAAI,MACjB,OAAO;aAEP,OAAO;IAEf;IAEA,IAAI,cAAa;QACb,IAAG,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAG,MAAQ,OAAO;QAChD,IAAG,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM,GACxB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA,IAAI,EAAE,eAAe,CAAC;aAC1C,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;aAEnC,OAAO,IAAI,CAAC,MAAM;IAE1B;IAEA,cAAc;IACd,IAAI,cAAa;QAEb,IAAI,OAAO,oCAAc,IAAI,CAAC,SAAS;QACvC,IAAG,QAAQ,QAAQ,MAAO,OAAO,KAAK,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QAEjE,IAAI,OAAO,oCAAc,IAAI,CAAC,SAAS;QACvC,IAAG,QAAQ,QAAQ,MAAO,OAAO,KAAK,kBAAkB;QAExD,IAAI,SAAS,IAAI,CAAC,YAAY;QAC9B,IAAG,UAAU,UAAU,MAAO,SAAS,OAAO,OAAO,CAAC,gBAAgB,IAAI,WAAW;QAErF,IAAI,OAAO,IAAI,CAAC,IAAI;QACpB,IAAG,CAAC,QAAQ,QAAQ,MAAO,OAAO;QAElC,IAAI,QAAQ,IAAI,CAAC,KAAK;QACtB,IAAG,CAAC,SAAS,SAAS,MAAO,QAAQ;QAErC,IAAI,cAAc,IAAI,CAAC,WAAW;QAClC,IAAG,eAAe,eAAe,MAAO,cAAc,YAAY,OAAO,CAAC,UAAU;QAEpF,IAAI,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,GAAG,EAAE,UAAU,GAAG,GAAG,EAAE,eAAe,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC;QACtG,OAAO;IACX;AAGJ;AAIA,SAAS,oCAAc,KAAK;IACxB,IAAI,iBAAiB,QAAQ,CAAC,MAAM,QAChC,OAAO;IAGX,MAAM,OAAO,IAAI,KAAK;IACtB,IAAI,CAAC,MAAM,KAAK,OAAO,KACnB,OAAO;IAGX,OAAO;AACX;;;;AC5OA,IAAI,wCAAkB,EAAE;AAMjB,MAAM;IACT;;;;;KAKC,GACD,YAAY,KAAK,CAAC;QACd,IAAI,CAAC,KAAK,GAAG;QAEb,IAAI,CAAC,UAAU,GAAG,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,UAAU,GAAG;YACd,SAAS;YACT,OAAO;YACP,QAAQ;QACZ;IAEA,oBAAoB;IAEpB,0CAA0C;IAC1C,oDAAoD;IACpD,wDAAwD;IAG5D;IAEA,wDAAwD;IACxD,QAAQ;IACR,wDAAwD;IAGxD,MAAM,WAAU;QACZ,OAAO,MAAM,IAAI,CAAC,GAAG;IACzB;IAEA,MAAM,MAAK;QAGP,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG;QAClC,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAChD,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;QAChC,OAAO,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QAErC,IAAI;YACA,IAAI,UAAU,MAAM,CAAA,GAAA,oBAAA,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG;YACpE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG;YAC3B,OAAO,CAAC,CAAC,YAAY;YACrB,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK;QAEhC,EAAE,OAAO,OAAO;YACZ,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO;QAC9B;QAEA,OAAO;IAEX;IAIA,MAAM,SAAQ;QACV,OAAO,MAAM,IAAI,CAAC,SAAS;IAC/B;IAEA,MAAM,YAAW;QAEb,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG;QAClC,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,YAAY,CAAC;QAC9B,OAAO,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QAErC,IAAI;YACA,IAAI,UAAU,MAAM,CAAA,GAAA,oBAAA,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM;YACjE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG;YAC3B,OAAO,CAAC,CAAC,YAAY;YACrB,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK;QAEhC,EAAE,OAAO,OAAO;YACZ,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO;QAC9B;QAEA,OAAO;IAEX;IAGA,MAAM,kBAAiB;QAEnB,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG;QAClC,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvD,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;QAChC,OAAO,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QAErC,IAAI;YAEA,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG;YAGhC,IAAI,UAAU,MAAM,CAAA,GAAA,oBAAA,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,GAAG,YAAa,IAAI,CAAC,KAAK,CAAC,GAAG;YAElF,OAAO,MAAM,CAAC,MAAM,GAAG;YACvB,OAAO,CAAC,CAAC,YAAY;YACrB,OAAO,CAAC,CAAC,MAAM,GAAG;QAEtB,EAAE,OAAO,OAAO;YACZ,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO;QAC9B;QAEA,OAAO;IAEX;IAEA,MAAM,aAAa,SAAS,EAAC;QAEzB,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG;QAClC,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvD,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;QAChC,OAAO,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QAErC,IAAI;YAEA,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG;YAEhC,IAAI,IAAI,IAAI,CAAC,MAAM;YACnB,EAAE,UAAU,GAAG;YACf,EAAE,SAAS,GAAG;YAEd,IAAI,UAAU,MAAM,CAAA,GAAA,oBAAA,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,GAAG,iBAAkB;YAEzE,OAAO,MAAM,CAAC,MAAM,GAAG;YACvB,OAAO,CAAC,CAAC,YAAY;YACrB,OAAO,CAAC,CAAC,MAAM,GAAG;QAEtB,EAAE,OAAO,OAAO;YACZ,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO;QAC9B;QAEA,OAAO;IAGX;IAEA,MAAM,OAAM;QAER,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG;QAClC,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAChD,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;QAChC,OAAO,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QAErC,IAAI;YACA,IAAI,UAAU,MAAM,CAAA,GAAA,oBAAA,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM;YAC/E,OAAO,CAAC,CAAC,YAAY;YACrB,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK;QAEhC,EAAE,OAAO,OAAO;YACZ,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO;QAC9B;QAEA,OAAO;IACX;IAIA,MAAM,SAAQ;QAEV,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG;QAClC,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnD,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;QAChC,OAAO,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QAErC,IAAI;YACA,IAAI,UAAU,MAAM,CAAA,GAAA,oBAAA,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG;YACvE,OAAO,CAAC,CAAC,YAAY;YACrB,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK;QAEhC,EAAE,OAAO,OAAO;YACZ,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO;QAC9B;QAEA,OAAO;IACX;IAGA,MAAM,iBAAgB;QAElB,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG;QAClC,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,eAAe,CAAC;QACjC,OAAO,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QAErC,IAAI,OAAO;QACX,IAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,IAAI,MACvC,OAAO,IAAI,CAAC,WAAW,GAAG;aAE1B,OAAO;QAGX,IAAI;YACA,IAAI,UAAU,MAAM,CAAA,GAAA,oBAAA,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;YAE3C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG;YAC3B,OAAO,CAAC,CAAC,YAAY;YACrB,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK;QAEhC,EAAE,OAAO,OAAO;YACZ,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO;QAC9B;QAEA,OAAO;IAEX;IAIA,wDAAwD;IACxD,sBAAsB;IACtB,wDAAwD;IAGxD,IAAI,OAAM;QACN,OAAO;YAAC,IAAI,CAAC,WAAW;YAAE,IAAI,CAAC,aAAa;SAAC,CAAC,IAAI,CAAC;IACvD;IAEA,IAAI,YAAW;QACX,OAAO,IAAI,CAAC,UAAU;IAC1B;IAEA,IAAI,UAAU,KAAK,EAAC;QAChB,IAAI,CAAC,UAAU,GAAG;IACtB;IAEA,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM;IAChC;IAEA,IAAI,OAAO,KAAK,EAAC;QACb,IAAG,CAAC,SAAS,SAAS,MAAO;QAE7B,IAAG,CAAC,MAAM,UAAU,CAAC,SACjB,QAAQ,aAAa;QAGzB,IAAI,MAAM,IAAI,IAAI;QAClB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,aAAa,IAAI,QAAQ;QACjD,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,QAAQ;IAC7C;IAEA,IAAI,gBAAe;QACf,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa;IACvC;IACA,IAAI,cAAc,KAAK,EAAC;QACpB,IAAG,CAAC,SAAS,SAAS,MAAO;QAC7B,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG;IACnC;IAEA,IAAI,cAAa;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW;IACrC;IACA,IAAI,YAAY,KAAK,EAAC;QAClB,IAAG,CAAC,SAAS,SAAS,MAAO;QAC7B,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG;IACjC;IAEA,IAAI,cAAa;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW;IACnC;IACA,IAAI,YAAY,KAAK,EAAC;QAClB,IAAG,CAAC,SAAS,SAAS,MAAO;QAC7B,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC/B;IAEA,IAAI,YAAW;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS;IACjC;IACA,IAAI,UAAU,KAAK,EAAC;QAChB,IAAG,CAAC,SAAS,SAAS,MAAO;QAC7B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;IAC7B;IAEA,IAAI,QAAO;QACP,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK;QAC1B,IAAG,CAAC,KAAK,KAAI,MACT,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC;QAE1B,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK;IAC7B;IAEA,IAAI,MAAM,KAAK,EAAC;QACZ,IAAG,CAAC,SAAS,SAAS,MAAO;QAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG;IACzB;IAEA,IAAI,QAAO;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK;IAC7B;IACA,IAAI,MAAM,KAAK,EAAC;QACZ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG;IACzB;IAEA,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;IAC9B;IACA,IAAI,OAAO,KAAK,EAAC;QACb,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;IAC1B;IAEA,IAAI,UAAS;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO;IAC/B;IACA,IAAI,QAAQ,KAAK,EAAC;QACd,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG;IAC3B;IAEA,IAAI,iBAAgB;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc;IACtC;IACA,IAAI,eAAe,KAAK,EAAC;QACrB,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG;IAClC;IAGA,IAAI,SAAQ;QAER,MAAM,SAAS,CAAC;QAEhB,IAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,MAC3B,MAAM,CAAC,QAAQ,GAAG,KAAK,SAAS,CAAC,IAAI,CAAC,KAAK;QAE/C,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,MAC7B,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM;QAElC,IAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,MAC3B,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK;QAEhC,IAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,MAC/B,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO;QAEpC,IAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,IAAI,MAC7C,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc;QAGlD,IAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,IAAI,MACvC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW;QAG5C,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,IAAI,MACnC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS;QAGxC,OAAO;IACX;IAGA,IAAI,MAAK;QACL,OAAO,IAAI,CAAC,IAAI;IACpB;IAEA,IAAI,IAAI,KAAK,EAAC;QACV,IAAI,CAAC,IAAI,GAAG;QAEZ,IAAI,CAAC,aAAa,GAAG,MAAM,MAAM,CAAC,aAAa;QAC/C,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK,CAAC,QAAQ,IAAI,MAAM,KAAK,CAAC,IAAI;QACrD,IAAI,CAAC,MAAM,GAAG,MAAM,KAAK,CAAC,SAAS,IAAI,MAAM,KAAK,CAAC,IAAI;QACvD,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK,CAAC,QAAQ,IAAI,MAAM,KAAK,CAAC,IAAI;QACrD,IAAI,CAAC,OAAO,GAAG,MAAM,KAAK,CAAC,UAAU;QACrC,IAAI,CAAC,cAAc,GAAG,MAAM,KAAK,CAAC,iBAAiB;QACnD,IAAI,CAAC,WAAW,GAAG,MAAM,KAAK,CAAC,cAAc;QAC7C,IAAI,CAAC,WAAW,GAAG,MAAM,KAAK,CAAC,QAAQ;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,MAAM,CAAC,cAAc;QAC9C,IAAI,CAAC,WAAW,GAAG,MAAM,MAAM,CAAC,QAAQ;QACxC,IAAI,CAAC,SAAS,GAAG,MAAM,KAAK,CAAC,YAAY;QACzC,IAAI,CAAC,SAAS,GAAG,MAAM,KAAK,CAAC,MAAM;QACnC,IAAI,CAAC,SAAS,GAAG,MAAM,MAAM,CAAC,YAAY;QAC1C,IAAI,CAAC,SAAS,GAAG,MAAM,MAAM,CAAC,MAAM;QACpC,IAAI,CAAC,UAAU,GAAG,MAAM,MAAM,CAAC,aAAa;QAC5C,IAAG,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,MAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,QAAQ,GAAG;IAKvC;IAGA,wDAAwD;IACxD,YAAY;IACZ,wDAAwD;IAExD,IAAI,aAAY;QACZ,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,IAAI,CAAC,UAAU;QAC7D,OAAO;IACX;AAGJ;;;;AC9YO,MAAM;IACT,YAAY,KAAK,CAAC;QACd,IAAI,CAAC,KAAK,GAAG;IAEjB;IAEA,OAAM;QAEF,IAAI,cAAc,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI;QAE5C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,oCAAc;IAEtC;AAEJ;AAMA,SAAS,oCAAc,WAAW;IAE9B,IAAG,CAAC,eAAe,eAAe,QAAQ,eAAe,SACrD,OAAO;QACH,YAAY;QACZ,SAAS;QACT,OAAO;QACP,QAAQ;IACZ;IAGJ,IAAG,eAAe,YACd,OAAO;QACH,SAAS;QACT,OAAO;QACP,QAAQ;QACR,mBAAmB;YACf;gBACI,SAAS;gBACT,OAAO;gBACP,QAAQ;gBACR,YAAY;gBACZ,gBAAgB;gBAChB,YAAY;oBACR,SAAS;oBACT,OAAO;gBACX;gBACA,QAAQ;oBACJ,SAAS;oBACT,OAAO;oBACP,QAAQ;oBACR,OAAO;gBACX;YACJ;YACA;gBACI,SAAS;gBACT,OAAO;gBACP,QAAQ;gBACR,YAAY;gBACZ,gBAAiB;oBACb,SAAS;oBACT,OAAO;gBACX;gBACA,YAAY;oBACR,SAAS;oBACT,OAAO;gBACX;gBACA,QAAQ;oBACJ,SAAS;oBACT,OAAO;oBACP,QAAQ;oBACR,OAAO;gBACX;YACJ;YACA;gBACI,SAAS;gBACT,OAAO;gBACP,QAAQ;gBACR,YAAY;gBACZ,gBAAiB;oBACb,SAAS;oBACT,OAAO;gBACX;gBACA,YAAY;oBACR,SAAS;oBACT,OAAO;gBACX;gBACA,QAAQ;oBACJ,SAAS;oBACT,OAAO;oBACP,QAAQ;oBACR,OAAO;gBACX;YACJ;YACA;gBACI,SAAS;gBACT,OAAO;gBACP,QAAQ;gBACR,YAAY;gBACZ,gBAAiB;oBACb,SAAS;oBACT,OAAO;gBACX;gBACA,YAAY;gBACZ,QAAQ;oBACJ,SAAS;oBACT,OAAO;oBACP,QAAQ;oBACR,OAAO;gBACX;YACJ;SACH;IACL;IAIJ,OAAO;QACH,YAAY;QACZ,SAAS;QACT,OAAO;QACP,QAAQ;IACZ;AAIJ;AAOA,SAAS,gCAAU,CAAC,EAAE,IAAE,OAAO;IAE3B,IAAI,SAAS,EAAE;IACf,IAAI,IAAI,IAAE,GAAG,IAAG,GAAG,IACf,OAAO,IAAI,CAAC,+BAAS,GAAG;IAG5B,OAAO;AAEX;AAEA,SAAS,+BAAS,IAAE,CAAC,EAAE,IAAE,OAAO;IAE5B,IAAI,IAAI,gCAAU,GAAG;IACrB,IAAI,QAAQ,IAAI;IAEhB,MAAM,QAAQ,CAAC,WAAW,GAAG;IAC7B,MAAM,QAAQ,CAAC,OAAO,CAAC,UAAU,GAAG;QAChC,SAAS;QAAS,OAAO;IAC7B;IAEA,MAAM,MAAM,GAAG;IACf,OAAO;AAEX;AAEA,SAAS,6BAAO,MAAM;IAGlB,OAAO;QAAC,SAAS,MAAM,CAAC,QAAQ;QAAE,OAAO,MAAM,CAAC,MAAM;IAAA;AAE1D;AAGA,SAAS,iCAAW,CAAC,EAAE,IAAE,OAAO;IAE5B,IAAI,UAAU,EAAE;IAChB,IAAI,IAAI,IAAE,GAAG,IAAG,GAAG,IACf,QAAQ,IAAI,CAAC,gCAAU,GAAG;IAE9B,OAAO;AACX;AAEA,SAAS,gCAAU,CAAC,EAAE,IAAE,OAAO;IAE3B,IAAI,SAAS;QACT,SAAS;QACT,OAAO,IAAI,OAAO;QAClB,QAAQ,IAAI,OAAO;QACnB,SAAS;QACT,SAAS;YACD,YAAY;YACZ,SAAS;YACT,OAAO,WAAW,IAAI,OAAO;YAC7B,QAAQ,WAAW,IAAI,OAAO;YAC9B,SAAQ;gBACA,YAAY;gBACZ,SAAS;gBACT,OAAO,iBAAiB,IAAI,OAAO;gBACnC,QAAQ,iBAAiB,IAAI,OAAO;YAC5C;QAEJ;IAGR;IACA,OAAO;AACX;;;;ACtMO,MAAM;IACT,YAAY,KAAK,CAAC;QACd,IAAI,CAAC,KAAK,GAAG;IAEjB;IAGA,IAAI,WAAU;QACV,OAAO,IAAI,CAAC,WAAW;IAC3B;IAEA,YAAY,KAAK,EAAC;QAEd,QAAQ,SAAS,IAAI,CAAC,KAAK;QAE3B,OAAO,MAAM,WAAW;YACpB,KAAK;gBACD,OAAO,MAAM,CAAC,CAAC,IAAI,IAAI,MAAM,KAAK;YACtC;gBACI,OAAO,MAAM,CAAC,CAAC,IAAI,IAAI,MAAM,KAAK;QAC1C;IACJ;IAEA,IAAI,WAAU;QACV,OAAO,IAAI,CAAC,WAAW;IAC3B;IAEA,YAAY,KAAK,EAAC;QAEd,QAAQ,SAAS,IAAI,CAAC,KAAK;QAE3B,OAAO,MAAM,WAAW;YACpB,KAAK;gBACD,OAAO,MAAM,CAAC,CAAC,IAAI,IAAI,MAAM,KAAK;YAEtC;gBACI,OAAO,MAAM,CAAC,CAAC,IAAI,IAAI,MAAM,KAAK;QAC1C;IACJ;IAEA,IAAI,cAAa;QACb,OAAO,IAAI,CAAC,cAAc;IAC9B;IAEA,eAAe,KAAK,EAAC;QAEjB,QAAQ,SAAS,IAAI,CAAC,KAAK;QAE3B,OAAO,MAAM,WAAW;YACpB,KAAK;gBACD,IAAI,cAAc,IAAI,CAAC,WAAW,CAAC;gBACnC,IAAI,gBAAgB,MAAM,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB;gBACjE,IAAI,iBAAkB,CAAC,EAAE,EAAE,YAAY,GAAG,EAAE,cAAc,CAAC;gBAC3D,OAAO;YAEX,KAAK;gBACD,IAAI,gBAAgB,IAAI,CAAC,WAAW,CAAC;gBACrC,IAAI,kBAAkB,OAAO,MAAM,IAAI,CAAC,MAAM;gBAC9C,IAAI,mBAAoB,CAAC,EAAE,cAAc,EAAE,EAAE,gBAAgB,CAAC,CAAC;gBAC/D,OAAO;YACX,KAAK;gBACD,IAAI,gBAAgB,IAAI,CAAC,WAAW,CAAC;gBACrC,IAAI,oBAAoB,OAAO,MAAM,IAAI,CAAC,MAAM;gBAChD,IAAI,mBAAoB,CAAC,CAAC,EAAE,kBAAkB,EAAE,EAAE,cAAc,CAAC;gBACjE,OAAO;YACX;gBACI,OAAO,MAAM,CAAC,CAAC,IAAI,IAAI,MAAM,KAAK;QAC1C;IACJ;IAEA,IAAI,cAAa;QACb,OAAO,IAAI,CAAC,cAAc;IAC9B;IAEA,eAAe,KAAK,EAAC;QAEjB,QAAQ,SAAS,IAAI,CAAC,KAAK;QAE3B,OAAO,MAAM,WAAW;YACpB,KAAK;gBACD,IAAI,eAAe,EAAE;gBACrB,aAAa,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;gBACtC,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,IAAK,aAAa,IAAI,CAAC,OAAO,OAAO,IAAI,CAAC,cAAc,CAAC;gBAC9E,IAAI,UAAU,aAAa,IAAI,CAAC;gBAChC,OAAO;YAEX;gBACI,OAAO,MAAM,CAAC,CAAC,IAAI,IAAI,MAAM,KAAK;QAC1C;IACJ;AACJ;;;;AG5FO,MAAM;IAET,YAAY,OAAO,CAAC;QAEhB,IAAI,CAAC,OAAO,GAAG;IAEnB;IAIA,aAAY,CAKZ;IAGA,kBAAkB;IAGlB,IAAI,cAAa;QAEb,IAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAa,OAAO;QACvD,IAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAgB,OAAO;QAC1D,IAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAa,OAAO;QACvD,OAAO;IACX;IAEA,IAAI,cAAa;QAEb,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAG,SACC,OAAO,QAAQ,YAAY,CAAC;QAEhC,OAAO;IACX;IAEA,IAAI,YAAY,KAAK,EAAC;QAElB,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAG,SACC,OAAO,QAAQ,YAAY,CAAC,oBAAoB;QAEpD,OAAO;IACX;IAEA,IAAI,YAAW;QAEX,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAG,SACC,OAAO,QAAQ,YAAY,CAAC;QAEhC,OAAO;IACX;IAEA,IAAI,UAAU,KAAK,EAAC;QAEhB,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAG,SACC,OAAO,QAAQ,YAAY,CAAC,kBAAkB;QAElD,OAAO;IACX;IAEA,IAAI,aAAY;QACZ,IAAI,QAAQ;QACZ,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAG,SAAQ;YACP,QAAS,QAAQ,YAAY,CAAC;YAC9B,IAAG,SAAS,MAAM,QAAQ,CAAC,MACvB,QAAQ,MAAM,KAAK,CAAC,IAAI,CAAC,GAAG;QAEpC;QACA,OAAO;IACX;IAEA,IAAI,eAAc;QAEd,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAG,SACC,OAAO,QAAQ,YAAY,CAAC;QAEhC,OAAO;IACX;IAEA,IAAI,WAAW,KAAK,EAAC;QAEjB,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAG,SACC,OAAO,QAAQ,YAAY,CAAC,mBAAmB;QAEnD,OAAO;IACX;IAEA,IAAI,UAAS;QAET,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAG,SACC,OAAO,QAAQ,YAAY,CAAC;QAEhC,OAAO;IACX;IAEA,IAAI,QAAQ,KAAK,EAAC;QAEd,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAG,SACC,OAAO,QAAQ,YAAY,CAAC,gBAAgB;QAEhD,OAAO;IACX;IAGA,0BAA0B;IAE1B,kBAAiB;QAEb,IAAI,iBAAkB;QAEtB,IAAI,uBAAuB;QAE3B,IAAI,mBAAmB,sCAAgB,IAAI,CAAC,OAAO,EAAE,gBAAgB;QAErE,IAAI,eAAe,iBAAiB,GAAG,CAAC,CAAA,IAAK,IAAI,CAAC,qBAAqB,CAAC;QAExE,OAAO;IAEX;IAEA,eAAe,WAAW,EAAE,SAAS,EAAC;QAElC,KAAI,IAAI,KAAK,IAAI,CAAC,eAAe,CAAC;YAC9B,IAAG,EAAE,WAAW,IAAI,eAAe,EAAE,SAAS,IAAI,WAC9C,OAAO;QAEf;QACA,OAAO;IAEX;IAEA,uBAAsB;QAElB,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAI,SAAS;QACb,IAAG,SACC,SAAS,IAAI,0CAAY;QAE7B,OAAO;IACX;IAEA,qBAAoB;QAEhB,IAAI,iBAAiB;QAErB,IAAI,uBAAuB;QAE3B,IAAI,mBAAmB,sCAAgB,IAAI,CAAC,OAAO,EAAE,gBAAgB;QAErE,IAAK,eAAe,iBAAiB,GAAG,CAAC,CAAA,IAAK,IAAI,CAAC,qBAAqB,CAAC;QAEzE,OAAO;IAEX;IAEA,kBAAkB,UAAU,EAAC;QACzB,KAAI,IAAI,KAAK,IAAI,CAAC,kBAAkB,CAAC;YACjC,IAAG,EAAE,UAAU,IAAI,YACf,OAAO;QAEf;QACA,OAAO;IACX;IAEA,0BAAyB;QAErB,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAI,SAAS;QACb,IAAG,SACC,SAAS,IAAI,0CAAY;QAE7B,OAAO;IACX;IAEA,kBAAiB;QAEb,IAAI,iBAAiB;QAErB,IAAI,uBAAuB;QAE3B,IAAI,mBAAmB,sCAAgB,IAAI,CAAC,OAAO,EAAE,gBAAgB;QAErE,IAAK,eAAe,iBAAiB,GAAG,CAAC,CAAA,IAAK,IAAI,CAAC,qBAAqB,CAAC;QAEzE,OAAO;IAEX;IAEA,eAAe,OAAO,EAAC;QAEnB,KAAI,IAAI,KAAK,IAAI,CAAC,kBAAkB,CAAC;YACjC,IAAG,EAAE,OAAO,IAAI,SACZ,OAAO;QAEf;QACA,OAAO;IAEX;IAEA,uBAAsB;QAElB,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAI,SAAS;QACb,IAAG,SACC,SAAS,IAAI,0CAAY;QAE7B,OAAO;IACX;IAEA,cAAc;IAEd,IAAI,qBAAoB;QACpB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,iBAAiB;IACzD;IACA,IAAI,mBAAkB;QAClB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,eAAe;IACvD;IACA,IAAI,qBAAoB;QACpB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,iBAAiB;IACzD;IACA,IAAI,qBAAoB;QACpB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,iBAAiB;IACzD;IAGA,IAAI,wBAAuB;QACvB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,oBAAoB;IAC5D;IACA,IAAI,sBAAqB;QACrB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,kBAAkB;IAC1D;IACA,IAAI,wBAAuB;QACvB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,oBAAoB;IAC5D;IACA,IAAI,wBAAuB;QACvB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,oBAAoB;IAC5D;IAGA,IAAI,qBAAoB;QACpB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,iBAAiB;IACzD;IACA,IAAI,mBAAkB;QAClB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,eAAe;IACvD;IACA,IAAI,qBAAoB;QACpB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,iBAAiB;IACzD;IACA,IAAI,qBAAoB;QACpB,OAAO,qCAAe,IAAI,CAAC,OAAO,EAAE,iBAAiB;IACzD;IAGA,GAAG;IAEH,sBAAsB,OAAO,EAAC;QAC1B,0CAA0C;QAE1C,IAAI,YAAY,IAAI,0CAAY;QAEhC,OAAO;IAEX;AAEJ;AAGA,SAAS,qCAAe,OAAO,EAAE,cAAc,EAAE,oBAAoB;IACjE,IAAI,UAAU,sCAAgB,SAAS,gBAAgB;IACvD,IAAG,QAAQ,MAAM,IAAI,GAAI,OAAO;IAChC,IAAG,QAAQ,MAAM,IAAI,GAAI,OAAO,OAAO,CAAC,EAAE;AAC9C;AAEA,SAAS,sCAAgB,OAAO,EAAE,cAAc,EAAE,oBAAoB;IAElE,IAAI,SAAS,EAAE;IAEf,KAAI,IAAI,KAAK,QAAQ,QAAQ,CAAC;QAE1B,IAAG,EAAE,SAAS,CAAC,QAAQ,CAAC,iBACpB,OAAO,IAAI,CAAC;QAEhB,IAAG,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,uBAAsB;YAC3C,IAAI,kBAAkB,sCAAgB,GAAG,gBAAgB;YACzD,IAAG,gBAAgB,MAAM,GAAG,GACxB,SAAS,OAAO,MAAM,CAAC;QAE/B;IAEJ;IACA,OAAO;AAEX;;;;;;ADzSA,IAAI,sCAAgB,CAAC;AAGd,MAAM;IACT,YAAY,KAAK,EAAE,GAAG,CAAE;QACpB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,UAAU;IACnB;IAEA,aAAa;QACT,IAAI,CAAC,iBAAiB;QACtB,IAAI,CAAC,oBAAoB;QACzB,IAAI,CAAC,YAAY;IACrB;IAEA,oBAAoB;QAChB,IAAI,UAAU,CAAA,GAAA,iBAAA,EAAE,IAAI,CAAC,OAAO,CACxB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,CAAC,WAAW,EACvB,IAAI,CAAC,MAAM,CAAC,MAAM;QAEtB,IAAI,OAAO,SAAS,aAAa,CAAC;QAClC,KAAK,SAAS,GAAG;QACjB,IAAI,UAAU,KAAK,iBAAiB;QACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAA,GAAA,yCAAU,EAAE;QAEtC,wCAAwC;QACxC,IAAI,SAAS,QAAQ,gBAAgB,CAAC;QACtC,KAAK,IAAI,KAAK,OAAQ;YAClB,EAAE,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC;YACtC,IAAI,kBAAkB,EAAE,OAAO,CAAC;YAChC,IAAI,iBACA,gBAAgB,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC;QAE5D;IACJ;IAGA,uBAAsB;QAElB,MAAM,SAAS;YAAE,YAAY;YAAM,WAAW;YAAM,SAAS;QAAK;QAElE,MAAM,WAAW,CAAC,cAAc;YAC9B,KAAK,MAAM,YAAY,aAAc;gBACnC,IAAI,SAAS,IAAI,KAAK,aAClB,KAAI,IAAI,KAAK,SAAS,UAAU,CAC5B,IAAI,CAAC,WAAW,CAAC;qBAEd,SAAS,IAAI;YAE1B;QACF;QAEA,8DAA8D;QAC9D,MAAM,WAAW,IAAI,iBAAiB;QAEtC,2DAA2D;QAC3D,SAAS,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;IAClD;IAEA,eAAc;QAEV,wBAAwB;QAExB,IAAI,UAAU;YAAC;YAAW;YAAc;SAAU;QAElD,KAAI,IAAI,KAAK,QAAQ;YACjB,IAAI,IAAI,MAAM;YACd,IAAI,WAAW,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,gBAAgB,CAAC;YAC5D,KAAI,IAAI,KAAK,SAAW,IAAI,CAAC,WAAW,CAAC;QAC7C;IACJ;IAGA,YAAY,OAAO,EAAC;QAEhB,+BAA+B;QAC/B,IAAG,QAAQ,EAAE,IAAI,QAAQ,EAAE,IAAI,QAAQ,QAAQ,EAAE,IAAI,IAAG;YACpD,IAAG,qCAAe,CAAC,QAAQ,EAAE,CAAC,IAAI,MAAO;QAC7C;QAEA,UAAU;QACV,IAAI,CAAC,aAAa,CAAC;QAEnB,cAAc;QACd,IAAG,QAAQ,SAAS,CAAC,QAAQ,CAAC,YAC1B,IAAI,CAAC,gBAAgB,CAAC;QAG1B,kBAAkB;QAClB,IAAG,QAAQ,SAAS,CAAC,QAAQ,CAAC,eAAc;YACxC,IAAI,CAAC,yBAAyB,CAAC;YAC/B,IAAI,CAAC,oBAAoB,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC;QAC1B;QAEA,eAAe;QACf,IAAG,QAAQ,SAAS,CAAC,QAAQ,CAAC,YAAW;YACrC,IAAI,CAAC,sBAAsB,CAAC;YAC5B,IAAI,CAAC,oBAAoB,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC;QAC1B;QAEA,qBAAqB;QACrB,mCAAa,CAAC,QAAQ,EAAE,CAAC,GAAG;IAEhC;IAGA,cAAc,OAAO,EAAC;QAElB,IAAG,CAAC,QAAQ,EAAE,IAAI,QAAQ,EAAE,IAAI,QAAQ,QAAQ,EAAE,IAAI,IAClD,QAAQ,EAAE,GAAG,OAAO,OAAO,UAAU;IAE7C;IAEA,0BAA0B,OAAO,EAAC;QAE9B,IAAG,qCAAe,CAAC,QAAQ,EAAE,CAAC,IAAI,MAAO;QAEzC,IAAI,aAAa,IAAI;QACrB,IAAI,IAAI,IAAI,CAAA,GAAA,yCAAU,EAAE;QACxB,EAAE,qBAAqB,CAAC,gBAAgB,CAAC,SAAS,CAAC;YAC/C,WAAW,QAAQ,CAAC;QACxB;IACJ;IAEA,uBAAuB,OAAO,EAAC;QAE3B,IAAG,qCAAe,CAAC,QAAQ,EAAE,CAAC,IAAI,MAAO;QAEzC,IAAI,aAAa,IAAI;QACrB,IAAI,IAAI,IAAI,CAAA,GAAA,yCAAU,EAAE;QACxB,EAAE,kBAAkB,CAAC,gBAAgB,CAAC,SAAS,CAAC;YAC5C,WAAW,WAAW,CAAC;QAC3B;IACJ;IAGA,qBAAqB,OAAO,EAAC;QAGzB,IAAG,qCAAe,CAAC,QAAQ,EAAE,CAAC,IAAI,MAAO;QAEzC,IAAI,aAAa,IAAI;QACrB,IAAI,IAAI,IAAI,CAAA,GAAA,yCAAU,EAAE;QAExB,EAAE,OAAO,CAAC,gBAAgB,CAAC,YAAY,CAAC;YACpC,MAAM,cAAc;QACxB;QAEA,EAAE,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC;YAChC,MAAM,cAAc;YACpB,MAAM,eAAe;YAGrB,IAAI,SAAS;YACb,KAAK,MAAM,QAAQ,MAAM,YAAY,CAAC,KAAK,CACvC,IAAI,KAAK,IAAI,KAAK,UAAU;gBACxB,UAAU;gBAEV,IAAG,KAAK,IAAI,IAAI,cACZ,KAAK,WAAW,CAAC,CAAA;oBAEb,QAAQ,GAAG,CAAC,KAAK;oBACjB,IAAI;wBACA,QAAQ,KAAK,KAAK,CAAC;oBAEvB,EAAE,OAAM;wBAEJ,IAAI,MAAM,SAAS,aAAa,CAAC;wBACjC,IAAI,SAAS,GAAG;wBAChB,QAAQ,IAAI,WAAW;oBAC3B;oBACA,IAAG,EAAE,WAAW,IAAI,SAAQ;wBACxB,IAAI,UAAU,EAAE,uBAAuB;wBACvC,WAAW,WAAW,CAAC;wBACvB,WAAW,QAAQ,CAAC,SAAS;oBACjC,OACI,WAAW,QAAQ,CAAC,GAAG;gBAG/B;YAER;QAER;IACJ;IAGA,iBAAiB,OAAO,EAAC;QAGrB,IAAG,qCAAe,CAAC,QAAQ,EAAE,CAAC,IAAI,MAAO;QAEzC,IAAI,aAAa,IAAI;QACrB,IAAI,IAAI,IAAI,CAAA,GAAA,yCAAU,EAAE;QAExB,QAAQ,SAAS,GAAC;QAElB,EAAE,OAAO,CAAC,gBAAgB,CAAC,aAAa,CAAC;YACrC,yBAAyB;YACzB,MAAM,eAAe;YAErB,QAAQ,GAAG,CAAC,QAAQ,WAAW,SAAS,CAAC;YAEzC,MAAM,YAAY,CAAC,OAAO,CAAC,cAAc,KAAK,SAAS,CAAC,WAAW,SAAS,CAAC;QAEjF;QAEA,EAAE,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC;YAC/B,MAAM,cAAc;QAEzB;IACJ;IAGA,aAAa;IAEb,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO;IACtC;IAEA,EAAE;IAGF,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc;IAC7C;IAEA,UAAU,aAAa,EAAE;QAGrB,IAAG,cAAc,WAAW,IAAE,SAAQ;YAClC,IAAI,SAAS,CAAC;YACd,KAAI,IAAI,KAAK,cAAc,kBAAkB,GAAG;gBAC5C,IAAI,YAAY,IAAI,CAAC,SAAS,CAAC;gBAC/B,SAAS;oBAAE,GAAG,MAAM;oBAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE;gBAAC;YAC/C;YACA,OAAO;QACX,OAEK,IAAG,cAAc,WAAW,IAAE,YAAW;YAC1C,IAAI,SAAS,CAAC;YACd,MAAM,CAAC,cAAc,UAAU,CAAC,GAAG,EAAE;YACrC,KAAI,IAAI,KAAK,cAAc,eAAe,GACtC,MAAM,CAAC,cAAc,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAGzD,OAAO;QACX,OAEK,IAAG,cAAc,WAAW,IAAE,SAAQ;YAEvC,IAAI,SAAS,EAAE;YAEf,IAAI,SAAS,cAAc,eAAe;YAE1C,IAAG,UAAU,OAAO,MAAM,IAAI,GAE1B,KAAI,IAAI,KAAK,OACT,SAAS,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;iBAGvC;gBAEH,IAAI;gBACJ,SAAS,cAAc,OAAO,CAAC,gBAAgB,CAAC;gBAChD,KAAI,IAAI,KAAK,OACT,OAAO,IAAI,CAAC,EAAE,KAAK;gBAIvB,SAAS,cAAc,OAAO,CAAC,gBAAgB,CAAC;gBAChD,KAAI,IAAI,KAAK,OACT,OAAO,IAAI,CAAC,EAAE,KAAK;YAG3B;YAEA,OAAO;QAEX,OAEK;YACD,IAAI,UAAU,EAAE;YAChB,KAAI,IAAI,KAAK,cAAc,eAAe,GACtC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAEhC,OAAO;QACX;IAEJ;IAEA,EAAE;IAEF,SAAS,cAAc,EAAE,KAAK,EAAE;QAG5B,IAAG,CAAC,kBAAkB,kBAAkB,MAAO;QAE/C,IAAG,eAAe,WAAW,IAAI,YAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,uBAAuB,IAAI;QAGnE,IAAI,KAAK,CAAA,GAAA,oBAAY,EAAE,GAAG,CAAC,eAAe,UAAU;QACpD,IAAI,IAAI,GAAG,YAAY;QAGvB,IAAI,aACA,eAAe,mBAAmB,CAAC,QAAQ,CAAC,MAAM;QACtD,IAAI,eAAe,eAAe,UAAU,CAAC,KAAK,CAAC;QACnD,YAAY,CAAC,aAAa,MAAM,GAAG,EAAE,GACjC,YAAY,CAAC,aAAa,MAAM,GAAG,EAAE,GACrC,MACA,OAAO,cACP;QAEJ,IAAI,UAAU,CAAA,GAAA,iBAAA,EAAE,IAAI,CAAC,IAAI,CACrB,EAAE,eAAe,EACjB,OACA,eAAe,UAAU,EACzB;QAEJ,IAAI,OAAO,SAAS,aAAa,CAAC;QAClC,KAAK,SAAS,GAAG;QACjB,IAAI,kBAAkB,KAAK,iBAAiB;QAE5C,IAAI,eAAe,eAAe,mBAAmB;QACrD,aAAa,WAAW,CAAC;IAC7B;IAEA,YAAY,WAAW,EAAC;QAEpB,YAAY,OAAO,CAAC,MAAM;IAE9B;AAGJ;;;ADzVO,MAAM;IACT,YAAY,KAAK,CAAC;QACd,IAAI,CAAC,KAAK,GAAG;IACjB;IAEA,KAAK,GAAG,EAAC;QAEL,OAAO,IAAI,CAAA,GAAA,yCAAU,EAAE,IAAI,CAAC,KAAK,EAAE;IAEvC;AACJ;;;AhBUA,IAAI,kCAAY;AAET,MAAM;IACT;;;;;;;;;;;;;;;;;;;;;;IAsBA,GAEA,YAAY,cAAc,IAAI,EAAE,YAAY,IAAI,CAAE;QAG9C,IAAI,CAAC,EAAE,GAAG,OAAO,OAAO,UAAU;QAGlC,IAAI,CAAC,WAAW,GAAG,EAAE;QAErB,IAAI,CAAC,UAAU,GAAG,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG;QAGpB,iBAAiB;QACjB,mBAAmB;QACnB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAA,GAAA,yCAAyB,EAAE,IAAI;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA,GAAA,yCAAuB,EAAE,IAAI;QAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA,GAAA,yCAAyB,EAAE,IAAI;QACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA,GAAA,yCAAuB,EAAE,IAAI;QAChD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA,GAAA,yCAAoB,EAAE,IAAI;QAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA,GAAA,yCAAwB,EAAE,IAAI;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,yCAAiB,EAAE,IAAI;QAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA,GAAA,yCAAqB,EAAE,IAAI;QAG5C,gBAAgB;QAChB,IAAI,CAAC,aAAa,GAAG,KAAO,qCAAqC;;QACjE,IAAI,CAAC,KAAK,GAAG,KAAe,wBAAwB;;QACpD,IAAI,CAAC,SAAS,GAAG,KAAW,iCAAiC;;QAE7D,WAAW;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,yCAAS;QAG7B,wBAAwB;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA,GAAA,yCAAe;QAGlC,oDAAoD;QACpD,IAAI,eAAe,WAAW,CAAC,QAAQ,EACnC,IAAI,CAAC,aAAa,CAAC;QAEvB,EAAE;QACF,IAAI,eAAe,CAAC,WAAW,CAAC,QAAQ,EACpC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS;QAExB,IAAI,WACA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO;QAGtB,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,GACvB,YAAY,OAAO,CAAA,GAAA,SAAK;IAEhC;IAEA,SAAS;QACL,OAAO,IAAI,CAAC,MAAM;IACtB;IAEA,IAAI,OAAM;QACN,OAAO,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM;IAE7C;IAEA,WAAW;QAEP,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,cAAc;QACzC,OAAO;IACP,8CAA8C;IAClD;IAIA,wDAAwD;IACxD,cAAc;IACd,wDAAwD;IAExD,aAAa;IACb,IAAI,IAAG;QACH,OAAO,IAAI,CAAC,EAAE;IAClB;IACA,IAAI,WAAU;QACV,OAAO,IAAI,CAAC,EAAE;IAClB;IAEA,gBAAgB;IAChB,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,OAAO;IACvB;IAEA,WAAW;IACX,IAAI,WAAU;QACV,OAAO,IAAI,CAAC,SAAS;IACzB;IACA,IAAI,OAAM;QACN,OAAO,IAAI,CAAC,SAAS;IACzB;IACA,IAAI,IAAG;QACH,OAAO,IAAI,CAAC,SAAS;IACzB;IAEA,SAAS;IACT,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,OAAO;IACvB;IACA,IAAI,IAAG;QACH,OAAO,IAAI,CAAC,OAAO;IACvB;IAEA,MAAM;IACN,IAAI,MAAK;QACL,OAAO,IAAI,CAAC,IAAI;IACpB;IAEA,WAAW;IACX,IAAI,WAAU;QACV,OAAO,IAAI,CAAC,SAAS;IACzB;IACA,IAAI,UAAS;QACT,OAAO,IAAI,CAAC,SAAS;IACzB;IACA,IAAI,IAAG;QACH,OAAO,IAAI,CAAC,SAAS;IACzB;IAGA,gBAAgB;IAChB,IAAI,UAAS;QACT,OAAO,IAAI,CAAC,QAAQ;IACxB;IAEA,QAAQ;IACR,IAAI,OAAM;QACN,OAAO,IAAI,CAAC,KAAK;IACrB;IAEA,wDAAwD;IACxD,UAAU;IACV,wDAAwD;IAExD,iBAAiB,SAAS,EAAE,QAAQ,EAAE;QAClC,IAAI,OAAO,aAAa,YAAY;QAEpC,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,YACT;QAEJ,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,KAAK,WAC/B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,EAAE;QAGnC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC;IACpC;IAEA,cAAc;QACV,IAAI,CAAC,YAAY,GAAG;IACxB;IACA,cAAc;QACV,IAAI,CAAC,YAAY,GAAG;IACxB;IAEA,cAAc,SAAS,EAAE,IAAI,EAAE;QAC3B,uDAAuD;QAEvD,IAAI,IAAI,CAAC,YAAY,IAAI,MACrB;QAGJ,MAAM,QAAQ;YACV,MAAM;YACN,QAAQ,IAAI;YACZ,MAAM;QACV;QAEA,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,KAAK,WAC/B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,EAAE;QAGnC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,WAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,EAAE;QAG/B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAChC,SAAS;QACb;QAEA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC5B,SAAS;QACb;IACJ;IAEA,uDAAuD;IACvD,aAAa;IACb,uDAAuD;IAGvD,IAAI,cAAc;QACd,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,KAAK;IACpC;IACA,IAAI,YAAY,KAAK,EAAE;QACnB,IAAI,CAAC,OACD;QAEJ,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS;IAC/B;IACA,IAAI,YAAY;QACZ,IAAI,YAAY,IAAI,CAAC,WAAW,CAAC,OAAO,KAAK;QAC7C,IAAI,CAAA,GAAA,oBAAA,EAAE,MAAM,CAAC,YACT,IAAI,CAAC,SAAS,GAAG,OAAO,CAAA,GAAA,SAAK;QAEjC,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,KAAK;IAClC;IACA,IAAI,UAAU,KAAK,EAAE;QACjB,IAAI,CAAC,OACD;QAEJ,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO;IAC7B;IAEA,IAAI,MAAM;QACN,OAAO;YAAE,SAAS,IAAI,CAAC,WAAW;YAAE,OAAO,IAAI,CAAC,SAAS;QAAC;IAC9D;IAEA,IAAI,IAAI,KAAK,EAAC;QACV,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ;QACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM;IACjC;IAEA,IAAI,YAAW;QACX,OAAO,IAAI,CAAC,GAAG;IACnB;IAEA,IAAI,UAAU,KAAK,EAAC;QAChB,IAAI,CAAC,GAAG,GAAG;IACf;IAEA,IAAI,QAAQ;QACR,OAAO,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAClD;IAGA,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,SAAS;IACzB;IAEA,YAAY;QACR,qDAAqD;QACrD,OAAO,CAAA,GAAA,yCAAgB,EAAE,SAAS,CAAC,IAAI;IAC3C;IAGA,IAAI,cAAc;QACd,OAAO,IAAI,CAAC,cAAc;IAC9B;IAEA,iBAAiB;QACb,qDAAqD;QACrD,OAAO,CAAA,GAAA,yCAAgB,EAAE,cAAc,CAAC,IAAI;IAChD;IAEA,IAAI,MAAK;QACL,OAAO,IAAI,CAAC,MAAM;IACtB;IAEA,SAAQ;QAEJ,IAAI,MAAM,EAAE;QACZ,KAAI,IAAI,KAAK,IAAI,CAAC,WAAW,CACzB,KAAK,IAAI,MAAM,EAAE,eAAe,CAC5B,IAAI,IAAI,CAAC;QAGjB,OAAO;IACX;IAEA,wDAAwD;IACxD,qBAAqB;IACrB,wDAAwD;IAExD,IAAI,oBAAoB;QACpB,OAAO,CAAA,GAAA,yCAAgB,EAAE,oBAAoB,CAAC,IAAI;IACtD;IAEA,IAAI,oBAAoB;QACpB,OAAO,CAAA,GAAA,yCAAgB,EAAE,oBAAoB,CAAC,IAAI;IACtD;IAIA,wDAAwD;IACxD,+BAA+B;IAC/B,wDAAwD;IAExD,IAAI,SAAQ;QAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;IAAC;IACzC,IAAI,OAAO,KAAK,EAAC;QAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;IAAM;IACtD,IAAI,eAAc;QAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;IAAC;IAC/C,IAAI,aAAa,KAAK,EAAC;QAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;IAAM;IAC5D,IAAI,aAAY;QAAE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI;IAAC;IAE3C,gBAAe;QAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;IAAC;IAC5C,cAAc,KAAK,EAAC;QAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;IAAM;IACzD,kBAAiB;QAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;IAAC;IAC9C,gBAAgB,KAAK,EAAC;QAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;IAAM;IAC3D,gBAAe;QAAE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI;IAAC;IAE1C,uDAAuD;IACvD,gCAAgC;IAChC,uDAAuD;IAEvD,YAAY,UAAU,EAAE;QACpB,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;IACtB;IAEA,YAAY,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE;QACzD,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,OAAO,aAAa;IACtD;IAEA,eAAe,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE;QAC5D,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,OAAO,aAAa;IACzD;IAEA,gBAAgB,UAAU,EAAC,QAAQ,EAAC,QAAQ,EAAC,WAAW,EAAC,eAAe,EAAE;QACtE,OAAO,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,UAAU,UAAU,aAAa;IACvE;IAEA,YAAY,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE;QACzD,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,OAAO,aAAa;IACtD;IAEA,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM;IACxB;IAEA,IAAI,UAAU,EAAE;QACZ,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;IACtB;IAEA,IAAI,UAAU,EAAE,KAAK,EAAE;QACnB,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY;IAClC;IAEA,IAAI,WAAW,EAAE,SAAS,EAAE;QACxB,OAAO,IAAI,0CAAQ,aAAa;IACpC;IAEA,wDAAwD;IACxD,SAAS;IACT,wDAAwD;IAExD,UAAU,KAAK,EAAE;QACb,0CAA0C;QAC1C,IAAI,aAAa,EAAE;QACnB,KAAK,IAAI,KAAK,IAAI,CAAC,WAAW,CAC1B,IAAI,EAAE,aAAa,CAAC,QAChB,WAAW,IAAI,CAAC,EAAE,UAAU;QAGpC,OAAO;IACX;IAEA,uDAAuD;IACvD,eAAe;IACf,uDAAuD;IAEvD,OAAO,IAAI,EAAE,CAAC;IAEd,OAAO,IAAI,EAAE,KAAK,EAAE,CAAC;IAErB,uDAAuD;IACvD,cAAc;IACd,uDAAuD;IAEvD,GAAG,KAAK,EAAE;QACN,OAAO,CAAA,GAAA,yCAAc,EAAE,EAAE,CAAC,IAAI,EAAE;IACpC;IAEA,GAAG,KAAK,EAAE;QACN,OAAO,CAAA,GAAA,yCAAc,EAAE,EAAE,CAAC,IAAI,EAAE;IACpC;IAEA,GAAG,KAAK,EAAE;QACN,OAAO,CAAA,GAAA,yCAAc,EAAE,EAAE,CAAC,IAAI,EAAE;IACpC;IAEA,MAAM,KAAK,EAAE;QACT,OAAO,CAAA,GAAA,yCAAc,EAAE,KAAK,CAAC,IAAI,EAAE;IACvC;IAMA,wDAAwD;IACxD,8CAA8C;IAC9C,wDAAwD;IAKxD,wDAAwD;IACxD,0CAA0C;IAC1C,wDAAwD;IAGxD,IAAI,QAAO;QACP,OAAO,IAAI,CAAC,MAAM;IACtB;IAEA,IAAI,MAAM,KAAK,EAAC;QACZ,IAAI,CAAC,MAAM,GAAG;IAClB;IAEA,IAAI,SAAQ;QACR,OAAO,IAAI,CAAC,OAAO;IACvB;IAEA,IAAI,OAAO,KAAK,EAAC;QACb,IAAI,CAAC,OAAO,GAAG;IACnB;IAEA,IAAI,UAAS;QACT,OAAO,IAAI,CAAC,QAAQ;IACxB;IAEA,IAAI,QAAQ,KAAK,EAAC;QACd,IAAI,CAAC,QAAQ,GAAG;IACpB;IAEA,IAAI,iBAAgB;QAChB,OAAO,IAAI,CAAC,eAAe;IAC/B;IAEA,IAAI,eAAe,KAAK,EAAC;QACrB,IAAI,CAAC,eAAe,GAAG;IAC3B;IAEA,IAAI,QAAO;QACP,OAAO,IAAI,CAAC,MAAM;IACtB;IAEA,IAAI,MAAM,KAAK,EAAC;QACZ,IAAI,CAAC,MAAM,GAAG;IAClB;IAGA,IAAI,WAAU;QACV,OAAO,IAAI,CAAC,SAAS;IACzB;IAEA,IAAI,SAAS,KAAK,EAAC;QACf,IAAI,CAAC,SAAS,GAAG;IACrB;IAEA,IAAI,SAAQ;QAER,IAAI,SAAS,CAAC;QACd,IAAG,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,MAChC,OAAO,CAAC;aAER,SAAS,IAAI,CAAC,OAAO;QAGzB,IAAI,OAAO;YAAC;YAAS;YAAU;YAAW;SAAiB;QAC3D,KAAI,IAAI,KAAK,KAAK;YACd,IAAI,IAAI,IAAI,CAAC,EAAE;YACf,IAAG,KAAK,KAAK,MACT,MAAM,CAAC,EAAE,GAAG;QAEpB;QACA,OAAO;IACX;IAEA,IAAI,OAAO,KAAK,EAAC;QACb,IAAI,CAAC,OAAO,GAAG;IACnB;IAMA,wDAAwD;IACxD,WAAW;IACX,wDAAwD;IAExD,QAAQ;QACJ,OAAO,CAAA,GAAA,yCAAa,EAAE,KAAK;IAC/B;IAEA,cAAc;QACV,OAAO,CAAA,GAAA,yCAAa,EAAE,WAAW;IACrC;IAEA,iBAAiB;QACb,OAAO,CAAA,GAAA,yCAAa,EAAE,cAAc;IACxC;AACJ;;;;;ADzhBO,IAAI,4CAAU,CAAA,GAAA,yCAAY;AAC1B,IAAI,4CAAa,CAAA,GAAA,yCAAe;AAChC,IAAI,4CAAkB,CAAA,GAAA,yCAAoB","sources":["src/index.js","src/modules/class_thing/class_thing.js","src/modules/class_property/class_property.js","src/modules/class_propertyValue/class_propertyValue.js","src/modules/class_metadata/class_metadata.js","src/modules/class_thing/helpers/thingComparison.js","src/modules/class_thing/helpers/recordHelpers.js","src/modules/class_thing/helpers/consoleHelpers.js","src/modules/class_thing/helpers/valueManipulation.js","src/modules/class_thing/helpers/ClassKrakenCache.js","src/modules/class_thing/helpers/ClassKrakenPropertyHelpers.js","src/modules/class_thing/helpers/ClassKrakenExportHelpers.js","src/modules/class_thing/helpers/ClassKrakenItemListHelpers.js","src/modules/class_thing/helpers/ClassKrakenActionHelpers.js","src/modules/class_thing/helpers/ClassKrakenApiHelpers.js","src/modules/class_thing/helpers/ClassKrakenTestHelpers.js","src/modules/class_thing/helpers/ClassKrakenHeadingHelpers.js","src/modules/class_element/class_element.js","src/modules/class_element/src/class_element_form.js","src/modules/class_element/src/class_element_base.js"],"sourcesContent":["\nimport { KrThing as KrThingRecord } from './modules/class_thing/class_thing.js';\nimport { KrProperty as KrPropertyRecord } from './modules/class_property/class_property.js';\nimport { KrPropertyValue as KrPropertyValueRecord } from './modules/class_propertyValue/class_propertyValue.js';\n\n\nexport var KrThing = KrThingRecord\nexport var KrProperty = KrPropertyRecord\nexport var KrPropertyValue = KrPropertyValueRecord\n\n\n\n","import { v4 as uuidv4 } from \"uuid\";\nimport { krakenHelpers as h } from 'krakenhelpers'\n\nimport { KrProperty } from \"../class_property/class_property.js\";\nimport { KrMetadata } from \"../class_metadata/class_metadata.js\";\n\n\nimport { thingComparison } from \"./helpers/thingComparison.js\";\nimport { recordHelpers } from \"./helpers/recordHelpers.js\";\nimport { consoleHelpers } from './helpers/consoleHelpers.js'\nimport { valueManipulation } from './helpers/valueManipulation.js'\nimport { ClassKrakenPropertyHelpers } from './helpers/ClassKrakenPropertyHelpers.js'\nimport { ClassKrakenExportHelpers } from './helpers/ClassKrakenExportHelpers.js'\nimport { ClassKrakenItemListHelpers } from './helpers/ClassKrakenItemListHelpers.js'\nimport { ClassKrakenActionHelpers } from './helpers/ClassKrakenActionHelpers.js'\nimport { ClassKrakenApiHelpers } from './helpers/ClassKrakenApiHelpers.js'\nimport { ClassKrakenTestHelpers } from './helpers/ClassKrakenTestHelpers.js'\n\nimport { ClassKrakenHeadingHelpers } from './helpers/ClassKrakenHeadingHelpers.js'\nimport { ClassKrakenCache } from './helpers/ClassKrakenCache.js'\nimport { ClassKrakenElement } from '../class_element/class_element.js'\n\n\nlet MAX_DEPTH = 10;\n\nexport class KrThing {\n    /*\n\n    attributes:\n    - record_type:\n    - record_id: \n    - record: \n    - ref:            returns dict with @type and @id\n    - refID:          returns string type___id\n    - fullRecord:     returns native records from class objects (nested)\n    - refRecord:      returns record with only \n    - properties:     returns list of KrProperties\n    - json:           returns this.record as json\n    - _blockEvents:     prevents dispatch of events if true\n\n    Methods\n    - getProperty: \n    - setProperty:\n    - get (same as getProperty):\n    - set (same as setProperty):\n    - blockEvents:\n    - allowEvents: \n\n    */\n\n    constructor(record_type = null, record_id = null) {\n\n\n        this.id = String(crypto.randomUUID())\n\n        \n        this._properties = [];\n\n        this._callbacks = {};\n        this._blockEvents = false;\n\n\n        // Load libraries\n        // Property helpers\n        this._p = new ClassKrakenPropertyHelpers(this)\n        this._export = new ClassKrakenExportHelpers(this)\n        this._itemList = new ClassKrakenItemListHelpers(this)\n        this._action = new ClassKrakenActionHelpers(this)\n        this._api = new ClassKrakenApiHelpers(this)\n        this._headings = new ClassKrakenHeadingHelpers(this)\n        this._element = new ClassKrakenElement(this)\n        this._test = new ClassKrakenTestHelpers(this)\n\n\n        // db references\n        this._dbCollection = null   // The collection / table of database\n        this._dbId = null           // The _id from database\n        this._dbRecord = null       // The record as is from database\n        \n        // metadata\n        this.metadata = new KrMetadata();\n\n\n        // Local cache of things\n        this._things = new ClassKrakenCache()\n        \n        \n        // if record_type is a dict, treat as record instead\n        if (record_type && record_type[\"@type\"])\n            this.setFullRecord(record_type);\n\n        //\n        if (record_type && !record_type[\"@type\"]) {\n            this.p.set(\"@type\", record_type);\n        }\n        if (record_id) {\n            this.p.set(\"@id\", record_id);\n        }\n\n        if (h.isNull(this.record_id) ) {\n            record_id = String(uuidv4());\n        }\n    }\n\n    toJSON() {\n        return this.record;\n    }\n\n    get json(){\n        return JSON.stringify(this.record, null, 4) \n        \n    }\n\n    toString() {\n\n        let content = this.heading.getTextSummary\n        return content\n        //return JSON.stringify(this.record, null, 4);\n    }\n\n\n\n    // -----------------------------------------------------\n    //  Libraries \n    // -----------------------------------------------------\n\n    // Properties\n    get p(){\n        return this._p\n    }\n    get property(){\n        return this._p\n    }\n\n    // Record export\n    get export(){ \n        return this._export \n    }\n\n    // ItemList\n    get itemList(){ \n        return this._itemList \n    }\n    get list(){ \n        return this._itemList \n    }\n    get l(){ \n        return this._itemList \n    }\n\n    // Action\n    get action(){\n        return this._action\n    }\n    get a(){\n        return this._action\n    }\n\n    // API\n    get api(){\n        return this._api\n    }\n\n    // Headings\n    get headings(){\n        return this._headings\n    }\n    get heading(){\n        return this._headings\n    }\n    get h(){\n        return this._headings\n    }\n\n\n    // HTML elements\n    get element(){\n        return this._element\n    }\n\n    // Tests\n    get test(){\n        return this._test\n    }\n    \n    // -----------------------------------------------------\n    //  events\n    // -----------------------------------------------------\n\n    addEventListener(eventType, callback) {\n        if (typeof callback !== \"function\") return;\n\n        if (h.isNull(eventType)) {\n            eventType == \"all\";\n        }\n        if (this._callbacks[eventType] === undefined) {\n            this._callbacks[eventType] = [];\n        }\n\n        this._callbacks[eventType].push(callback);\n    }\n\n    blockEvents() {\n        this._blockEvents = true;\n    }\n    allowEvents() {\n        this._blockEvents = false;\n    }\n\n    dispatchEvent(eventType, data) {\n        //if (this._callbacks[eventType] === undefined) return;\n\n        if (this._blockEvents == true) {\n            return;\n        }\n\n        const event = {\n            type: eventType,\n            target: this,\n            data: data,\n        };\n\n        if (this._callbacks[eventType] === undefined) {\n            this._callbacks[eventType] = [];\n        }\n\n        if (this._callbacks[\"all\"] === undefined) {\n            this._callbacks[\"all\"] = [];\n        }\n\n        this._callbacks[eventType].forEach((callback) => {\n            callback(event);\n        });\n\n        this._callbacks[\"all\"].forEach((callback) => {\n            callback(event);\n        });\n    }\n\n    // ----------------------------------------------------\n    // Attributes\n    // ----------------------------------------------------\n\n    \n    get record_type() {\n        return this.p.get(\"@type\").value;\n    }\n    set record_type(value) {\n        if (!value) {\n            return;\n        }\n        return this.p.set(\"@type\", value);\n    }\n    get record_id() {\n        let record_id = this.getProperty(\"@id\").value;\n        if (h.isNull(record_id) ) {\n            this.record_id = String(uuidv4());\n        }\n        return this.p.get(\"@id\").value;\n    }\n    set record_id(value) {\n        if (!value) {\n            return;\n        }\n        return this.p.set(\"@id\", value);\n    }\n    \n    get ref() {\n        return { \"@type\": this.record_type, \"@id\": this.record_id };\n    }\n\n    set ref(value){\n        this.record_type = value['@type']\n        this.record_id = value['@id']\n    }\n\n    get recordRef(){\n        return this.ref\n    }\n\n    set recordRef(value){\n        this.ref = value\n    }\n    \n    get refID() {\n        return `${this.record_type}/${this.record_id}`;\n    }\n\n\n    get things() {\n        return this.getThings();\n    }\n\n    getThings() {\n        // Returns itself and all things references in values\n        return valueManipulation.getThings(this)\n    }\n\n\n    get childThings() {\n        return this.getChildThings();\n    }\n\n    getChildThings() {\n        // Returns itself and all things references in values\n        return valueManipulation.getChildThings(this)\n    }\n\n    get pvs(){\n        return this.getPvs()\n    }\n\n    getPvs(){\n\n        let pvs = []\n        for(let p of this._properties){\n            for (let pv of p._propertyValues){\n                pvs.push(pv)\n            }\n        }\n        return pvs\n    }\n    \n    // -----------------------------------------------------\n    //  System attributes\n    // -----------------------------------------------------\n\n    get systemCreatedDate() {\n        return valueManipulation.getSystemCreatedDate(this)\n    }\n\n    get systemUpdatedDate() {\n        return valueManipulation.getSystemUpdatedDate(this)\n    }\n\n    \n    \n    // -----------------------------------------------------\n    //  Records - Legacy shortcuts \n    // -----------------------------------------------------\n    \n    get record(){ return this._export.record }\n    set record(value){ return this._export.record = value }\n    get systemRecord(){ return this._export.system }\n    set systemRecord(value){ return this._export.system = value }\n    get bestRecord(){ return this._export.best }\n\n    getFullRecord(){ return this._export.record }\n    setFullRecord(value){ return this._export.record = value }\n    getSystemRecord(){ return this._export.system }\n    setSystemRecord(value){ return this._export.system = value }\n    getBestRecord(){ return this._export.best }\n    \n    // ----------------------------------------------------\n    // Properties - Legacy shortcuts\n    // ----------------------------------------------------\n\n    getProperty(propertyID) {\n        return this.p.get(propertyID);\n    }\n\n    addProperty(propertyID, value, credibility, observationDate) {\n        return this.p.add(propertyID, value, credibility, observationDate)\n    }\n\n    deleteProperty(propertyID, value, credibility, observationDate) {\n        return this.p.delete(propertyID, value, credibility, observationDate)\n    }\n\n    replaceProperty(propertyID,oldValue,newValue,credibility,observationDate) {\n        return this.p.replace(propertyID, oldValue, newValue, credibility, observationDate)\n    }\n\n    setProperty(propertyID, value, credibility, observationDate) {\n        return this.p.set(propertyID, value, credibility, observationDate)\n    }\n\n    get properties() {\n        return this.p.getAll()\n    }\n    \n    get(propertyID) {\n        return this.p.get(propertyID);\n    }\n    \n    set(propertyID, value) {\n        return this.p.set(propertyID, value);\n    }\n\n    new(record_type, record_id) {\n        return new KrThing(record_type, record_id);\n    }\n\n    // -----------------------------------------------------\n    //  Query\n    // -----------------------------------------------------\n\n    findValue(value) {\n        // Returns the properties with given value\n        let properties = [];\n        for (let p of this._properties) {\n            if (p.containsValue(value)) {\n                properties.push(p.propertyID);\n            }\n        }\n        return properties;\n    }\n\n    // ----------------------------------------------------\n    // Dot notation\n    // ----------------------------------------------------\n\n    dotGet(path) {}\n\n    dotSet(path, value) {}\n\n    // ----------------------------------------------------\n    // Comparisons\n    // ----------------------------------------------------\n\n    lt(other) {\n        return thingComparison.lt(this, other);\n    }\n\n    gt(other) {\n        return thingComparison.gt(this, other);\n    }\n\n    eq(other) {\n        return thingComparison.eq(this, other);\n    }\n\n    merge(other) {\n        return thingComparison.merge(this, other);\n    }\n\n\n\n    \n    \n    // -----------------------------------------------------\n    //  ItemList specific attributes and methods  \n    // -----------------------------------------------------\n\n    \n\n\n    // -----------------------------------------------------\n    //  Query specific attributes and methods \n    // -----------------------------------------------------\n\n    \n    get limit(){\n        return this._limit\n    }    \n\n    set limit(value){\n        this._limit = value\n    } \n\n    get offset(){\n        return this._offset\n    }    \n\n    set offset(value){\n        this._offset = value\n    } \n\n    get orderBy(){\n        return this._orderBy\n    }    \n\n    set orderBy(value){\n        this._orderBy = value\n    } \n\n    get orderDirection(){\n        return this._orderDirection\n    }    \n\n    set orderDirection(value){\n        this._orderDirection = value\n    } \n\n    get query(){\n        return this._query\n    }    \n\n    set query(value){\n        this._query = value\n    } \n\n\n    get basePath(){\n        return this._basePath\n    }    \n\n    set basePath(value){\n        this._basePath = value\n    } \n\n    get params(){\n\n        let params = {}\n        if(!this._params || this._params == null) {\n            return {}\n        } else {\n            params = this._params\n        }\n\n        let keys = ['limit', 'offset', 'orderBy', 'orderDirection']\n        for(let k of keys){\n            let v = this[k]\n            if(v && v != null){\n                params[k] = v\n            }\n        }        \n        return params\n    }    \n\n    set params(value){\n        this._params = value\n    } \n\n\n\n    \n    \n    // -----------------------------------------------------\n    //  Comment\n    // -----------------------------------------------------\n\n    print() {\n        return consoleHelpers.print()\n    }\n\n    printScreen() {\n        return consoleHelpers.printScreen()\n    }\n\n    printScreenAll() {\n        return consoleHelpers.printScreenAll()\n    }\n}\n","import { KrPropertyValue } from \"../class_propertyValue/class_propertyValue.js\";\nimport { KrMetadata } from \"../class_metadata/class_metadata.js\";\nimport { krakenHelpers as h } from 'krakenhelpers'\n\nexport class KrProperty {\n    /*\n\n    attributes:\n    - propertyID:     string\n    - propertyValue:         get best KrPropertyValue object or sets a value\n    - propertyValues:        get best KrPropertyValue object for each values\n    - propertyValuesAll:     get all KrPropertyValue\n    - value:                 return best value\n    - values:                return values\n    - record:        get value as non Kr object  \n\n    methods:\n    - gt: greater than a.gt(b) a is greater than b\n    - lt: less than a.lt(b) a is less than b\n    - setValues:     Sets several values\n    - setValue:      Sets a single value and returns a KrPropertyValue object\n    - get_max:       Returns best KrPropertyValue object\n    \n    */\n\n    constructor(propertyID = null) {\n        this._propertyID = propertyID;\n        this._propertyValues = [];\n        this._propertyValuesNetCache = null;\n        this._propertyValuesNetCacheOld = null;\n        this._propertyValuesCache = null;\n        this._propertyValuesCacheOld = null;\n\n        this.schema = null;\n\n        this.metadata = new KrMetadata();\n    }\n\n    toString() {\n        return `Property: ${this._propertyID}`;\n    }\n\n    toJSON() {\n        let record = {};\n        record[this._propertyID] = this.propertyValues.map((x) => x.toJSON());\n        return record;\n    }\n\n    get record(){\n        return this.toJSON()\n    }\n\n    get json(){\n        return JSON.stringify(this.record, null, 4)\n    }\n\n    // Base\n    get propertyID() {\n        return this._propertyID;\n    }\n    set propertyID(record) {\n        this._propertyID = ensureNotArray(value);\n    }\n\n    gt(other) {\n        if (this.propertyID == other.propertyID) {\n            return false;\n        }\n        if (this.propertyID == \"@type\") {\n            return false;\n        }\n        if (other.propertyID == \"@type\") {\n            return true;\n        }\n        if (this.propertyID == \"@id\") {\n            return false;\n        }\n        if (other.propertyID == \"@id\") {\n            return true;\n        }\n\n        if (this.propertyID > other.propertyID) {\n            return true;\n        }\n        return false;\n    }\n    lt(other) {\n        if (this.propertyID == other.propertyID) {\n            return false;\n        }\n        if (this.propertyID == \"@type\") {\n            return true;\n        }\n        if (other.propertyID == \"@type\") {\n            return false;\n        }\n        if (this.propertyID == \"@id\") {\n            return true;\n        }\n        if (other.propertyID == \"@id\") {\n            return false;\n        }\n\n        if (this.propertyID < other.propertyID) {\n            return true;\n        }\n        return false;\n    }\n\n    eq(other) {\n        if (h.isNotNull(this.propertyID) && this.propertyID == other.propertyID) {\n            return true;\n        }\n        return false;\n    }\n\n    getPropertyValueById(propertyValueID) {\n        if (h.isNull(propertyValueID)) {\n            return;\n        }\n\n        for (let pv of this._propertyValues) {\n            if (pv.record_id == propertyValueID) {\n                return pv;\n            }\n        }\n        return null;\n    }\n\n    contains(newPV) {\n        // Return true if already contains same propertyValue\n\n        if (h.isNull(newPV)) {\n            return;\n        }\n\n        for (let pv of this._propertyValues) {\n            if (pv.eq(newPV)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    merge(other) {\n        // merge other property with this property\n\n        let needCompileFlag = false;\n\n        if (h.isNull(other)) {\n            return;\n        }\n\n        for (let pv of other._propertyValues) {\n            if (this.contains(pv) == false) {\n                this._propertyValues.push(pv);\n                needCompileFlag = true;\n            }\n        }\n\n        if (needCompileFlag == true) {\n            this.compilePropertyValues(true);\n        }\n    }\n\n    //\n    // ----------------------------------------------------\n    // Records\n    // ----------------------------------------------------\n\n    getFullRecord(maxDepth, currentDepth) {\n        return this.propertyValuesNet.map((x) =>\n            x.getFullRecord(maxDepth, currentDepth),\n        );\n    }\n\n    getRefRecord(maxDepth, currentDepth) {\n        return this.propertyValuesNet.map((x) =>\n            x.getRefRecord(maxDepth, currentDepth),\n        );\n    }\n\n    getBestRecord(maxDepth, currentDepth) {\n        let p = this.propertyValue;\n        if (h.isNotNull(p) ) {\n            return [p.getBestRecord(maxDepth, currentDepth)];\n        }\n        return [];\n    }\n\n    getDetailRecord(maxDepth, currentDepth) {\n        return this.propertyValuesNet.map((x) =>\n            x.getDetailRecord(maxDepth, currentDepth),\n        );\n    }\n\n    // ----------------------------------------------------\n    // Records\n    // ----------------------------------------------------\n\n    getSystemRecord(maxDepth, currentDepth) {\n        let results = this._propertyValues.map((x) =>\n            x.getSystemRecord(maxDepth, currentDepth),\n        );\n        return results;\n    }\n\n    setSystemRecord(value, wipeBefore=true) {\n        \n        if(wipeBefore == true){\n            this._propertyValues = [];\n        }\n        \n        var values = ensureArray(value);\n        for (let value of values) {\n\n            var propertyValue = new KrPropertyValue();\n            propertyValue.setSystemRecord(value);\n            \n            this.addPropertyValue(value)\n            \n        }\n    }\n\n    // -----------------------------------------------------\n    //  System attributes\n    // -----------------------------------------------------\n\n    get systemCreatedDate() {\n        let resultDate = null;\n        for (let pv of this._propertyValues) {\n            let itemDate = pv.systemCreatedDate;\n            if (itemDate && (h.isNull(resultDate) || itemDate < resultDate)) {\n                resultDate = itemDate;\n            }\n        }\n        return resultDate;\n    }\n\n    get systemUpdatedDate() {\n        let resultDate = null;\n        for (let pv of this._propertyValues) {\n            let itemDate = pv.systemCreatedDate;\n            if (itemDate && (h.isNull(resultDate) || itemDate > resultDate)) {\n                resultDate = itemDate;\n            }\n        }\n        return resultDate;\n    }\n\n    // ----------------------------------------------------\n    // PropertyValues\n    // ----------------------------------------------------\n\n    getPropertyValueById(pvId) {\n        // return best property value object\n        for(let pv of this._propertyValues){\n            if(pv.record_type == pvId){\n                return pv\n            }\n        }\n        return null;\n    }\n\n    \n    get propertyValue() {\n        // return best property value object\n        if (this.propertyValues && this.propertyValues.length > 0) {\n            return this.propertyValues[0];\n        }\n        return null;\n    }\n\n    get propertyValues() {\n        // returns best pv for each different value\n\n        // Serve from cache\n        let cache = this._propertyValuesCache;\n        let cacheOld = this._propertyValuesCacheOld;\n        if (h.isNotNull(cache) && cache.length > 0) {\n            if (cache == cacheOld) {\n                return cache;\n            }\n        }\n\n        var results = [];\n        var pvs = this.propertyValuesNet;\n        const values = [...new Set(pvs.map((x) => x.value))];\n        values.forEach((value) => {\n            const filteredPV = pvs.filter((item) => item.value == value);\n            let maxPV = filteredPV.reduce((maxItem, item) =>\n                maxItem.gt(item) ? maxItem : item,\n            );\n            results.push(maxPV);\n        });\n\n        function compare(a, b) {\n            if (a.gt(b)) {\n                return -1;\n            }\n            if (a.lt(b)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        results.sort(compare);\n\n        // Refresh cache\n        this._propertyValuesCache = results;\n        this._propertyValuesCacheOld = results;\n\n        return results;\n    }\n\n    get propertyValuesNet() {\n        this.compilePropertyValues();\n\n        return this._propertyValuesNetCache;\n    }\n\n    compilePropertyValues(force = false) {\n        let pv = this._propertyValues;\n\n        let cache = this._propertyValuesNetCache;\n        let cacheOld = this._propertyValuesNetCacheOld;\n\n        if (force == false) {\n            if (h.isNotNull(cache) && cache.length > 0) {\n                pv = cache;\n                if (cache == cacheOld) {\n                    return cache;\n                }\n            }\n        }\n\n        let results = [];\n\n        // Process additions\n        results = results.concat(\n            pv.filter((item) => item.record_type == \"addAction\"),\n        );\n        results = results.concat(\n            pv.filter((item) => item.record_type == \"replaceAction\"),\n        );\n\n        // Process deletions and replacements\n        pv.filter((item) => item.record_type == \"replaceAction\").forEach(\n            (filteredItem) => {\n                results = results.filter(\n                    (result) =>\n                        !(\n                            result.metadata.lt(filteredItem) &&\n                                (h.isNull(filteredItem.replacee)  ||\n                                    filteredItem.replacee == result.value)\n                        ),\n                );\n            },\n        );\n\n        pv.filter((item) => item.record_type == \"deleteAction\").forEach(\n            (filteredItem) => {\n                results = results.filter(\n                    (result) =>\n                        !(\n                            result.metadata.lt(filteredItem) &&\n                            result.value == filteredItem.value\n                        ),\n                );\n            },\n        );\n\n        function compare(a, b) {\n\n            if (a.gt(b)) {\n                return -1;\n            }\n            if (a.lt(b)) {\n                return 1;\n            }\n            return 0;\n        }\n\n        results.sort(compare);\n        this._propertyValuesNetCache = [];\n        this._propertyValuesNetCache =\n            this._propertyValuesNetCache.concat(results);\n        this._propertyValuesNetCacheOld = [];\n        this._propertyValuesNetCacheOld =\n            this._propertyValuesNetCacheOld.concat(results);\n        this._propertyValuesCache = null;\n\n        // Disable validity\n        for (let pv of this._propertyValues) {\n            pv.valid = false;\n        }\n\n        // Reenable validity\n        for (let pv of this._propertyValuesNetCache) {\n            pv.valid = true;\n        }\n    }\n\n    get propertyValuesAll() {\n        // return in reverse order\n\n        return this.propertyValuesNet;\n    }\n\n\n    set propertyValue(value){\n        return this.addPropertyValue(value)\n    }\n    \n    set propertyValues(value){\n        return this.addPropertyValue(value)\n    }\n\n    \n    // ----------------------------------------------------\n    // Values\n    // ----------------------------------------------------\n\n    get value() {\n        // Return value element of best propertyValue object\n        if (h.isNotNull(this?.propertyValue)) {\n            return this.propertyValue.value;\n        }\n        return null;\n    }\n\n    set value(value) {\n        return this.setValues(value);\n    }\n\n    get values() {\n        // Return value elements of all propertyValue object in order\n        return this.propertyValues.map((x) => x.value);\n    }\n\n    setValues(value, metadataRecord, actionType) {\n       \n        let results = [];\n        let values = ensureArray(value);\n\n        // First value\n        results.push(this.setValue(values[0], metadataRecord, actionType));\n\n        // Next values as add\n        for (let i = 1; i < values.length; i++) {\n            results.push(this.setValue(values[i], metadataRecord, 'addAction'));\n        }\n        return results;\n    }\n\n    setValue(value, metadataRecord, actionType) {\n        \n        let newValueObject = value;\n\n        // Check if date\n        if(newValueObject instanceof String){\n            let d = convertToDate(newValueObject);\n            if (h.isNotNull(d) ) {\n                newValueObject = d;\n            }\n        }\n\n        if (!(newValueObject instanceof KrPropertyValue)) {\n            newValueObject = new KrPropertyValue(\n                this.propertyID,\n                value,\n                actionType,\n            );\n        }\n\n        newValueObject.metadata.inheritMetadata(metadataRecord);\n\n        // Returns if already contains value\n        if (this.containsValue(newValueObject) == true) {\n            return this.getValue(newValueObject);\n        }\n        \n        this._propertyValues.push(newValueObject);\n        newValueObject.metadata.position = this._propertyValues.length;\n\n\n        // Add to cache\n        if ( h.isNotNull(this._propertyValuesNetCache)) {\n            this._propertyValuesNetCache.push(newValueObject);\n        }\n\n        // Reset cache\n        this._propertyValuesCache = null;\n        this._propertyValuesCacheOld = null;\n\n        return newValueObject;\n    }\n\n    printScreen(suffix = \"\") {\n        var v = this.value;\n        if (isNotNull(this.value) && this.value.record_type) {\n            v = this.value.record_type + \"/\" + this.value.record_id;\n        }\n\n        console.log(suffix, \" - \", this.propertyID, \": \", v);\n\n        this.propertyValuesNet.map((propertyValue) => {\n            propertyValue.printScreen(suffix + \"    \");\n        });\n    }\n    printScreenAll(suffix = \"\") {\n        var v = this.value;\n        if (this.value && this.value.record_type) {\n            v = this.value.record_type + \"/\" + this.value.record_id;\n        }\n\n        console.log(suffix, \" - \", this.propertyID, \": \", v);\n\n        console.log(suffix, \"       Net\");\n        this.propertyValuesNet.map((propertyValue) => {\n            propertyValue.printScreen(suffix + \"        \");\n        });\n        console.log(suffix, \"       Raw\");\n        this.propertyValuesAll.map((propertyValue) => {\n            propertyValue.printScreen(suffix + \"        \");\n        });\n    }\n\n\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n\n    addPropertyValue(propertyValue){\n\n        //\n        if((propertyValue instanceof KrPropertyValue) == false){\n            let temp = new KrPropertyValue()\n            temp.setSystemRecord(propertyValue)\n            propertyValue = temp\n        }\n\n        // \n        for(let pv of this._propertyValues){\n            if ( propertyValue.eq(pv) == true ){\n                // Value already exists\n                return false\n            }\n        }\n        this._propertyValues.push(propertyValue)\n        return true\n    }\n    \n    deDupe(){\n\n        // Dedupe propertyValues\n        let propertyValues = this._propertyValues\n        \n        for(let pv of propertyValues){\n\n            this.addPropertyValue(pv)\n            \n        }\n        return\n\n        \n    }\n\n    \n    // -----------------------------------------------------\n    //  Query\n    // -----------------------------------------------------\n\n    getValue(value) {\n        // Returns equivalent valueObject if present\n\n\n        if(h.isNull(value)){ return null }\n        \n        if (h.isNotNull(value?.record_type)) {\n            value = value.ref;\n        }\n\n        if (h.isNotNull(value?.[\"@type\"])) {\n            value = { \"@type\": value?.[\"@type\"], \"@id\": value?.[\"@id\"] };\n        }\n\n        for (let pv of this.propertyValues) {\n            let value0 = pv.value;\n            if (h.isNotNull(value0?.record_type)) {\n                value0 = value0.ref;\n            }\n\n            if (h.isNotNull(value0?.[\"@type\"])) {\n                value0 = { \"@type\": value0?.[\"@type\"], \"@id\": value0?.[\"@id\"] };\n            }\n\n            // ??\n            \n            if (JSON.stringify(value) == JSON.stringify(value0)) {\n                return pv;\n            }\n        }\n        return null;\n    }\n\n    containsValue(value) {\n        // Return true if value is part of values\n\n        let v = this.getValue(value);\n        if (h.isNotNull(v)) {\n            return true;\n        }\n        return false;\n    }\n}\n\nfunction ensureNotArray(value) {\n    let new_value = ensureArray(value);\n    if (new_value.length > 0) {\n        return new_value[0];\n    } else {\n        return null;\n    }\n}\n\nfunction ensureArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n\nfunction convertToDate(value) {\n    if (value instanceof Date && !isNaN(value)) {\n        return value;\n    }\n\n    const date = new Date(value);\n    if (!isNaN(date.getTime())) {\n        return date;\n    }\n\n    return null;\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nimport { KrMetadata } from '../class_metadata/class_metadata.js';\nimport { krakenHelpers as h } from 'krakenhelpers'\n\nexport class KrPropertyValue {\n    /*\n\n    attributes:\n    - proeprtyID:\n    - value: \n    - c: \n    - d:\n\n    */\n    constructor(propertyID, value, actionType=\"replaceAction\", previousValue) {\n\n\n        \n        this._record = {\n            \"@type\": actionType,\n            \"@id\": String(uuidv4()),\n            \"object\": {\n                \"@type\": \"propertyValue\",\n                propertyID: propertyID,\n                value: value,\n            },\n            actionStatus: 'completedActionStatus',\n            replacee: previousValue,\n            replacer: value,\n            valid: true\n        };\n\n        this.metadata = new KrMetadata();\n\n        this.schema = null\n        \n        }\n\n\n\n    toString(){\n        if(this.value.record_type){\n            return `${this.value.record_type}/${this.value.record_id}`\n        } else {\n            return String(this.value)\n        }\n    }\n\n    toJSON(){\n        \n        return this.value\n    }\n\n\n    \n    // ----------------------------------------------------\n    // Attributes - action\n    // ----------------------------------------------------\n\n    get record_type(){\n        return this._record[\"@type\"];\n    }\n    set record_type(value){\n        this._record[\"@type\"] = value;\n    }\n    get record_id(){\n        return this._record[\"@id\"];\n    }\n    set record_id(value){\n        this._record[\"@id\"] = value;\n    }\n    get object(){\n        return this._record.object;\n    }\n    set object(value){\n        this._record.object =value;\n    }\n    get replacer(){\n        return this._record.replacer;\n    }\n    set replacer(value){\n        this._record.object.value = ensureNotArray(value);\n        this._record.replacer = ensureNotArray(value);\n        }\n\n    get valid(){\n        return this._record.valid;\n    }\n    \n    set valid(value){\n        this._record.valid = value\n        }\n\n    \n    get record(){\n\n        let record = this._record\n        return record\n        \n    }\n\n    get json(){\n        return JSON.stringify(this.record, null, 4)\n    }\n\n    \n    // ----------------------------------------------------\n    // Attributes - object\n    // ----------------------------------------------------\n    \n    get propertyID(){\n        return this._record.object.propertyID;\n    }\n    set propertyID(value){\n        this._record.object.object.propertyID = value;\n    }\n   \n\n    // ----------------------------------------------------\n    // Attributes - metadata\n    // ----------------------------------------------------\n\n    get t(){\n        return this._record.t;\n    }\n    set t(value){\n         this._record.t = value;\n    }\n    get value(){\n        return this._record.object.value;\n    }\n    set value(value){\n        \n        this._record.object.value = ensureNotArray(value);\n        this._record.replacer = ensureNotArray(value);\n        \n    }\n    get agent(){\n        return this.metadata.agent;\n    }\n    set agent(value){\n        this.metadata.agent = value;\n    }\n    get instrument(){\n        return this.metadata.instrument;\n    }\n    set instrument(value){\n        this.metadata.instrument = value;\n    }\n    get credibility(){\n        this.metadata.credibility;\n    }\n    set credibility(value){\n        this.metadata.credibility = value;\n    }\n    get observationDate(){\n        return this.metadata.observationDate;\n    }\n    set observationDate(value){\n        this.metadata.observationDate = value;\n    }\n    get c(){\n        return this.metadata.credibility;\n    }\n    set c(value){\n        this.metadata.credibility = value;\n    }\n    get d(){\n        return this.metadata.observationDate;\n    }\n    set d(value){\n        this.metadata.observationDate = value;\n    }\n\n    get systemCreatedDate(){\n        return this.metadata.createdDate\n    }\n\n    // ----------------------------------------------------\n    // Records \n    // ----------------------------------------------------\n    \n    getFullRecord(maxDepth, currentDepth){\n        \n        if (this.value && this.value?.record_type ){ \n\n            if(['previousItem', 'nextItem'].includes(this.propertyID) ){\n                return this?.value?.ref\n            } else {\n                return this.value.export.getRecord(maxDepth, currentDepth)  \n            }\n        }\n        return this.value;\n    }\n\n    getRefRecord(maxDepth, currentDepth){\n\n        let record = JSON.parse(JSON.stringify(this._record));\n        record.metadata = this.metadata.getRefRecord(maxDepth, currentDepth);\n\n        if (this.value && this.value.record_type){\n            record['value'] = this.value.ref;\n        };\n        return record;        \n    }\n\n    getBestRecord(maxDepth, currentDepth){\n\n        let value = this.value;\n        if (this.value && this.value.record_type){\n            value = this.value.export.getBest(maxDepth, currentDepth);\n        };\n        return value;        \n    }\n\n\n    getDetailRecord(maxDepth, currentDepth){\n        let record = {}\n        record['@type'] = this.record_type\n        record['@id'] = this.record_id\n        record['actionStatus'] = this._record.actionStatus\n        record['object'] = {}\n        record.object['@type'] = this._record.object['@type']\n        record.object['propertyID'] = this._record.object['propertyID']\n        record.object['value'] =  null\n\n        record.metadata = this.metadata.getSystemRecord();\n\n\n        if(['previousItem', 'nextItem'].includes(this.propertyID) ){\n            return this?.value?.ref || null\n        } \n\n\n        if (this.value && this.value.record_type ){\n            record.object['value'] = this.value.getDetailRecord(maxDepth, currentDepth);\n        } else {\n            record.object['value'] = this.value\n        }\n        return record;        \n    }\n    \n\n    // ----------------------------------------------------\n    // Raw records \n    // ----------------------------------------------------\n\n    getSystemRecord(maxDepth, currentDepth){\n\n        let record = {}\n        record['@type'] = this.record_type\n        record['@id'] = this.record_id\n        record['actionStatus'] = this._record?.actionStatus\n        record['valid'] = this._record?.valid\n        record['object'] = {}\n        record.object['@type'] = this._record?.object?.['@type']\n        record.object['propertyID'] = this._record?.object?.['propertyID']\n        record.object['value'] =  null\n        \n        record.metadata = this.metadata.getSystemRecord(maxDepth, currentDepth);\n\n        if(['previousItem', 'nextItem'].includes(this.propertyID) ){\n            record.object['value'] = this?.value?.ref\n        } else if (h.isNotNull(this?.value?.record_type)){\n            record.object['value'] = this.value.export.getSystem(maxDepth, currentDepth);\n        } else {\n            record.object['value'] = this.value\n        }\n        return record;\n    }\n\n    setSystemRecord(value){\n\n        if(h.isNull(value)){ return }\n        \n        this.metadata.setSystemRecord(value?.metadata);\n        delete value.metadata;\n        this._record = JSON.parse(JSON.stringify(value));\n        this._record = value;\n    }\n\n    \n    // ----------------------------------------------------\n    // Methods \n    // ----------------------------------------------------\n\n    setValue(value, metadataRecord){\n        this.value = value;\n        this.metadata.inheritMetadata(metadataRecord);\n    }\n\n    equal(other){\n        return this.eq(other);\n    }\n    \n    eq(other){\n        // returns true if equal\n\n        if(this.record_id == other.record_id){ return true }\n        if (this.value != other.value){ return false }\n        if (this.metadata.eq(other.metadata) == false ){ return false }\n        \n        return true\n       \n    }\n\n    gt(other){\n        \n        if(this.value?.record_type == 'ListItem'){\n            \n            let thisPosition = this.value?.p?.position || null\n            if(h.isNull(thisPosition)){ thisPosition = 0 }\n\n            let otherPosition = other.value?.p?.position || null\n            if(h.isNull(otherPosition)){ thisPosition = 0 }\n\n\n            if(h.isNotNull(thisPosition) && h.isNull(otherPosition)){\n                return false\n            }\n\n            if(h.isNull(thisPosition) && h.isNotNull(otherPosition)){\n                return true\n            }\n\n \n            \n            if( h.isNotNull(thisPosition) && h.isNotNull(otherPosition)){\n                \n               try{\n                    if(thisPosition < otherPosition ){ \n                        return true \n                    } else if( thisPosition > otherPosition ){\n                        return false\n                    }\n                } catch {}\n            }\n        }\n        return this.metadata.gt(other.metadata);\n    };\n    \n    lt(other){\n       \n        if(this.value?.record_type == 'ListItem'){\n\n            \n            let thisPosition = this.value?.p?.position || null\n            //if(h.isNull(thisPosition)){ thisPosition = 0 }\n           \n            let otherPosition = other.value?.p?.position || null\n            //if(h.isNull(otherPosition)){ thisPosition = 0 }\n\n            if(h.isNotNull(thisPosition) && h.isNull(otherPosition)){\n                return true\n            }\n\n            if(h.isNull(thisPosition) && h.isNotNull(otherPosition)){\n                return false\n            }\n            \n            try {\n                if(thisPosition > otherPosition ){ \n                    return true \n                } else if( thisPosition < otherPosition ){\n                    return false\n                }\n           } catch (error) {\n                \n           }\n            \n        }\n        return this.metadata.lt(other.metadata);\n    };\n\n    printScreen(suffix = ''){\n\n        var v = this.value;\n        if (this.value && this.value.record_type) {\n            v = this.value.record_type + \"/\" + this.value.record_id;\n        };\n        var t_string = this.record_type.replace('Action', '').padEnd(10);\n        var c_string = String(this.metadata.c || 0).padStart(5);\n        var p_string = String(this.metadata.position).padStart(5);\n        var d_string = String(this.metadata.createdDate.toLocaleTimeString()).padStart(9);\n        \n        \n        console.log(suffix, \" - \", c_string, p_string, t_string, d_string, v);\n        \n    }\n\n\n    // -----------------------------------------------------\n    //  HTML values \n    // -----------------------------------------------------\n\n\n    get valueHTML(){\n\n        if (this.value.record_type){\n\n            \n        }\n        \n    }\n\n    \n};\n\n\n\nfunction ensureNotArray(value) {\n    \n    if(Array.isArray(value)){\n        if(h.isNotNull(value)){\n            return value[0];\n        }\n        return null\n    } else {\n        return value;\n    }\n}\n\nfunction ensureArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n","import { krakenHelpers as h } from 'krakenhelpers'\n\n\n\nexport class KrMetadata {\n    /* Contains metadata to qualify a value\n\n    attributes:\n    - credibility or c:    \n    - observationDate or d: \n    - record:         Returns all metadata in a dict\n    - object:         The original source of the data\n    - Instrument:     What brought the data over\n    - validFrom\n    - validThrough\n\n\n    Methods\n    - equal:     Returns true if comes from same object\n    - lt:        Worst metadata in order of c and d\n    - gt:        Best metadata in order of c and d\n    - isValid    Returns true if date between validfrom validthrough\n    \n\n    */\n\n    \n    constructor(record) {\n        this._record = {};\n        \n        if(h.isNull(this?._record.createdDate) ){\n            this._record.createdDate = new Date();\n        }\n        \n    }\n\n    get record(){\n        return this._record;\n    }\n\n    getFullRecord(depth){\n        return JSON.parse(JSON.stringify(this._record));\n    }\n\n    setFullRecord(value){\n        this._record = JSON.parse(JSON.stringify(value));\n    }\n\n    getRefRecord(depth){\n        return JSON.parse(JSON.stringify(this._record));\n    }\n\n    getSystemRecord(depth){\n        return JSON.parse(JSON.stringify(this._record));\n    }\n\n    setSystemRecord(value){\n        if(h.isNull(value)) { return }\n        this._record = JSON.parse(JSON.stringify(value));\n    }\n\n    inheritMetadata(metadataRecord){\n\n       \n        let currentPosition = this.position;\n        this.record = metadataRecord;\n        this.position = currentPosition;\n        \n        \n    }\n    \n    set record(value){\n        if(!value){return;};\n        let tempCreatedDate = this.createdDate\n        this._record = JSON.parse(JSON.stringify(value));\n        if(h.isNull(this.createdDate)){\n            this.createdDate = tempCreatedDate\n        }\n    }\n    \n    get credibility(){\n        return this._record.credibility;\n    }\n\n    set credibility(value){\n        this._record.credibility = value;\n    }\n    get c(){\n        return this.credibility;\n    }\n\n    set c(value){\n        this.credibility = value;\n    }\n\n    get createdDate(){\n\n        let createdDate = this._record?.createdDate\n\n        if(createdDate instanceof String){\n            createdDate =  new Date(createdDate)\n        }\n        \n        return createdDate\n        \n    }\n\n    set createdDate(value){\n\n        \n        if(value instanceof Date){\n            this._record.createdDate = value\n        } else {\n            try{\n                this._record.createdDate = new Date(value)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    get position(){\n        return this._record.position;\n    }\n\n    set position(value){\n        this._record.position = value;\n    }\n    \n    get observationDate(){\n        if(h.isNull(this._record.observationDate)) { return null }\n        return new Date(JSON.parse(this._record.observationDate || null));\n    }\n\n    set observationDate(value){\n        if(value && value instanceof Date){\n            this._record.observationDate = JSON.stringify(value);\n        };\n    }\n    get d(){\n        return this.observationDate;\n    }\n\n    set d(value){\n        this.observationDate = value;\n    }\n\n    get validFrom(){\n        return this._record.validFrom;\n    }\n    set validFrom(value){\n        this._record.validFrom = value;\n    }\n\n    get validThrough(){\n        return this._record.validThrough;\n    }\n    set validThrough(value){\n        this._record.validThrough = value;\n    }\n\n    get object(){\n        return this._record.object;\n    }\n    set object(value){\n        this._record.object = value;\n    }\n\n    get instrument(){\n        return this._record.instrument;\n    }\n    set instrument(value){\n        this._record.instrument = value;\n    }\n\n    get agent(){\n        return this._record.agent;\n    }\n    set agent(value){\n        this._record.agent = value;\n    }\n\n    eq(other){\n        return this.equal(other)\n    }\n    \n    equal(other){\n        // returns true if data comes from same object\n\n        \n        let c1 = this.object == other.object\n        let c2a = this.instrument == other.instrument\n        let c2b = this.agent == other.agent\n        let c2c = this.result == other.result\n        let c3 = this.credibility == other.credibility\n        let c4 = this.observationDate == other.observationDate\n\n        let c = [c1, c2a, c2b, c2c, c3, c4]\n        if(!(c.every(x => x == true))){ return false }\n\n        return true\n\n        \n    }\n\n\n    isValid(comparisonDate=null){\n        // Returns true if value is within velidFrom, validThrough. Uses today's date if not provided\n        if(h.isNull(comparisonDate)){\n            comparisonDate = new Date();\n        }\n\n        if (this.validFrom && comparisonDate < this.validFrom)  { return False };\n        if (this.validThrough && comparisonDate >= this.validThrough)  { return False }\n        return True\n    }\n    \n    gt(other, comparisonDate){\n\n        \n        if (!this.credibility && other.credibility) { return false};\n        if (this.credibility && !other.credibility) { return true};\n\n        if ( this.credibility > other.credibility){ return true };\n        if ( this.credibility < other.credibility){ return false };\n\n\n        if (!this.observationDate && other.observationDate) { return false};\n        if (this.observationDate && !other.observationDate) { return true};\n\n        if ( this.observationDate > other.observationDate){ return true };\n        if ( this.observationDate < other.observationDate){ return false };\n\n        if (!this.createdDate && other.createdDate) { return false};\n        if (this.createdDate && !other.createdDate) { return true};\n\n        if ( this.createdDate > other.createdDate){ return true };\n        if ( this.createdDate < other.createdDate){ return false };\n\n        if (!this.position && other.position) { return false};\n        if (this.position && !other.position) { return true};\n\n        if ( this.position > other.position){ return true };\n        if ( this.position < other.position){ return false };\n        \n        return false;\n    };\n\n    lt(other){\n\n        if (!this.credibility && other.credibility) { return true};\n        if (this.credibility && !other.credibility) { return false};\n        \n        if ( this.credibility < other.credibility){ return true };\n        if ( this.credibility > other.credibility){ return false };\n\n        \n        if (!this.observationDate && other.observationDate) { return true};\n        if (this.observationDate && !other.observationDate) { return false};\n\n        if ( this.observationDate < other.observationDate){ return true };\n        if ( this.observationDate > other.observationDate){ return false };\n        \n\n        if (!this.createdDate && other.createdDate) { return true};\n        if (this.createdDate && !other.createdDate) { return false};\n\n        if ( this.createdDate < other.createdDate){ return true };\n        if ( this.createdDate > other.createdDate){ return false };\n\n        if (!this.position && other.position) { return true};\n        if (this.position && !other.position) { return false};\n\n        if ( this.position < other.position){ return true };\n        if ( this.position > other.position){ return false };\n        \n        return false;\n    };\n\n    \n}","import { krakenHelpers as h } from 'krakenhelpers'\n\nexport const thingComparison = {\n\n    lt: lt,\n    gt: gt,\n    eq: eq,\n    merge: merge\n    \n}\n\n\nfunction lt(thisThing, otherThing) {\n    if (thisThing.record_type < otherThing.record_type) {\n        return true;\n    }\n    if (thisThing.record_type > otherThing.record_type) {\n        return false;\n    }\n\n    if (thisThing.record_id < otherThing.record_id) {\n        return true;\n    }\n    if (thisThing.record_id > otherThing.record_id) {\n        return false;\n    }\n\n    return false;\n}\n\nfunction gt(thisThing, otherThing) {\n    if (thisThing.record_type > otherThing.record_type) {\n        return true;\n    }\n    if (thisThing.record_type < otherThing.record_type) {\n        return false;\n    }\n\n    if (thisThing.record_id > otherThing.record_id) {\n        return true;\n    }\n    if (thisThing.record_id < otherThing.record_id) {\n        return false;\n    }\n    return false;\n}\n\nfunction eq(thisThing, otherThing) {\n    if (thisThing.record_type != otherThing.record_type) {\n        return false;\n    }\n    if (thisThing.record_id != otherThing.record_id) {\n        return false;\n    }\n\n    return true;\n}\n\n\nfunction merge(thisThing, otherThing){\n    // Inserts otherThing in thisThing thing\n\n    if(thisThing.eq(otherThing) == false){ return }\n\n\n    if(thisThing.id == otherThing.id){\n        return\n    }\n\n\n    // Merge db proeprties\n    if(!thisThing._dbCollection || thisThing._dbCollection == null){\n        thisThing._dbCollection = otherThing._dbCollection\n    }\n    if(!thisThing._dbId || thisThing._dbId == null){\n        thisThing._dbId = otherThing._dbId\n    }\n    if(!thisThing._dbRecord || thisThing._dbRecord == null){\n        thisThing._dbRecord = otherThing._dbRecord\n    }\n\n    \n    // Merge properties\n    for(let otherThingP of otherThing._properties){\n        let thisThingP = thisThing.getProperty(otherThingP.propertyID)\n        thisThingP.merge(otherThingP)\n    }\n\n    // Merge callbacks and reset other\n    for(let k in otherThing._callbacks){\n        for(let c of otherThing._callbacks[k]){\n            thisThing.addEventListener(k, c)\n        }\n        \n    }\n    otherThing._callbacks = {}\n    \n    return\n\n}","import { krakenHelpers as h } from 'krakenhelpers'\n\n\nexport const recordHelpers = {\n    ensureNotArray:ensureNotArray,\n    ensureArray: ensureArray,\n    simplify: simplify\n}\n\nfunction ensureNotArray(value) {\n    let new_value = ensureArray(value);\n    if (new_value.length > 0) {\n        return new_value[0];\n    } else {\n        return null;\n    }\n}\n\nfunction ensureArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n\nfunction simplify(data) {\n    // Remove arrays of 1\n    //return data\n\n    if (Array.isArray(data)) {\n        // If the array has exactly one element, return that element\n        \n        if(data.length == 0){\n            return null\n        } else if (data.length === 1) {\n            if(data == [{}]){\n                return null\n            } else {\n                return simplify(data[0]);\n            }\n        } else {\n            // Otherwise, process each element in the array\n            let newData = []\n            for(let d of data){\n                let value = simplify(d);\n                if(h.isNotNull(d)){\n                    newData.push(value)\n                }\n            }\n            return newData\n        }\n    } else if (h.isNotNull(data) && typeof data === \"object\") {\n        // If the data is an object, process each key\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                let value = simplify(data[key]);\n                if(h.isNotNull(value)){\n                    newData[key] = simplify(data[key]);\n                }\n            }\n        }\n        return newData;\n    } else {\n        // If the data is neither an array nor an object, return it as is\n        return data;\n    }\n}","import { krakenHelpers as h } from 'krakenhelpers'\n\n\nexport const consoleHelpers = {\n\n    print:print,\n    printScreen: printScreen,\n    printScreenAll: printScreenAll\n}\n\n\n\nfunction print() {\n    return this.printScreen();\n}\n\nfunction printScreen() {\n    console.log(\"----------------------------------\");\n    console.log(this.properties.length);\n    console.log(\"thing:\", this.record_type, this.record_id);\n    this.properties.map((property) => {\n        property.printScreen(\"    \");\n    });\n}\n\nfunction printScreenAll() {\n    console.log(\"----------------------------------\");\n    console.log(this.properties.length);\n    console.log(\"thing:\", this.record_type, this.record_id);\n    this.properties.map((property) => {\n        property.printScreenAll(\"    \");\n    });\n}","import { krakenHelpers as h } from 'krakenhelpers'\n\n\nimport { ClassKrakenCache } from './ClassKrakenCache.js'\n\nlet MAXLEVEL = 5\n\nexport const valueManipulation = {\n\n    getThings: getThings,\n    getChildThings: getChildThings,\n    getSystemCreatedDate: getSystemCreatedDate,\n    getSystemUpdatedDate:getSystemUpdatedDate\n}\n\n\n\nfunction getChildThings(thisThing) {\n    // Gets all things objects used as values of this \n\n    let things =[]\n    for (let p of thisThing._properties) {\n        for (let v of p.values) {\n            if (v?.record_type) {\n                things.push(v)\n            }\n        }\n    }\n\n    let results = things\n\n    return results;\n}\n\nfunction getThings(thisThing, cache, maxLevel=MAXLEVEL, currentLevel=0) {\n    // Gets all things objects used as values of this \n\n    if(h.isNull(cache)){\n        cache = new ClassKrakenCache()\n        cache.add(thisThing)\n    }\n    \n    for (let p of thisThing._properties) {\n        for (let v of p.values) {\n            if (v?.record_type) {\n                cache.push(v)\n\n                if(currentLevel < maxLevel){\n                    getThings(v, cache, maxLevel, currentLevel + 1)\n                }\n                \n            }\n        }\n    }\n    \n    let results = cache.things\n\n    return results;\n}\n\n\n\nfunction  getSystemCreatedDate(thisThing) {\n    let resultDate = null;\n    for (let pv of thisThing.properties) {\n        let itemDate = pv.systemCreatedDate;\n        if (itemDate && (h.isNull(resultDate) || itemDate < resultDate)) {\n            resultDate = itemDate;\n        }\n    }\n    return resultDate;\n}\n\nfunction getSystemUpdatedDate(thisThing) {\n    let resultDate = null;\n    for (let pv of thisThing.properties) {\n        let itemDate = pv.systemCreatedDate;\n        if (itemDate && (h.isNull(resultDate) || itemDate > resultDate)) {\n            resultDate = itemDate;\n        }\n    }\n    return resultDate;\n}","import { krakenHelpers as h } from 'krakenhelpers'\n\n\nexport class ClassKrakenCache {\n    /**\n     * Cache to store things\n     */\n\n\n    constructor(maxTime=null) {\n\n        this._db = {}\n        this._maxTime = maxTime\n    }\n\n    get(record_type, record_id){\n\n        if(!record_type || record_type == null) { return null }\n        if(!record_id || record_id == null) { return null }\n\n        return this._db?.[record_type]?.[record_id]?.['item'] || null\n\n    }\n\n    add(thing){\n        return this.set(thing)\n    }\n\n    push(thing){\n        return this.set(thing)\n    }\n\n    \n    set(thing){\n\n        if(Array.isArray(thing)){\n            thing.map(x => set(x))\n        }\n\n        \n        let record_type = thing.record_type\n        let record_id = thing.record_id\n\n        if(!record_type || record_type == null) { return null }\n        if(!record_id || record_id == null) { return null }\n\n        this._db[record_type] = this._db[record_type] || {}\n        this._db[record_type][record_id] = this._db[record_type][record_id] || {}\n\n        // Merge with current item if exists\n        let currentElement = this._db[record_type][record_id]?.item\n        if(currentElement && currentElement.record_type){\n            currentElement.merge(thing)\n        } else {\n            this._db[record_type][record_id].item = thing\n        }\n        this._db[record_type][record_id].date = Date()\n\n        return this.get(record_type, record_id)\n        \n    }\n\n\n    post(thing){\n        return this.set(thing)\n    }\n\n    get things(){\n\n        let things = []\n        for(let record_type of Object.keys(this._db)){\n\n            for(let record_id of Object.keys(this._db[record_type])){\n\n                if(record_type && record_type != null){\n                    if(record_id && record_id != null){\n                        let thing = this.get(record_type, record_id)\n                        things.push(thing)\n                    }\n                }\n\n            }\n        }\n        return things\n    }\n\n}\n\n","import { krakenHelpers as h } from 'krakenhelpers'\n\n\nimport { KrProperty } from \"../../class_property/class_property.js\";\n\nexport class ClassKrakenPropertyHelpers {\n    constructor(thing) {\n        this.thing = thing;\n    }\n\n    // -----------------------------------------------------\n    //  Methods\n    // -----------------------------------------------------\n\n    get(propertyID) {\n        return getProperty(this.thing, propertyID);\n    }\n\n    getAll(propertyID) {\n        return getProperties(this.thing);\n    }\n\n    set(propertyID, value, credibility, observationDate) {\n        if (h.isNull(value)) {\n            return;\n        }\n\n        value = ensureArray(value);\n        if (value.length == 0) {\n            return;\n        }\n\n        setProperty(\n            this.thing,\n            propertyID,\n            value[0],\n            credibility,\n            observationDate,\n            \"replaceAction\",\n            null,\n        );\n\n        if (value.length == 1) {\n            return;\n        }\n        for (let i = 1; i < value.length; i++) {\n            let v = value[i];\n            setProperty(\n                this.thing,\n                propertyID,\n                value,\n                credibility,\n                observationDate,\n                \"addAction\",\n                null,\n            );\n        }\n    }\n\n    add(propertyID, value, credibility, observationDate) {\n        return setProperty(\n            this.thing,\n            propertyID,\n            value,\n            credibility,\n            observationDate,\n            \"addAction\",\n            null,\n        );\n    }\n\n    push(propertyID, value, credibility, observationDate) {\n        return this.add(propertyID, value, credibility, observationDate);\n    }\n\n    replace(propertyID, oldValue, newValue, credibility, observationDate) {\n        return setProperty(\n            this.thing,\n            propertyID,\n            newValue,\n            credibility,\n            observationDate,\n            \"replaceAction\",\n            oldValue,\n        );\n    }\n\n    delete(propertyID, value, credibility, observationDate) {\n        return setProperty(\n            this.thing,\n            propertyID,\n            value,\n            credibility,\n            observationDate,\n            \"deleteAction\",\n            null,\n        );\n    }\n\n    // -----------------------------------------------------\n    //  Attributes\n    // -----------------------------------------------------\n\n    get actionStatus() {\n        return this.thing.getProperty(\"actionStatus\")?.value;\n    }\n    set actionStatus(value) {\n        let oldValue = this.thing.getProperty(\"actionStatus\")?.value;\n        return this.thing.replaceProperty(\"actionStatus\", oldValue, value);\n    }\n\n    get endTime() {\n        return this.thing.getProperty(\"endTime\")?.value;\n    }\n    set endTime(value) {\n        let oldValue = this.thing.getProperty(\"endTime\")?.value;\n        return this.thing.replaceProperty(\"endTime\", oldValue, value);\n    }\n\n    get error() {\n        return this.thing.getProperty(\"error\")?.value;\n    }\n    set error(value) {\n        let oldValue = this.thing.getProperty(\"error\")?.value;\n        return this.thing.replaceProperty(\"error\", oldValue, value);\n    }\n\n    get familyName() {\n        return this.thing.getProperty(\"familyName\")?.value;\n    }\n    set familyName(value) {\n        let oldValue = this.thing.getProperty(\"familyName\")?.value;\n        return this.thing.replaceProperty(\"familyName\", oldValue, value);\n    }\n\n    get givenName() {\n        return this.thing.getProperty(\"givenName\")?.value;\n    }\n    set givenName(value) {\n        let oldValue = this.thing.getProperty(\"givenName\")?.value;\n        return this.thing.replaceProperty(\"givenName\", oldValue, value);\n    }\n\n    get name() {\n        return this.thing.getProperty(\"name\")?.value;\n    }\n    set name(value) {\n        let oldValue = this.thing.getProperty(\"name\")?.value;\n        return this.thing.replaceProperty(\"name\", oldValue, value);\n    }\n\n    get startTime() {\n        return this.thing.getProperty(\"startTime\")?.value;\n    }\n    set startTime(value) {\n        let oldValue = this.thing.getProperty(\"startTime\")?.value;\n        return this.thing.replaceProperty(\"startTime\", oldValue, value);\n    }\n\n    get position() {\n        return this.thing.getProperty(\"position\")?.value;\n    }\n    set position(value) {\n        let oldValue = this.thing.getProperty(\"position\")?.value;\n        return this.thing.replaceProperty(\"position\", oldValue, value);\n    }\n\n    get url() {\n        return this.thing.getProperty(\"url\")?.value;\n    }\n    set url(value) {\n        let oldValue = this.thing.getProperty(\"url\")?.value;\n        return this.thing.replaceProperty(\"url\", oldValue, value);\n    }\n\n    get contentUrl() {\n        return this.thing.getProperty(\"contentUrl\")?.value;\n    }\n    set contentUrl(value) {\n        let oldValue = this.thing.getProperty(\"contentUrl\")?.value;\n        return this.thing.replaceProperty(\"contentUrl\", oldValue, value);\n    }\n\n    get agent() {\n        return this.thing.getProperty(\"agent\")?.value;\n    }\n    set agent(value) {\n        let oldValue = this.thing.getProperty(\"agent\")?.value;\n        return this.thing.replaceProperty(\"agent\", oldValue, value);\n    }\n\n    get instrument() {\n        return this.thing.getProperty(\"instrument\")?.value;\n    }\n    set instrument(value) {\n        let oldValue = this.thing.getProperty(\"instrument\")?.value;\n        return this.thing.replaceProperty(\"instrument\", oldValue, value);\n    }\n\n    get object() {\n        return this.thing.getProperty(\"object\")?.value;\n    }\n    set object(value) {\n        let oldValue = this.thing.getProperty(\"object\")?.value;\n        return this.thing.replaceProperty(\"object\", oldValue, value);\n    }\n\n    get result() {\n        return this.thing.getProperty(\"result\")?.value;\n    }\n    set result(value) {\n        let oldValue = this.thing.getProperty(\"result\")?.value;\n        return this.thing.replaceProperty(\"result\", oldValue, value);\n    }\n\n    get startTime() {\n        return this.thing.getProperty(\"startTime\")?.value;\n    }\n    set startTime(value) {\n        let oldValue = this.thing.getProperty(\"startTime\")?.value;\n        return this.thing.replaceProperty(\"startTime\", oldValue, value);\n    }\n\n    get endTime() {\n        return this.thing.getProperty(\"endTime\")?.value;\n    }\n    set endTime(value) {\n        let oldValue = this.thing.getProperty(\"endTime\")?.value;\n        return this.thing.replaceProperty(\"endTime\", oldValue, value);\n    }\n\n    get actionStatus() {\n        return this.thing.getProperty(\"actionStatus\")?.value;\n    }\n    set actionStatus(value) {\n        let oldValue = this.thing.getProperty(\"actionStatus\")?.value;\n        return this.thing.replaceProperty(\"actionStatus\", oldValue, value);\n    }\n\n    get instrument() {\n        return this.thing.getProperty(\"instrument\")?.value;\n    }\n    set instrument(value) {\n        let oldValue = this.thing.getProperty(\"instrument\")?.value;\n        return this.thing.replaceProperty(\"instrument\", oldValue, value);\n    }\n\n    get error() {\n        return this.thing.getProperty(\"error\")?.value;\n    }\n    set error(value) {\n        let oldValue = this.thing.getProperty(\"error\")?.value;\n        return this.thing.replaceProperty(\"error\", oldValue, value);\n    }\n\n    get item() {\n        return this.thing.getProperty(\"item\")?.value;\n    }\n    set item(value) {\n        let oldValue = this.thing.getProperty(\"item\")?.value;\n        return this.thing.replaceProperty(\"item\", oldValue, value);\n    }\n\n    get previousItem() {\n        return this.thing.getProperty(\"previousItem\")?.value;\n    }\n    set previousItem(value) {\n        let oldValue = this.thing.getProperty(\"previousItem\")?.value;\n        return this.thing.replaceProperty(\"previousItem\", oldValue, value);\n    }\n\n    get nextItem() {\n        return this.thing.getProperty(\"nextItem\")?.value;\n    }\n    set nextItem(value) {\n        let oldValue = this.thing.getProperty(\"nextItem\")?.value ;\n        return this.thing.replaceProperty(\"nextItem\", oldValue, value);\n    }\n\n    get position() {\n        return this.thing.getProperty(\"position\")?.value ;\n    }\n    set position(value) {\n        let oldValue = this.thing.getProperty(\"position\")?.value;\n        return this.thing.replaceProperty(\"position\", oldValue, value);\n    }\n}\n\n\nfunction getProperty(thisThing, propertyID) {\n    /**\n     * Returns property of\n     */\n\n    if (!propertyID || propertyID == null) {\n        return null;\n    }\n\n    let propertiesID = propertyID.split(\".\");\n    let pID = propertyID.split(\".\")[0];\n    let otherIDS = propertyID.split(\".\").slice(1);\n\n    // Find property object\n    let property;\n    for (let i = 0; i < thisThing._properties.length; i++) {\n        if (thisThing._properties[i].propertyID == pID) {\n            property = thisThing._properties[i];\n        }\n    }\n\n    // Create property object if missing\n    if (!property || property == null) {\n        property = new KrProperty(propertyID);\n        thisThing._properties.push(property);\n    }\n\n    // Recurse when dot notation\n    if (otherIDS.length > 0) {\n        if (!property.value?.record_type) {\n            return null;\n        } else {\n            return property.value.getProperty(otherIDS.join(\".\"));\n        }\n    } else {\n        return property;\n    }\n}\n\nfunction getProperties(thisThing) {\n    /**\n     * Returns list of KrProperty object in alphabetical order\n     */\n\n    let properties = ensureArray(thisThing._properties);\n    properties = properties.filter((x) => h.isNotNull(x));\n    \n    properties = properties.toSorted((a, b) => {\n        return a.lt(b);\n    });\n\n    properties = ensureArray(properties)\n    return properties\n}\n\nfunction setProperty(\n    thisThing,\n    propertyID,\n    value,\n    credibility,\n    observationDate,\n    actionType,\n    previousValue,\n) {\n    // Handle dot notation\n    if (propertyID.includes(\".\")) {\n        let pID = propertyID.split(\".\")[0];\n        let otherIDS = propertyID.split(\".\").slice(1);\n\n        let p = thisThing.getProperty(pID);\n\n        // If not value, create new KrThing\n        if (h.isNull(p.value?.record_type)) {\n            p.setValues(\n                thisThing.new(\"Thing\"),\n                metadataRecord,\n                actionType,\n                null,\n            );\n        }\n\n        // Set value\n        p.value.setProperty(otherIDS.join(\".\"), value);\n        return p;\n    }\n\n    // Get old value\n    let oldValue = thisThing.getProperty(propertyID)?.values;\n\n    // get or create property object\n    let property = thisThing.getProperty(propertyID);\n    if (h.isNull(property)) {\n        property = new KrProperty(propertyID);\n        thisThing._properties.push(property);\n    }\n\n    // Iterate through values and convert to KrThing if required\n    let values = ensureArray(value);\n    for (let i = 0; i < values.length; i++) {\n        if (h.isNotNull(values?.[i]?.['@type'])) {\n            values[i] = thisThing.new(values[i]);\n        }\n    }\n\n    // Set metadata\n    var metadataRecord = thisThing.metadata.record;\n    if (h.isNotNull(credibility)) {\n        metadataRecord.credibility = credibility;\n    }\n    if (h.isNotNull(observationDate)) {\n        metadataRecord.observationDate = observationDate;\n    }\n\n    // set property value\n    var newValues = property.setValues(\n        values,\n        metadataRecord,\n        actionType,\n        previousValue,\n    );\n\n    // dispatch event\n    let newValue = thisThing.getProperty(propertyID)?.values;\n\n    if (oldValue != newValue) {\n        let data = {\n            propertyID: propertyID,\n            oldValue: oldValue,\n            newValue: newValue,\n        };\n        thisThing.dispatchEvent(actionType, data);\n    }\n\n    return newValues;\n}\n\nfunction ensureArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n","import { krakenHelpers as h } from 'krakenhelpers'\n\n\n\nimport { KrProperty } from \"../../class_property/class_property.js\";\n\nimport { ClassKrakenCache } from \"./ClassKrakenCache.js\";\n\nimport { krakenHelpers as k } from \"krakenhelpers\";\n\nimport { recordHelpers } from \"./recordHelpers.js\";\n\nlet MAX_DEPTH = 10;\n\nexport class ClassKrakenExportHelpers {\n    constructor(thing) {\n        this.thing = thing;\n    }\n\n    get record() {\n        return getFullRecord(this.thing);\n    }\n\n    getRecord(maxDepth, currentDepth) {\n        return getFullRecord(this.thing, maxDepth, currentDepth);\n    }\n\n    set record(value) {\n        return setFullRecord(this.thing, value);\n    }\n\n    setRecord(value) {\n        return setFullRecord(this.thing, value);\n    }\n\n    get best() {\n        return getBestRecord(this.thing);\n    }\n\n    getBest(maxDepth, currentDepth) {\n        return getBestRecord(maxDepth, currentDepth)\n    }\n\n    get system() {\n        return getSystemRecord(this.thing);\n    }\n\n    get systemFlat() {\n        return getSystemRecordFlat(this.thing);\n    }\n\n    getSystem(maxDepth, currentDepth) {\n        return getSystemRecord(this.thing, maxDepth, currentDepth);\n    }\n\n    set system(value) {\n        return setSystemRecord(this.thing, value);\n    }\n}\n\n// -----------------------------------------------------\n//  Best record\n// -----------------------------------------------------\n\nfunction getBestRecord(thisThing, maxDepth = MAX_DEPTH, currentDepth = 0) {\n    if (h.isNull(maxDepth)) {\n        maxDepth = MAX_DEPTH;\n    }\n\n    if (currentDepth >= maxDepth) {\n        if (this.record_type == \"QuantitativeValue\") {\n            // Do nothing\n        } else {\n            return thisThing.ref;\n        }\n    }\n\n    let record = {};\n    let properties = ensureArray(thisThing.properties);\n    properties = properties.filter(x => !h.isNull(x))\n    for (let p of properties) {\n        record[p.propertyID] = p.getBestRecord(maxDepth, currentDepth + 1);\n    }\n    record[\"@type\"] = thisThing.record_type;\n    record[\"@id\"] = thisThing.record_id;\n\n    record = JSON.parse(JSON.stringify(record));\n    record = recordHelpers.simplify(record);\n    return record;\n}\n\n// -----------------------------------------------------\n//  Full record\n// -----------------------------------------------------\n\nfunction getFullRecord(thisThing, maxDepth = MAX_DEPTH, currentDepth = 0) {\n    if (h.isNull(maxDepth)) {\n        maxDepth = MAX_DEPTH;\n    }\n\n    if (currentDepth >= maxDepth) {\n        if (thisThing.record_type == \"QuantitativeValue\") {\n            // Do nothing\n        } else {\n            return thisThing.ref;\n        }\n    }\n\n    let record = {};\n    let properties = thisThing.properties;\n    for (let p of properties) {\n        let value = p.getFullRecord(maxDepth, currentDepth + 1);\n        if (!h.isNull(value)) {\n            record[p.propertyID] = value;\n        }\n    }\n    record[\"@type\"] = thisThing.record_type;\n    record[\"@id\"] = thisThing.record_id;\n\n    record = JSON.parse(JSON.stringify(record));\n    record = recordHelpers.simplify(record);\n    return record;\n}\n\nfunction setFullRecord(thisThing, value) {\n    if (h.isNull(value)) {\n        return;\n    }\n\n    thisThing._properties = [];\n    Object.keys(value).forEach((key) => {\n        thisThing.p.replace(key, null, value[key]);\n    });\n}\n\n// -----------------------------------------------------\n//  System record\n// -----------------------------------------------------\n\nfunction getSystemRecordFlat(thing) {\n    let records = [];\n\n    for (let t of thing.things) {\n        records.push(getSystemRecord(t, 1, 0));\n    }\n    return records;\n}\n\nfunction getSystemRecord(thing, maxDepth, currentDepth) {\n    if ((h.isNull(maxDepth)) && maxDepth != 0) {\n        maxDepth = MAX_DEPTH;\n    }\n\n    if ((h.isNull(currentDepth)) && currentDepth != 0) {\n        currentDepth = 0;\n    }\n\n    if (currentDepth >= maxDepth) {\n        return thing.ref;\n    }\n\n    // Init record\n    let record = {};\n    record[\"_version\"] = \"2.0\";\n    record[\"_dbCollection\"] = thing._dbCollection;\n    record[\"_dbId\"] = thing._dbId;\n    record[\"_record_type\"] = thing.record_type;\n    record[\"_record_id\"] = thing.record_id;\n    record[\"_heading1\"] = thing.headings.heading1;\n    record[\"_heading2\"] = thing.headings.heading2;\n    record[\"_refs\"] = [];\n    record[\"_propertyValues\"] = [];\n    record[\"@type\"] = thing.record_type;\n    record[\"@id\"] = thing.record_id;\n\n    // Add refs\n\n    let childThings = thing.getChildThings();\n    for (let ct of childThings) {\n        if (!record[\"_refs\"].includes(ct.ref)) {\n            record[\"_refs\"].push(ct.ref);\n        }\n    }\n\n    // Add property Values\n    let pvs = [];\n    for (let p of thing.properties) {\n        pvs = pvs.concat(p.getSystemRecord(maxDepth, currentDepth + 1));\n    }\n    pvs = pvs.filter((x) => !h.isNull(x));\n    record[\"_propertyValues\"] = pvs;\n\n    // Add values\n    record[\"@type\"] = thing.record_type;\n    record[\"@id\"] = thing.record_id;\n    let fullRecord = getFullRecord(thing, maxDepth, currentDepth);\n    for (let k of Object.keys(fullRecord)) {\n        record[k] = fullRecord[k];\n    }\n\n    return record;\n}\n\nfunction setSystemRecord(thing, value, cache) {\n    let version = value?.[\"_version\"];\n    if (!version || version == null || version == \"1.0\") {\n        return setSystemRecordV1_0(thing, value, cache);\n    }\n\n    if (version == \"2.0\") {\n        return setSystemRecordV2_0(thing, value, cache);\n    }\n    return;\n}\n\nfunction setSystemRecordV2_0(thing, value, wipeBefore = true) {\n    // Load data into object\n\n    // Convert from string if one\n    if (typeof value === \"string\" || value instanceof String) {\n        try {\n            value = JSON.parse(value);\n        } catch {\n            return;\n        }\n    }\n\n    // Check if valid format\n    if (h.isNull(value) || h.isNull(value?._propertyValues)) {\n        return;\n    }\n\n    // Reset current properties\n    if (wipeBefore == true) {\n        thing._properties = [];\n    }\n\n    // Retrieve db info\n    thing._dbCollection = value?.[\"_dbCollection\"];\n    thing._dbId = value?.[\"_dbId\"];\n    thing._dbRecord = value;\n\n    //\n    let pvRecords = ensureArray(value._propertyValues);\n    pvRecords = pvRecords.filter((x) => !h.isNull(x));\n    if (pvRecords.length == 0) {\n        return;\n    }\n\n    // Group pvRecords by propertyID\n    let propertyIDs = [...new Set(pvRecords.map((x) => x.object.propertyID))];\n    propertyIDs = propertyIDs.filter((x) => !h.isNull(x));\n\n    for (let propertyID of propertyIDs) {\n        let subPropertyValues = pvRecords.filter(\n            (item) => item.object.propertyID == propertyID,\n        );\n        var property = thing.getProperty(propertyID);\n\n        for (let pv of subPropertyValues) {\n            pv = convertPV(thing, pv);\n            property.setSystemRecord(pv, false);\n        }\n    }\n}\n\nfunction convertPV(thing, pvRecord) {\n    // Convert propertyValue value to thing if @type present\n\n    if (h.isNull(pvRecord)) {\n        return pvRecord;\n    }\n\n    let value = pvRecord?.object?.value;\n\n    if (h.isNull(value)) {\n        return pvRecord;\n    }\n\n    if ( !h.isNull(value?.[\"@type\"])) {\n        \n        // Get from cache\n        let t = thing._things.get(value?.[\"@type\"], value?.[\"@id\"]);\n\n        if (h.isNull(t)) {\n            t = thing.new(value?.[\"@type\"], value?.[\"@id\"]);\n            t._things = thing._things;\n            thing._things.set(t);\n            t = thing._things.get(value?.[\"@type\"], value?.[\"@id\"]);\n        }\n\n        setSystemRecordV2_0(t, value, false);\n\n        // Store and retrieve to cache to avoid duplicate things\n        pvRecord.object.value = t;\n    }\n\n    return pvRecord;\n}\n\nfunction setSystemRecordV1_0(thing, value, cache) {\n    // Load data into object\n\n    if (h.isNull(cache)) {\n        cache = new ClassKrakenCache();\n    }\n\n    // Convert from string if one\n    if (typeof value === \"string\" || value instanceof String) {\n        try {\n            value = JSON.parse(value);\n        } catch {\n            return;\n        }\n    }\n\n    // Check if valid format\n    if (!value || !value.propertyValues) {\n        return;\n    }\n\n    // Reset current properties\n    thing._properties = [];\n\n    // Set pvRecords\n    if (h.isNull(value.propertyValues)) {\n        return;\n    }\n\n    let pvRecords = ensureArray(value.propertyValues);\n    pvRecords = pvRecords.filter((x) => !h.isNull(x));\n\n    // Remove arrays of 1\n    //todo: figure out why this happens\n\n    if (1 == 1) {\n        let newPvRecords = [];\n        for (let p of pvRecords) {\n            if (Array.isArray(p) && p.length == 1) {\n                p = p[0];\n                newPvRecords.push(p);\n            } else if (Array.isArray(p) && p.length == 0) {\n            } else {\n                newPvRecords.push(p);\n            }\n        }\n        pvRecords = newPvRecords;\n    }\n    //\n\n    if (pvRecords.length == 0) {\n        return;\n    }\n\n    // convert sub things to KrThing\n    let counter = 0;\n    for (let pvRecord of pvRecords) {\n        if (h.isNull(pvRecord)) {\n            continue;\n        }\n\n        let value = pvRecord?.object?.value;\n\n        if (h.isNull(value)) {\n            continue;\n        }\n\n        if (!h.isNull(value?.[\"@type\"])) {\n            var t = thing.new(value?.[\"@type\"], value?.[\"@id\"]);\n            setSystemRecord(t, value, cache);\n\n            // Store and retrieve to cache to avoid duplicate things\n            cache.set(t);\n            t = cache.get(value?.[\"@type\"], value?.[\"@id\"]);\n\n            pvRecord.object.value = t;\n            counter += 1;\n        }\n    }\n\n    // Group pvRecords by propertyID\n    let propertyIDs = [...new Set(pvRecords.map((x) => x.object.propertyID))];\n\n    for (let propertyID of propertyIDs) {\n        if (!h.isNull(propertyID) ) {\n            let subPropertyValues = pvRecords.filter(\n                (item) => item.object.propertyID == propertyID,\n            );\n            var property = new KrProperty(propertyID);\n            property.setSystemRecord(subPropertyValues);\n            thing._properties.push(property);\n        }\n    }\n}\n\nfunction ensureArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n","import { krakenHelpers as h } from 'krakenhelpers'\n\n\n// todo: add ability to change starting position from 0\n\n\nexport class ClassKrakenItemListHelpers {\n\n    constructor(thing){\n        this.thing = thing\n\n    }\n\n\n\n    new(){\n        let newItemList = this.thing.new('ItemList')\n        return newItemList\n    }\n\n    getFirstItem(){ \n        return getFirstItem(this.thing) \n    } \n    get firstItem(){\n        return getFirstItem(this.thing)\n    } \n    get first(){\n        return getFirstItem(this.thing)\n    } \n\n    getLastItem(){\n        return getLastItem(this.thing)\n    } \n    get lastItem(){\n        return getLastItem(this.thing)\n    } \n    get last(){\n        return getLastItem(this.thing)\n    } \n\n\n\n    // Items\n    get items(){\n        return getItems(this.thing)\n    } \n\n    // Items\n    getItems(){\n        return getItems(this.thing)\n    } \n\n    // ListItems\n\n    get listItems(){\n        return getListItems(this.thing)\n    } \n    set items(value){\n        return pushItem(this.thing, value)\n    } \n\n    getListItems(){\n        return getListItems(this.thing)\n    } \n\n    addItems(value){\n        return pushItem(this.thing, value)\n    } \n    setItems(value){\n        return pushItem(this.thing, value)\n    } \n\n    push(value){\n        return pushItem(this.thing, value)\n    } \n    add(value){\n        return pushItem(this.thing, value)\n    } \n\n    getItem(ref){\n        return getItem(this.thing)\n    } \n    pushItem(value){\n        return pushItem(this.thing, value)\n    }\n\n\n\n    // ListItem\n\n\n    get item(){\n        return this.thing.p.item\n    }\n\n    set item(value){\n        return this.thing.p.item = value\n    }\n\n\n    setItem(value){\n        return this.thing.p.item = value\n    } \n\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n\n    reCalculatePosition(){\n        return reCalculatePosition(this.thing)\n    } \n\n    remove(value){\n        return remove(this.thing, value)\n    } \n\n    insertBefore(refItem, itemToInsert){\n        return insertBefore(this.thing, refItem, itemToInsert)\n    } \n\n    insertAfter(refItem, itemToInsert){\n        return insertAfter(this.thing, refItem, itemToInsert)\n    } \n\n    getItem(ref){\n        return getItem(this.thing, ref)\n    } \n\n\n    getByListItem(listItem){\n        return getByListItem(this.thing, listItem)\n    } \n\n    getByItem(item){\n        return getByItem(this.thing, item)\n    } \n\n\n    get length(){\n        return getListItems(this.thing).length\n    }\n\n\n\n    // -----------------------------------------------------\n    //  filters \n    // -----------------------------------------------------\n\n\n    filter(propertyID, value){\n        // Basic filter, returns new ItemList\n        return filter(this.thing, propertyID, value )\n    }\n\n\n\n\n}\n\n\nfunction getListItem(thisThing, record_type, record_id){\n    // Retrieve list item by giving either, record, thing or record or thing of its item\n\n    record_id = record_id || record_type?.record_id || record_type?.['@id']\n    record_type = record_type?.record_type || record_type?.['@type'] || record_type\n\n    if(h.isNull(record_type)){ return null }\n    \n    for(let l of thisThing.p.get('itemListElement')?.values || []){\n        if(l?.record_type == record_type && l?.record_id == record_id){\n            return l\n        }\n        let item = l.p.get('item')?. value || null\n        if(item?.record_type == record_type && item?.record_id == record_id){\n            return l\n        }\n    }\n    return null\n}\n\nfunction getListItems(thisThing) {\n\n    let listItems = thisThing.p.get('itemListElement').values\n\n    function sortListItems(item1, item2){\n\n        let item1Position = item1.p.position || null\n        let item2Position = item2.p.position || null\n\n        if(h.isNull(item1Position) && h.isNull(item2Position)){\n            return 0\n        }\n\n        if(h.isNull(item1Position) && h.isNotNull(item2Position)){\n            return -1\n        }\n\n        if(h.isNotNull(item1Position) && h.isNull(item2Position)){\n            return 1\n        }\n        \n        if(item1.p.position < item2.p.position){\n            return -1\n        }  \n        if(item1.p.position > item2.p.position){\n            return 1\n        }    \n        return 0 \n    }\n\n    // sort by position\n    //listItems.sort(getListItems)\n    \n    return listItems;\n}\n\n\nfunction getFirstItem(thisThing) {\n\n    let listItems = getListItems(thisThing)\n    \n    if(h.isNull(listItems)){ return null }\n\n    // Get item 1st position 0\n    for(let l of listItems){\n        if(h.isNotNull(l.p.position) && l.p.position === 0){\n            return l\n        }\n    }\n    \n   // Get item no previousItem if only one\n    let filteredItems = listItems.filter(x => h.isNull(x?.p?.previousItem))\n    if(filteredItems.length == 1){\n        return filteredItems[0]\n    }\n\n    // Else \n    let firstItem = listItems[0]\n    return firstItem\n    \n}\n\nfunction getLastItem(thisThing) {\n    let listItems = getListItems(thisThing)\n\n    if(h.isNull(listItems)){ return null }\n\n    if(listItems.length == 1){ return listItems[0] }\n\n    let filteredItems = listItems.filter(x => h.isNotNull(x?.p?.position))\n    if(filteredItems.length == 1){\n        return filteredItems[0]\n    } else {\n        return filteredItems[filteredItems.length - 1]\n    }\n\n    // Else \n    let lastItem = listItems[listItems.length -1]\n    \n    return lastItem\n}\n\n\nfunction getItems(thing){\n\n    let listItems = getListItems(thing)\n    listItems = ensureArray(listItems)\n    let items = listItems.map(x => x?.p.get('item').value)\n    items = items.filter( x => !h.isNull(x));\n    items = ensureArray(items)\n    return items\n}\n\n\nfunction pushItem(thisThing, listItems) {\n\n    listItems = ensureArray(listItems);\n\n    // Prepare listItems\n    let newListItems = []\n    let lastItem = getLastItem(thisThing)\n    \n    for (let listItem of listItems) {\n\n        listItem = createListItem(thisThing, listItem)\n        if(h.isNull(lastItem)){\n           \n            listItem.p.position = 0\n            thisThing.p.add('itemListElement', listItem)\n            \n        } else {\n\n            listItem.p.position = lastItem.p.position + 1\n            insertAfter(thisThing, lastItem, listItem)\n           \n        }\n        lastItem = listItem\n    }\n\n    recalculatePosition(thisThing)\n    \n    return; \n}\n\nfunction recalculatePosition(thisThing){\n\n    \n    let position = 0\n    let item = getFirstItem(thisThing)\n\n    while (h.isNotNull(item)){\n\n        if(item.p.get('position')?.value != position){\n            item.p.set('position', position)\n        }\n        let nextItem = item.p.get('nextItem')?.value\n        item = getListItem(thisThing, nextItem)\n        \n        position += 1\n        \n    }\n\n    return\n\n}\n\n\n// -----------------------------------------------------\n//  CRUD for items\n// -----------------------------------------------------\n\nfunction remove(thisThing, itemRef) {\n    var item = getListItem(thisThing, itemRef)\n    if (!item) {\n        return null;\n    }\n\n    var p = item.p.previousItem;\n    var n = item.p.nextItem;\n\n    // Ressign before and after links to one another\n    if (h.isNotNull(p)) {\n        p.p.nextItem = n;\n    }\n    if (h.isNotNull(n)) {\n        n.p.previousItem = p;\n    }\n\n    // Remove from list\n    thisThing.p.delete('itemListElement', item)\n    \n\n    // Sets position\n    recalculatePosition(thisThing)\n    \n    // Remove links\n    item.p.previousItem = null;\n    item.p.nextItem = null;\n\n    return;\n}\n\n\nfunction createListItem(thisThing, listItem){\n    // Create a list item given a listitem, thing, record or item\n\n    // Convert to thing\n    if(!listItem?.record_type){\n        listItem = thisThing.new(listItem)\n    }\n\n    // Add lsitItem if not one\n    if(listItem.record_type != 'ListItem'){\n        let newListItem = thisThing.new()\n        newListItem.record_type = 'ListItem'\n        newListItem.p.add('item', listItem)\n        listItem = newListItem\n    }\n\n    return listItem\n    \n}\n\n\n\n\nfunction insertBefore(thisThing, referenceItem, itemToInsert) {\n\n\n    // Get inputItem (create if not in listitemelement)\n    let item = getListItem(thisThing, itemToInsert)\n    if(h.isNull(item)){\n        item = createListItem(thisThing, itemToInsert)\n    } \n\n    // Get referenceItem\n    let n = getListItem(thisThing, referenceItem)\n\n    if(h.isNull(n)){ throw('Error, invalid reference item')}\n    \n    // Get referenceitem previous item\n    let p = n.p.get('previousItem')?.value || null\n    p = getListItem(thisThing, p)\n    \n    // Stop events\n    thisThing.blockEvents();\n    if (item) {\n        item.blockEvents();\n    }\n    if (p) {\n        p.blockEvents();\n    }\n    if (n) {\n        n.blockEvents();\n    }\n\n    // Remove previous links of items\n    remove(thisThing, item)\n\n    \n    // Change allocation\n    item.p.set('previousItem', p)\n    item.p.set('nextItem', n)\n\n    if (p) {\n        p.p.set('nextItem', item)\n    }\n    if (n) {\n        n.p.set('previousItem', item)\n        \n    } \n\n    // Start events\n    thisThing.allowEvents();\n    if (item) {\n        item.allowEvents();\n    }\n    if (p) {\n        p.allowEvents();\n    }\n    if (n) {\n        n.allowEvents();\n    }\n\n\n    if(1 == 0 ){\n        // Sets position\n        let position = 0;\n        if (p) {\n            position = p.p.position + 1;\n        }\n    \n        \n        let whileItem = item\n        while(!h.isNull(whileItem)){\n            whileItem.p.set('position', position);\n            whileItem = whileItem.p.get('nextItem')?.value || null;\n            position = position + 1;\n        }\n    }\n\n    // Add item\n    thisThing.p.add(\"itemListElement\", item);\n\n    recalculatePosition(thisThing)\n\n    \n    return item;\n}\n\nfunction insertAfter(thisThing, referenceItem, itemToInsert) {\n    /**\n     *\n     */\n\n    // Get inputItem (create if not in listitemelement)\n    let item = getListItem(thisThing, itemToInsert)\n    if(h.isNull(item)){\n        item = createListItem(thisThing, itemToInsert)\n    } \n\n    // Get referenceItem\n    let p = getListItem(thisThing, referenceItem)\n\n    if(h.isNull(p)){ throw('Error, invalid reference item')}\n\n    // Get referenceitem previous item\n    let n = p.p.nextItem || null\n    n = getListItem(thisThing, n)\n\n    // Stop events\n    thisThing.blockEvents();\n    if (item) {\n        item.blockEvents();\n    }\n    if (p) {\n        p.blockEvents();\n    }\n    if (n) {\n        n.blockEvents();\n    }\n\n    // Remove previous links of items\n    remove(thisThing, item)\n\n    // Change allocation\n    item.p.previousItem = p\n    item.p.nextItem = n\n\n    if (p) {\n        p.p.nextItem=item\n    }\n    if (n) {\n        n.p.previousItem=item\n\n    } \n\n    \n    // Start events\n    thisThing.allowEvents();\n    if (item) {\n        item.allowEvents();\n    }\n    if (p) {\n        p.allowEvents();\n    }\n    if (n) {\n        n.allowEvents();\n    }\n\n\n    if(1 == 0 ){\n        // Sets position\n        let position = 0;\n        if (p) {\n            position = p.p.position + 1;\n        }\n\n\n        let whileItem = item\n        while(!h.isNull(whileItem)){\n            whileItem.p.set('position', position);\n            whileItem = whileItem.p.get('nextItem')?.value || null;\n            position = position + 1;\n        }\n    }\n\n    // Add item\n    thisThing.p.add(\"itemListElement\", item);\n\n    recalculatePosition(thisThing)\n    return item;\n}\n\nfunction getItem(thisThing, ref) {\n    \n\n    return getListItem(thisThing, ref)\n    if (!ref) {\n        return null;\n    }\n\n    if (ref && ref.ref) {\n        ref = ref.ref;\n    }\n\n    if ( h.isNull(ref?.['@type'])) {\n        return null;\n    }\n\n    if (ref[\"@type\"] == \"ListItem\") {\n        return getByListItem(thisThing, ref);\n    } else {\n        return getByItem(thisThing, ref);\n    }\n}\n\nfunction getByListItemOLD(thisThing, ref) {\n    let items = thisThing.p.get(\"itemListElement\").values;\n\n    for (let item of items) {\n        if (item.record_type == ref[\"@type\"] && item.record_id == ref[\"@id\"]) {\n            return item;\n        }\n    }\n    return null;\n}\n\nfunction getByItemOLD(thisThing, ref) {\n    let items = thisThing.p.get(\"itemListElement\").values;\n    for (let item of items) {\n        if (\n            item.item.record_type == ref[\"@type\"] &&\n            item.item.record_id == ref[\"@id\"]\n        ) {\n            return item;\n        }\n    }\n    return null;\n}\n\n// -----------------------------------------------------\n//  Query attributes\n// -----------------------------------------------------\n\nfunction getParams(thisThing) {\n    let params = {};\n    if (h.isNull(thisThing._params)) {\n        return {};\n    } else {\n        params = thisThing._params;\n    }\n\n    let keys = [\"limit\", \"offset\", \"orderBy\", \"orderDirection\"];\n    for (let k of keys) {\n        let v = this[k];\n        if (!h.isNull(v)) {\n            params[k] = v;\n        }\n    }\n    return params;\n}\n\nfunction setParams(thisThing, value) {\n    thisThing._params = value;\n}\n\n// -----------------------------------------------------\n//  Filters\n// -----------------------------------------------------\n\n\n\n\n\n\nfunction filter(thing, propertyID, value) {\n    //\n\n    // Convert to thing if one\n    if(value['@type']){\n        value = thing.new(value)\n    }\n\n    // Init new list\n    let newList = thing.list.new()\n\n    // Iterate through values\n    for(let item of thing.list.items){\n        let values = item.p.get(propertyID)?.values\n        for(let v of values){\n            if(v.record_type){\n                if(v.eq(value)){\n                    newList.list.add(item)\n                    continue\n                }\n            } else {\n                if(v == value){\n                    newList.list.add(item)\n                    continue\n                }\n            }   \n        }\n    }\n    return newList\n\n}\n\nfunction filterAdvanced(thisThing, propertyValueSpecifications) {\n    /**\n     * Returns new Things with filtered items\n     */\n\n    let newThings = new KrThings();\n\n    for (let item of getItems(thisThing)) {\n        let result = propertyValueSpecifications.map((pvs) =>\n            pvs.test(item.item),\n        );\n\n        if (result.every(Boolean) == true) {\n            newThings.list.add(item.item);\n        }\n    }\n\n    return newThings;\n}\n\nfunction ensureArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n","import { krakenHelpers as h } from 'krakenhelpers'\n\n\n\nlet ACTIONS_LOG = []\n\nexport class ClassKrakenActionHelpers{\n\n    constructor(thing) {\n        this.thing = thing\n    }\n\n\n    // -----------------------------------------------------\n    //  Logs \n    // -----------------------------------------------------\n\n    \n    get logs(){\n        return this.getLogs()\n    }\n    \n    getLogs(propertyID, value){\n        // Returns ListItem with all actions\n        let actionsLogThing = this.thing.list.new()\n        actionsLogThing.list.add(ACTIONS_LOG)\n\n        if(propertyID && propertyID != null){\n            actionsLogThing = actionsLogThing.list.filter(propertyID, value)\n        }\n\n        return actionsLogThing\n    }\n\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n\n    \n    new(){\n        let action = this.thing.new('Action')\n        action.a.startTimer()\n        ACTIONS_LOG.push(action)\n        return action\n    }\n\n    get name(){\n        return this.thing.p.get('name').value\n    }\n\n    set name(value){\n        this.thing.p.set('name', value)\n    }\n\n    \n    get object(){\n        let object = this.thing.p.get('object').value\n        if(!object){\n            this.setProperty('object', this.thing.new('Thing'))\n        }\n        return this.thing.p.get('object').value\n    }\n\n    set object(value){\n        this.thing.p.set('object', value)\n    }\n\n    get instrument(){\n        return this.thing.p.get('instrument').value\n    }\n\n    set instrument(value){\n            this.thing.p.set('instrument', value)\n    }\n\n    get result(){\n        return this.thing.p.get('result').value\n    }\n\n    set result(value){\n        this.thing.p.set('result', value)\n        this.setCompleted()\n    }\n\n    get results(){\n        return this.thing.p.get('result').values\n    }\n\n    set results(value){\n            this.thing.p.set('result', value)\n        this.setCompleted()\n    }\n    \n    get startTime(){\n        return this.thing.p.get('startTime').value\n    }\n\n    set startTime(value){\n        this.thing.p.replace('startTime', null, value)\n    }\n\n    get endTime(){\n        return this.thing.p.get('endTime').value\n    }\n\n    set endTime(value){\n            this.thing.p.set('endTime', value)\n    }\n\n    get actionStatus(){\n        return this.thing.p.get('actionStatus').value\n    }\n\n    set actionStatus(value){\n        this.thing.p.replace('actionStatus', null, value)\n    }\n\n    get error(){\n        return this.thing.p.get('error').value\n    }\n\n    set error(value){\n            this.thing.p.set('error', value)\n    }\n\n\n    // time shortcuts\n\n    start(){\n        this.startTimer()\n    }\n    startTimer(){\n\n        let date = new Date()\n        this.startTime = date\n        this.actionStatus = 'ActiveActionStatus'\n    }\n\n    stop(){\n        this.stopTimer()\n    }\n    stopTimer(){\n        this.endTime = new Date()\n    }\n\n    duration(){\n        let startTime = this.startTime\n        let endTime = this.endTime || new Date()\n\n        if(startTime){\n            return endTime - startTime\n        }\n        return undefined\n    }\n\n\n    // Action Status shortcuts\n\n    isSuccess(){\n        return this.actionStatus == \"CompletedActionStatus\"\n    }\n\n    setCompleted(){\n        this.actionStatus = \"CompletedActionStatus\"\n        if(!this.startTime){ this.startTimer() }\n        if(!this.endTime){ this.stopTimer() }\n        this.error = undefined\n    }\n\n    setFailed(errorMessage){\n        this.actionStatus = \"FailedActionStatus\"\n        this.error = errorMessage\n    }\n\n    // HTML shortcuts\n\n    get htmlStatus(){\n        if(this.isSuccess == true){\n            return 200\n        } else {\n            return 400\n        }\n    }\n\n    get htmlContent(){\n        if(!this.result || this.result== null) { return null }\n        if(Array.isArray(this.result)){\n            return this.result.map(x=> x.getSystemRecord(10))\n        } else if (this.result.record_type){\n            return this.result.getSystemRecord(10)\n        } else {\n            return this.result\n        }\n    }\n\n    // Text output\n    get textContent(){\n\n        let date = convertToDate(this.startTime)\n        if(date && date != null){ date = date.toISOString().split('T')[0]}\n\n        let time = convertToDate(this.startTime)\n        if(time && time != null){ time = time.toLocaleTimeString()}\n\n        let status = this.actionStatus\n        if(status && status != null){ status = status.replace('ActionStatus', '').toUpperCase()}\n\n        let name = this.name\n        if(!name || name == null){ name = ''}\n\n        let error = this.error\n        if(!error || error == null){ error = ''}\n\n        let record_type = this.record_type\n        if(record_type && record_type != null){ record_type = record_type.replace('Action', '')}\n\n        let content = `${date}, ${time} - ${status || ''} - ${record_type || ''} ${name || ''} ${error || ''}`\n        return content\n    }\n\n\n}\n\n\n\nfunction convertToDate(value) {\n    if (value instanceof Date && !isNaN(value)) {\n        return value;\n    }\n\n    const date = new Date(value);\n    if (!isNaN(date.getTime())) {\n        return date;\n    }\n\n    return null;\n}","import { krakenHelpers as h } from 'krakenhelpers'\n\nlet API_ACTIONS_LOG = []\n\nimport { krakenHelpers as k } from 'krakenhelpers'\n\n\n\nexport class ClassKrakenApiHelpers{\n    /**\n     * Attributes:\n     * - apiUrl: The base url to call the api\n     * - apiBasePath: The base path of the api (api)\n     * - apiCollection: The base collection to use (test1)\n     */\n    constructor(thing){\n        this.thing = thing\n\n        this._apiConfig = {}\n        this._params = {}\n        this._req = null\n        this.instrument = { \n            \"@type\": \"WebAPI\", \n            \"@id\": \"ClassKrakenApiHelpers\", \n            \"name\": \"ClassKrakenApiHelpers\"\n        }\n\n        // Load from system \n\n        //this.apiUrl = process.env.apiUrl || null\n        //this.apiBasePath = process.env.apiBasePath || null\n        //this.apiCollection = process.env.apiCollection || null\n\n        \n    }\n    \n    // -----------------------------------------------------\n    //  I/O \n    // -----------------------------------------------------\n\n\n    async getThing(){\n        return await this.get()\n    }\n    \n    async get(){\n\n        \n        let action = this.thing.action.new()\n        action.a.name = `Get record ${this.thing.refID}`\n        action.a.object = this.thing.ref\n        action.a.instrument = this.instrument\n\n        try {\n            let results = await k.api.get(this.apiUrl, this.path, this.thing.ref)\n            this.thing.export.system = results\n            action.a.setCompleted()\n            action.a.result = this.thing\n            \n        } catch (error) {\n            action.a.setFailed(String(error))\n        }\n\n        return action\n\n    }\n\n    \n\n    async search(){\n        return await this.getThings()\n    }\n        \n    async getThings(){\n\n        let action = this.thing.action.new()\n        action.a.name = `Get records `\n        action.a.instrument = this.instrument\n\n        try {\n            let results = await k.api.get(this.apiUrl, this.path, this.params)\n            this.thing.export.system = results\n            action.a.setCompleted()\n            action.a.result = this.thing\n\n        } catch (error) {\n            action.a.setFailed(String(error))\n        }\n\n        return action\n\n    }\n\n\n    async getThingRelated(){\n\n        let action = this.thing.action.new()\n        action.a.name = `Get thing related ${this.thing.refID}`\n        action.a.object = this.thing.ref\n        action.a.instrument = this.instrument\n        \n        try {\n\n            let things = this.thing.list.new()\n\n            \n            let results = await k.api.get(this.apiUrl, this.path + '/related' , this.thing.ref)\n            \n            things.export.system = results\n            action.a.setCompleted()\n            action.a.result = things\n\n        } catch (error) {\n            action.a.setFailed(String(error))\n        }\n\n        return action\n        \n    }\n\n    async autoComplete(textQuery){\n\n        let action = this.thing.action.new()\n        action.a.name = `Get thing related ${this.thing.refID}`\n        action.a.object = this.thing.ref\n        action.a.instrument = this.instrument\n\n        try {\n\n            let things = this.thing.list.new()\n\n            let q = this.params\n            q.propertyID = \"_heading1\"\n            q.textQuery = textQuery\n           \n            let results = await k.api.get(this.apiUrl, this.path + '/autoComplete' , q)\n\n            things.export.system = results\n            action.a.setCompleted()\n            action.a.result = things\n\n        } catch (error) {\n            action.a.setFailed(String(error))\n        }\n\n        return action\n\n        \n    }\n\n    async post(){\n\n        let action = this.thing.action.new()\n        action.a.name = `Get record ${this.thing.refID}`\n        action.a.object = this.thing.ref\n        action.a.instrument = this.instrument\n\n        try {\n            let results = await k.api.post(this.apiUrl, this.path, this.thing.export.system)\n            action.a.setCompleted()\n            action.a.result = this.thing\n\n        } catch (error) {\n            action.a.setFailed(String(error))\n        }\n\n        return action\n    }\n    \n    \n\n    async delete(){\n\n        let action = this.thing.action.new()\n        action.a.name = `Delete record ${this.thing.refID}`\n        action.a.object = this.thing.ref\n        action.a.instrument = this.instrument\n\n        try {\n            let results = await k.api.delete(this.apiUrl, this.path, this.thing.ref)\n            action.a.setCompleted()\n            action.a.result = this.thing\n\n        } catch (error) {\n            action.a.setFailed(String(error))\n        }\n\n        return action\n    }\n\n\n    async getCollections(){\n\n        let action = this.thing.action.new()\n        action.a.name = `Get collections`\n        action.a.instrument = this.instrument\n        \n        let path = ''\n        if(this.apiBasePath && this.apiBasePath != null){\n            path = this.apiBasePath + '/collection'\n        } else {\n            path = 'collection'\n        }\n        \n        try {\n            let results = await k.api.get(this.apiUrl, path)\n\n            this.thing.export.system = results\n            action.a.setCompleted()\n            action.a.result = this.thing\n\n        } catch (error) {\n            action.a.setFailed(String(error))\n        }\n\n        return action\n\n    }\n\n\n    \n    // -----------------------------------------------------\n    //  Custom attributes \n    // -----------------------------------------------------\n\n\n    get path(){\n        return [this.apiBasePath, this.apiCollection].join('/')\n    }\n    \n    get apiConfig(){\n        return this._apiConfig\n    }\n\n    set apiConfig(value){\n        this._apiConfig = value\n    }\n   \n    get apiUrl(){\n        return this.apiConfig.apiUrl\n    }\n    \n    set apiUrl(value){\n        if(!value || value == null){ return }\n\n        if(!value.startsWith('http')){\n            value = 'https://' + value\n        }\n        \n        let url = new URL(value)\n        this.apiConfig.apiUrl = 'https://' + url.hostname\n        this.apiConfig.apiBasePath = url.pathname\n    }\n\n    get apiCollection(){\n        return this.apiConfig.apiCollection\n    }\n    set apiCollection(value){\n        if(!value || value == null){ return }\n        this.apiConfig.apiCollection = value\n    }\n\n    get apiBasePath(){\n        return this.apiConfig.apiBasePath\n    }\n    set apiBasePath(value){\n        if(!value || value == null){ return }\n        this.apiConfig.apiBasePath = value\n    }\n    \n    get record_type(){\n        return this._params.record_type \n    }\n    set record_type(value){\n        if(!value || value == null){ return }\n        this._params.record_type = value\n    }\n\n    get record_id(){\n        return this._params.record_id\n    }\n    set record_id(value){\n        if(!value || value == null){ return }\n        this._params.record_id = value\n    }\n\n    get query(){\n        let q = this._params.query \n        if(!q || q ==null){\n            this._params.query = {}\n        }\n        return this._params.query\n    }\n    \n    set query(value){\n        if(!value || value == null){ return }\n        this._params.query = value\n    }\n\n    get limit(){\n        return this._params.limit \n    }\n    set limit(value){\n        this._params.limit = value\n    }\n\n    get offset(){\n        return this._params.offset \n    }\n    set offset(value){\n        this._params.offset = value\n    }\n\n    get orderBy(){\n        return this._params.orderBy \n    }\n    set orderBy(value){\n        this._params.orderBy = value\n    }\n\n    get orderDirection(){\n        return this._params.orderDirection \n    }\n    set orderDirection(value){\n        this._params.orderDirection = value\n    }\n\n\n    get params(){\n\n        const params = {}\n\n        if(this.query && this.query != null){\n            params['query'] = JSON.stringify(this.query)\n        }\n        if(this.offset && this.offset != null){\n            params['offset'] = this.offset\n        }\n        if(this.limit && this.limit != null){\n            params['limit'] = this.limit\n        }\n        if(this.orderBy && this.orderBy != null){\n            params['orderBy'] = this.orderBy\n        }\n        if(this.orderDirection && this.orderDirection != null){\n            params['orderDirection'] = this.orderDirection\n        }\n\n        if(this.record_type && this.record_type != null){\n            params['record_type'] = this.record_type\n        }\n\n        if(this.record_id && this.record_id != null){\n            params['record_id'] = this.record_id\n        }\n\n        return params\n    }\n\n\n    get req(){\n        return this._req\n    }\n\n    set req(value){\n        this._req = value\n\n        this.apiCollection = value.params[\"collection\"]  \n        this.query = value.query[\"query\"] || value.query[\"q\"];\n        this.offset = value.query[\"offset\"] || value.query[\"o\"];\n        this.limit = value.query[\"limit\"] || value.query[\"l\"];\n        this.orderBy = value.query[\"orderBy\"] \n        this.orderDirection = value.query[\"orderDirection\"] \n        this.record_type = value.query[\"record_type\"]  \n        this.record_type = value.query[\"@type\"]  \n        this.record_type = value.params[\"record_type\"]  \n        this.record_type = value.params[\"@type\"]  \n        this.record_id = value.query[\"record_id\"]  \n        this.record_id = value.query[\"@id\"]  \n        this.record_id = value.params[\"record_id\"]  \n        this.record_id = value.params[\"@id\"]  \n        this.actionName = value.params[\"actionName\"]  \n        if(!this.apiUrl || this.apiUrl == null){\n            this.apiUrl = value.hostname + '/api'\n        }\n        \n\n        \n    }\n\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n    get actionsLog(){\n        let logs = this.thing.a.getLogs('instrument', this.instrument)\n        return logs\n    }\n    \n    \n}","import { krakenHelpers as h } from 'krakenhelpers'\n\n\nexport class ClassKrakenTestHelpers {\n    constructor(thing){\n        this.thing = thing\n        \n    }\n\n    fill(){\n\n        let record_type = this.thing.record_type || 'Thing'\n\n        this.thing.record = getTestRecord(record_type)\n        \n    }\n    \n}\n\n\n\n\n\nfunction getTestRecord(record_type){\n\n    if(!record_type || record_type == null || record_type == 'Thing'){\n        return {\n            \"@context\": \"https://schema.org/\",\n            \"@type\": \"Thing\",\n            \"@id\": \"thing1\",\n            \"name\": \"thing1\"\n        }\n    }\n\n    if(record_type == 'ItemList'){\n        return {\n            \"@type\": \"ItemList\",\n            \"@id\": \"ItemList0\",\n            \"name\": \"ItemList0\",\n            \"itemListElement\": [\n                {\n                    \"@type\": \"ListItem\",\n                    \"@id\": \"ListItem0\",\n                    \"name\": \"ListItem0\",\n                    \"position\": 0,\n                    \"previousItem\": null,\n                    \"nextItem\": {\n                        \"@type\": \"ListItem\",\n                        \"@id\": \"ListItem1\"\n                    },\n                    \"item\": {\n                        \"@type\": \"Thing\",\n                        \"@id\": \"Thing0\",\n                        \"name\": \"Thing0\",\n                        \"url\": \"https://www.test.com/thing0\"\n                    }\n                },\n                {\n                    \"@type\": \"ListItem\",\n                    \"@id\": \"ListItem1\",\n                    \"name\": \"ListItem1\",\n                    \"position\": 1,\n                    \"previousItem\":  {\n                        \"@type\": \"ListItem\",\n                        \"@id\": \"ListItem0\"\n                    },\n                    \"nextItem\": {\n                        \"@type\": \"ListItem\",\n                        \"@id\": \"ListItem2\"\n                    },\n                    \"item\": {\n                        \"@type\": \"Thing\",\n                        \"@id\": \"Thing1\",\n                        \"name\": \"Thing1\",\n                        \"url\": \"https://www.test.com/thing1\"\n                    }\n                },\n                {\n                    \"@type\": \"ListItem\",\n                    \"@id\": \"ListItem2\",\n                    \"name\": \"ListItem2\",\n                    \"position\": 2,\n                    \"previousItem\":  {\n                        \"@type\": \"ListItem\",\n                        \"@id\": \"ListItem1\"\n                    },\n                    \"nextItem\": {\n                        \"@type\": \"ListItem\",\n                        \"@id\": \"ListItem3\"\n                    },\n                    \"item\": {\n                        \"@type\": \"Thing\",\n                        \"@id\": \"Thing2\",\n                        \"name\": \"Thing2\",\n                        \"url\": \"https://www.test.com/thing2\"\n                    }\n                },\n                {\n                    \"@type\": \"ListItem\",\n                    \"@id\": \"ListItem3\",\n                    \"name\": \"ListItem3\",\n                    \"position\": 3,\n                    \"previousItem\":  {\n                        \"@type\": \"ListItem\",\n                        \"@id\": \"ListItem2\"\n                    },\n                    \"nextItem\": null,\n                    \"item\": {\n                        \"@type\": \"Thing\",\n                        \"@id\": \"Thing3\",\n                        \"name\": \"Thing3\",\n                        \"url\": \"https://www.test.com/thing3\"\n                    }\n                }\n            ]\n        }\n    }\n\n\n    return {\n        \"@context\": \"https://schema.org/\",\n        \"@type\": \"Thing\",\n        \"@id\": \"thing1\",\n        \"name\": \"thing1\"\n    }\n\n    \n    \n}\n\n\n\n\n\n\nfunction getThings(n, t=\"Thing\"){\n\n    let things = []\n    for(let i=0; i< n; i++){\n        things.push(getThing(i, t))\n    }\n\n    return things\n\n}\n\nfunction getThing(n=0, t=\"Thing\"){\n\n    let r = getRecord(n, t)\n    let thing = new KrThing()\n\n    thing.metadata.credibility = 0.2\n    thing.metadata._record.instrument = {\n        \"@type\": \"Thing\", \"@id\": \"Instrument1\"\n    }\n\n    thing.record = r\n    return thing\n\n}\n\nfunction getRef(record){\n\n\n    return {\"@type\": record['@type'], '@id': record['@id']}\n\n}\n\n\nfunction getRecords(n, t=\"Thing\"){\n\n    let records = []\n    for(let i=0; i< n; i++){\n        records.push(getRecord(i, t))\n    }\n    return records\n}\n\nfunction getRecord(n, t=\"Thing\"){\n\n    let record = {\n        \"@type\": t,\n        \"@id\": t + String(n),\n        \"name\": t + String(n),\n        \"value\": n,\n        \"child\": {\n                \"@context\": \"https://schema.org/\",\n                \"@type\": \"Thing\",\n                \"@id\": 'child_' + t + String(n),\n                \"name\": 'child_' + t + String(n),\n                \"child\":{\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Thing\",\n                        \"@id\": 'child_child_' + t + String(n),\n                        \"name\": 'child_child_' + t + String(n)\n                }\n\n            }\n\n\n    }\n    return record\n}\n","import { krakenHelpers as h } from 'krakenhelpers'\n\n\n\nexport class ClassKrakenHeadingHelpers{\n    constructor(thing){\n        this.thing = thing\n\n    }\n\n\n    get heading1(){\n        return this.getHeading1()\n    }\n    \n    getHeading1(thing){\n\n        thing = thing ?? this.thing\n        \n        switch(thing.record_type){\n            case \"Action\":\n                return thing.p.name || thing.refID\n            default: \n                return thing.p.name || thing.refID\n        }\n    }\n\n    get heading2(){\n        return this.getHeading2()\n    }\n    \n    getHeading2(thing){\n\n        thing = thing ?? this.thing\n        \n        switch(thing.record_type){\n            case \"Action\":\n                return thing.p.name || thing.refID\n                \n            default: \n                return thing.p.name || thing.refID\n        }\n    }\n\n    get textSummary(){\n        return this.getTextSummary()\n    }\n    \n    getTextSummary(thing){\n        \n        thing = thing ?? this.thing\n        \n        switch(thing.record_type){\n            case \"Action\":\n                let action_name = this.getHeading1(thing)\n                let action_status = thing.p.actionStatus.replace('ActionStatus', \"\")  \n                let action_content =  `* ${action_name} - ${action_status}`\n                return action_content\n            \n            case \"ItemList\":\n                let ItemList_name = this.getHeading1(thing)\n                let ItemList_length = String(thing.list.length)\n                let ItemList_content =  `${ItemList_name} (${ItemList_length})`\n                return ItemList_content\n            case \"ListItem\":\n                let ListItem_name = this.getHeading1(thing)\n                let ListItem_position = String(thing.list.length)\n                let ListItem_content =  `[${ListItem_position}] ${ListItem_name}`\n                return ListItem_content\n            default: \n                return thing.p.name || thing.refID\n        }\n    }\n\n    get textDetails(){\n        return this.getTextDetails()\n    }\n    \n    getTextDetails(thing){\n\n        thing = thing ?? this.thing\n        \n        switch(thing.record_type){\n            case \"ItemList\":\n                let contentItems = []\n                contentItems.push(this.getTextSummary(thing))\n                thing.list.items.map(x => contentItems.push('- ' + String(this.getTextSummary(x))))\n                let content = contentItems.join('\\n')\n                return content\n\n            default: \n                return thing.p.name || thing.refID\n        }\n    }\n}","\nimport { ElementForm } from './src/class_element_form.js'\n\nexport class ClassKrakenElement{\n    constructor(thing){\n        this.thing = thing\n    }\n\n    form(url){\n\n        return new ElementForm(this.thing, url)\n        \n    }\n}","import { ElementBase } from \"./class_element_base.js\";\n\nimport { krakenHtml as k } from \"krakenhtml\";\nimport { KrakenSchemas } from \"krakenschema\";\nimport { krakenHelpers as h } from \"krakenhelpers\";\n\n\nlet initializedDb = {}\n\n\nexport class ElementForm {\n    constructor(thing, url) {\n        this._thing = thing;\n        this._url = url;\n        this._elementObject = null;\n        this.initObject();\n    }\n\n    initObject() {\n        this.initObjectContent()\n        this.initMutationObserver()\n        this.initElements()\n    }\n\n    initObjectContent() {\n        let content = k.form.generic(\n            this._url,\n            this._thing.record_type,\n            this._thing.record,\n        );\n        let temp = document.createElement(\"div\");\n        temp.innerHTML = content;\n        let element = temp.firstElementChild;\n        this._elementObject = new ElementBase(element);\n\n        //Temp - correct inputs lacking key data\n        let inputs = element.querySelectorAll(\"input\");\n        for (let i of inputs) {\n            i.setAttribute(\"name\", i.getAttribute(\"id\"));\n            let propertyElement = i.closest(\"krProperty\");\n            if (propertyElement) {\n                propertyElement.setAttribute(\"name\", i.getAttribute(\"id\"));\n            }\n        }\n    }\n    \n\n    initMutationObserver(){\n\n        const config = { attributes: true, childList: true, subtree: true };\n\n        const callback = (mutationList, observer) => {\n          for (const mutation of mutationList) {\n            if (mutation.type === \"childList\") {\n                for(let n of mutation.addedNodes){\n                    this.initElement(n)\n                }\n            } else if (mutation.type === \"attributes\") {\n            }\n          }\n        };\n\n        // Create an observer instance linked to the callback function\n        const observer = new MutationObserver(callback);\n\n        // Start observing the target node for configured mutations\n        observer.observe(this._elementObject.element, config);\n    }\n\n    initElements(){\n\n        // Add id to all objects\n        \n        let classes = ['krThing', 'krProperty', 'krValue']\n       \n        for(let c of classes){\n            let q = '.' + c\n            let elements = this._elementObject.element.querySelectorAll(q);\n            for(let e of elements){ this.initElement(e) }\n        }\n    }\n    \n\n    initElement(element){\n\n        // Check if already initialized\n        if(element.id && element.id != null && element.id != ''){\n            if(initializedDb?.[element.id] == true){ return }\n        }\n\n        // Init ID\n        this.initElementId(element)\n\n        // Init krTing\n        if(element.classList.contains('krThing')){\n            this.initPropertyDrag(element)\n        }\n\n        // Init krProperty\n        if(element.classList.contains('krProperty')){\n            this.initPropertyActionElement(element)\n            this.initPropertyDragDrop(element)\n            this.initPropertyDrag(element)\n        }\n\n        // Init krValue\n        if(element.classList.contains('krValue')){\n            this.initValueActionElement(element)\n            this.initPropertyDragDrop(element)\n            this.initPropertyDrag(element)\n        }\n\n        // Set as initizlized\n        initializedDb[element.id] = true\n        \n    }\n\n    \n    initElementId(element){\n\n        if(!element.id || element.id == null || element.id == ''){\n            element.id = String(crypto.randomUUID())\n        }\n    }\n\n    initPropertyActionElement(element){\n\n        if(initializedDb?.[element.id] == true){ return }\n\n        let thisObject = this\n        let p = new ElementBase(element)\n        p.propertyActionElement.addEventListener(\"click\", (event) => {\n            thisObject.addValue(p);\n        });   \n    }\n\n    initValueActionElement(element){\n\n        if(initializedDb?.[element.id] == true){ return }\n\n        let thisObject = this\n        let v = new ElementBase(element)\n        v.valueActionElement.addEventListener(\"click\", (event) => {\n            thisObject.removeValue(v);\n        });\n    }\n\n \n    initPropertyDragDrop(element){\n\n        \n        if(initializedDb?.[element.id] == true){ return }\n\n        let thisObject = this\n        let p = new ElementBase(element)\n        \n        p.element.addEventListener(\"dragover\", (event) => {\n            event.preventDefault();\n        });\n        \n        p.element.addEventListener(\"drop\", (event) => {\n            event.preventDefault();\n            event.stopPropagation()\n\n           \n            let itemNo = 0\n            for (const item of event.dataTransfer.items) {\n                if (item.kind === \"string\") {\n                    itemNo += 1\n\n                    if(item.type == 'text/plain'){\n                        item.getAsString(value => {\n\n                            console.log('v', value)\n                            try {\n                                value = JSON.parse(value);\n                                \n                            } catch {\n\n                                let tmp = document.createElement('div')\n                                tmp.innerHTML = value\n                                value = tmp.textContent\n                            }\n                            if(p.elementType == 'value'){\n                                let parentP = p.getParentPropertyObject()\n                                thisObject.removeValue(p);\n                                thisObject.addValue(parentP, value);\n                            } else {\n                                thisObject.addValue(p, value);\n                            }\n                            \n                        });\n                    }\n                }\n            }\n        });\n    }\n\n\n    initPropertyDrag(element){\n\n\n        if(initializedDb?.[element.id] == true){ return }\n\n        let thisObject = this\n        let p = new ElementBase(element)\n\n        element.draggable=true\n\n        p.element.addEventListener(\"dragstart\", (event) => {\n            //event.preventDefault();\n            event.stopPropagation()\n\n            console.log('drag', thisObject.getRecord(p))\n\n            event.dataTransfer.setData(\"text/plain\", JSON.stringify(thisObject.getRecord(p)))\n\n        });\n        \n        p.element.addEventListener(\"drag\", (event) => {\n             event.preventDefault();\n            \n        });\n    }\n\n    \n    // Attributes\n\n    get element() {\n        return this._elementObject.element;\n    }\n\n    //\n\n\n    get record(){\n        return this.getRecord(this._elementObject)\n    }\n    \n    getRecord(elementObject) {\n\n        \n        if(elementObject.elementType=='thing'){\n            let record = {}\n            for(let p of elementObject.getPropertyObjects()){\n                let newRecord = this.getRecord(p)\n                record = { ...record, ...this.getRecord(p) } \n            }\n            return record\n        }\n\n        else if(elementObject.elementType=='property'){\n            let record = {}\n            record[elementObject.propertyID] = []\n            for(let v of elementObject.getValueObjects()){\n                record[elementObject.propertyID].push(this.getRecord(v))\n            }\n            \n            return record\n        }\n\n        else if(elementObject.elementType=='value'){\n            \n            let values = []\n            \n            let things = elementObject.getThingObjects()\n            \n            if(things && things.length != 0){\n\n                for(let t of things){\n                    values = values.concat(this.getRecord(t))\n                }\n                \n            } else {\n\n                let inputs\n                inputs = elementObject.element.querySelectorAll('input')\n                for(let i of inputs){\n                    values.push(i.value)\n                   \n                }\n\n                inputs = elementObject.element.querySelectorAll('select')\n                for(let i of inputs){\n                    values.push(i.value)\n                }\n                \n            }\n            \n            return values\n            \n        } \n\n        else {\n            let results = []\n            for(let t of elementObject.getThingObjects()){\n                results.push(this.getRecord(t))\n            }\n            return results\n        }\n        \n    }\n\n    //\n\n    addValue(propertyObject, value) {\n\n\n        if(!propertyObject || propertyObject == null){ return }\n        \n        if(propertyObject.elementType != 'property'){\n            return this.addValue(propertyObject.getParentPropertyObject(), value)\n        }\n        \n        let s0 = KrakenSchemas.get(propertyObject.propertyID);\n        let s = s0.expectedType;\n        \n\n        let noOfValues =\n            propertyObject.propertyBodyElement.children.length;\n        let propertyPath = propertyObject.propertyID.split(\".\");\n        propertyPath[propertyPath.length - 1] =\n            propertyPath[propertyPath.length - 1] +\n            \"[\" +\n            String(noOfValues) +\n            \"]\";\n\n        let content = k.form.json(\n            s.jsonSchemaLight,\n            value,\n            propertyObject.propertyID,\n            propertyPath,\n        );\n        let temp = document.createElement(\"div\");\n        temp.innerHTML = content;\n        let newValueElement = temp.firstElementChild;\n\n        let propertyBody = propertyObject.propertyBodyElement;\n        propertyBody.appendChild(newValueElement);\n    }\n\n    removeValue(valueObject){\n\n        valueObject.element.remove()\n        \n    }\n\n\n}\n","\n\nexport class ElementBase{\n\n    constructor(element){\n\n        this.element = element\n\n    }\n\n\n\n    initObject(){\n\n        \n\n        \n    }\n\n    \n    // Data attributes\n\n\n    get elementType(){\n\n        if(this.element.classList.contains('krThing')){ return 'thing' }\n        if(this.element.classList.contains('krProperty')){ return 'property' }\n        if(this.element.classList.contains('krValue')){ return 'value' }\n        return null\n    }\n    \n    get record_type(){\n\n        let element = this.element.closest('.krThing')\n        if(element){\n            return element.getAttribute('data-record-type')\n        }\n        return null\n    }\n\n    set record_type(value){\n\n        let element = this.element.closest('.krThing')\n        if(element){\n            return element.setAttribute('data-record-type', value)\n        }\n        return null\n    }\n\n    get record_id(){\n\n        let element = this.element.closest('.krThing')\n        if(element){\n            return element.getAttribute('data-record-id')\n        }\n        return null\n    }\n\n    set record_id(value){\n\n        let element = this.element.closest('.krThing')\n        if(element){\n            return element.setAttribute('data-record-id', value)\n        }\n        return null\n    }\n\n    get propertyID(){\n        let value = null\n        let element = this.element.closest('.krProperty')\n        if(element){\n            value =  element.getAttribute('data-propertyID')\n            if(value && value.includes('.')){\n                value = value.split('.')[-1]\n            }\n        }\n        return value\n    }\n\n    get propertyPath(){\n\n        let element = this.element.closest('.krProperty')\n        if(element){\n            return element.getAttribute('data-propertyID')\n        }\n        return null\n    }\n\n    set propertyID(value){\n\n        let element = this.element.closest('.krProperty')\n        if(element){\n            return element.setAttribute('data-propertyID', value)\n        }\n        return null\n    }\n\n    get valueID(){\n\n        let element = this.element.closest('.krValue')\n        if(element){\n            return element.getAttribute('data-valueID')\n        }\n        return null\n    }\n\n    set valueID(value){\n\n        let element = this.element.closest('.krValue')\n        if(element){\n            return element.setAttribute('data-valueID', value)\n        }\n        return null\n    }\n    \n\n    // Object Class Attributes\n\n    getThingObjects(){\n\n        let classNameToGet  = 'krThing'\n\n        let classNameToStopDepth = 'krProperty'\n\n        let propertyElements = getDirectChilds(this.element, classNameToGet, classNameToStopDepth)\n\n        let classObjects = propertyElements.map(x => this.elementToBaseElements(x))\n\n        return classObjects\n\n    }\n\n    getThingObject(record_type, record_id){\n\n        for(let t of this.getThingObjects){\n            if(t.record_type == record_type && t.record_id == record_id){\n                return t\n            }\n        }\n        return null\n        \n    }\n\n    getParentThingObject(){\n\n        let element = this.element.closest('.krThing')\n        let result = null\n        if(element){\n            result = new ElementBase(element)\n        }\n        return result\n    }\n\n    getPropertyObjects(){\n\n        let classNameToGet = 'krProperty'\n\n        let classNameToStopDepth = 'krThing'\n\n        let propertyElements = getDirectChilds(this.element, classNameToGet, classNameToStopDepth)\n\n        let  classObjects = propertyElements.map(x => this.elementToBaseElements(x))\n\n        return classObjects\n        \n    }\n\n    getPropertyObject(propertyID){\n        for(let t of this.getPropertyObjects){\n            if(t.propertyID == propertyID){\n                return t\n            }\n        }\n        return null\n    }\n\n    getParentPropertyObject(){\n\n        let element = this.element.closest('.krProperty')\n        let result = null\n        if(element){\n            result = new ElementBase(element)\n        }\n        return result\n    }\n    \n    getValueObjects(){\n\n        let classNameToGet = 'krValue'\n\n        let classNameToStopDepth = 'krThing'\n\n        let propertyElements = getDirectChilds(this.element, classNameToGet, classNameToStopDepth)\n\n        let  classObjects = propertyElements.map(x => this.elementToBaseElements(x))\n\n        return classObjects\n\n    }\n\n    getValueObject(valueID){\n\n        for(let t of this.getPropertyObjects){\n            if(t.valueID == valueID){\n                return t\n            }\n        }\n        return null\n\n    }\n\n    getParentValueObject(){\n\n        let element = this.element.closest('.krValue')\n        let result = null\n        if(element){\n            result = new ElementBase(element)\n        }\n        return result\n    }\n\n    // Get element\n\n    get thingHeaderElement(){\n        return getDirectChild(this.element, 'krThingHeader', 'krProperty')\n    }\n    get thingBodyElement(){\n        return getDirectChild(this.element, 'krThingBody', 'krProperty')\n    }\n    get thingFooterElement(){\n        return getDirectChild(this.element, 'krThingFooter', 'krProperty')\n    }\n    get thingActionElement(){\n        return getDirectChild(this.element, 'krThingAction', 'krProperty')\n    }\n\n    \n    get propertyHeaderElement(){\n        return getDirectChild(this.element, 'krPropertyHeader', 'krThing')\n    }\n    get propertyBodyElement(){\n        return getDirectChild(this.element, 'krPropertyBody', 'krThing')\n    }\n    get propertyFooterElement(){\n        return getDirectChild(this.element, 'krPropertyFooter', 'krThing')\n    }\n    get propertyActionElement(){\n        return getDirectChild(this.element, 'krPropertyAction', 'krThing')\n    }\n    \n\n    get valueHeaderElement(){\n        return getDirectChild(this.element, 'krValueHeader', 'krThing')\n    }\n    get valueBodyElement(){\n        return getDirectChild(this.element, 'krValueBody', 'krThing')\n    }\n    get valueFooterElement(){\n        return getDirectChild(this.element, 'krValueFooter', 'krThing')\n    }\n    get valueActionElement(){\n        return getDirectChild(this.element, 'krValueAction', 'krThing')\n    }\n\n\n    // \n\n    elementToBaseElements(element){\n        // Converts a an element to a class object\n\n        let newObject = new ElementBase(element)\n        \n        return newObject\n\n    }\n    \n}\n\n\nfunction getDirectChild(element, classNameToGet, classNameToStopDepth){\n    let results = getDirectChilds(element, classNameToGet, classNameToStopDepth)\n    if(results.length == 0){ return null }\n    if(results.length >= 1){ return results[0]}\n}\n\nfunction getDirectChilds(element, classNameToGet, classNameToStopDepth){\n\n    let childs = []\n\n    for(let e of element.children){\n\n        if(e.classList.contains(classNameToGet)){\n            childs.push(e)\n        }\n        if(!e.classList.contains(classNameToStopDepth)){\n            let recursiveChilds = getDirectChilds(e, classNameToGet, classNameToStopDepth)\n            if(recursiveChilds.length > 0){\n                childs = childs.concat(recursiveChilds)\n            }\n        }\n        \n    }\n    return childs\n    \n}"],"names":[],"version":3,"file":"main.js.map"}